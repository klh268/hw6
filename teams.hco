{
  "nstates": 8201,
  "issue": "Safety violation",
  "hvm": {
    "modules": {
        "bag": {
            "file": "C:\\Python310\\Lib\\site-packages\\harmony_model_checker\\modules\\bag.hny",
            "lines": [
                "def empty() returns bg:",
                "    bg = {:}",
                "",
                "def fromSet(s) returns bg:",
                "    bg = { elt:1 for elt in s }",
                "",
                "def fromList(a) returns bg:",
                "    bg = {:}",
                "    for v in a:",
                "        if v in bg:",
                "            bg[v] += 1",
                "        else:",
                "            bg[v] = 1",
                "",
                "builtin multiplicity \"bag$multiplicity\"",
                "def multiplicity(bg, elt) returns count:",
                "    if elt in bg:",
                "        count = bg[elt]",
                "    else:",
                "        count = 0",
                "",
                "builtin size \"bag$size\"",
                "def size(bg) returns count:",
                "    count = 0",
                "    for _:c in bg:",
                "        count += c",
                "",
                "builtin bmin \"bag$bmin\"",
                "def bmin(bg) returns count:",
                "    assert bg != {:}",
                "    count = min(keys(bg))",
                "",
                "builtin bmax \"bag$bmax\"",
                "def bmax(bg) returns count:",
                "    assert bg != {:}",
                "    count = max(keys(bg))",
                "",
                "def bchoose(bg) returns elt:",
                "    elt = choose(keys(bg))",
                "",
                "builtin add \"bag$add\"",
                "def add(bg, elt) returns result:",
                "    result = bg",
                "    if elt in result:",
                "        result[elt] += 1",
                "    else:",
                "        result[elt] = 1",
                "",
                "builtin remove \"bag$remove\"",
                "def remove(bg, elt) returns result:",
                "    result = bg",
                "    if elt in result:",
                "        assert result[elt] > 0",
                "        result[elt] -= 1",
                "        if result[elt] == 0:",
                "            del result[elt]",
                "",
                "# Return set of all subbags of bg of size k",
                "def combinations(bg, k) returns result:",
                "    if k == 0:",
                "        result = { {:} }",
                "    else:",
                "        let n = size(bg):",
                "            if k > n:",
                "                result = {}",
                "            elif k == n:",
                "                result = { bg }",
                "            else:",
                "                let hd = bmin(bg) let tl = remove(bg, hd):",
                "                    result = { add(x, hd) for x in combinations(tl, k - 1) }",
                "                                | combinations(tl, k)"
              ],
            "identifiers": {
                "tl": "local-const",
                "fromSet": "constant",
                "x": "local-const",
                "empty": "constant",
                "multiplicity": "constant",
                "size": "constant",
                "n": "local-const",
                "k": "local-const",
                "hd": "local-const",
                "a": "local-const",
                "bmax": "constant",
                "add": "constant",
                "c": "local-const",
                "combinations": "constant",
                "elt": "local-const",
                "this": "local-var",
                "remove": "constant",
                "v": "local-const",
                "s": "local-const",
                "___": "___",
                "fromList": "constant",
                "bchoose": "constant",
                "bmin": "constant",
                "bg": "local-const"
              }
          },
        "game": {
            "file": "game_broken.hny",
            "lines": [
                "from synch import *",
                "from set import *",
                "",
                "def Game() returns game:",
                "    game = { .waiting: [], .team1: {}, .team2: {}, .lock: Lock(), ",
                "            .active_game: Condition(), .players: Condition(), .complete_game: Condition(), ",
                "            .game_headcount: 0, .exited: []}",
                "",
                "def game_umpire(g):",
                "    acquire(?g->lock)",
                "    while True:",
                "        ",
                "        # If there's an active game, wait for it to finish",
                "        while (len(g->waiting) < 2) or (len(g->team1) != 0) or (len(g->team2) != 0):",
                "            wait(?g->active_game, ?g->lock)",
                "        ",
                "       #let gives me an error here on the next line",
                "        let pairedplayers = len(g->waiting) - (len(g->waiting) % 2):",
                "            var i = 0",
                "            while i < pairedplayers:",
                "                g->team1 = add(g->team1, g->waiting[i])",
                "                g->team1 = add(g->team1, g->waiting[i+1])",
                "                g->team2 = add(g->team2, g->waiting[i])",
                "                g->team2 = add(g->team2, g->waiting[i+1])",
                "                i += 2",
                "",
                "            var j = 0",
                "            while j < pairedplayers:",
                "                del g->waiting[0]",
                "                j += 1",
                "            g->game_headcount = pairedplayers",
                "        g->exited = []",
                "        # Signal players to start the game",
                "        # assert (len(g->waiting) <= 1)",
                "        notifyAll(?g->players)",
                "    release(?g->lock)",
                "",
                "",
                "def game_join(g, id) returns teams:",
                "    acquire(?g->lock)",
                "    # Add player to waiting list",
                "    g->waiting = g->waiting + [id,]",
                "",
                "    # If teams are empty (game complete), signal umpire to make new teams",
                "    if (len(g->team1) == 0) and (len(g->team2) == 0):",
                "        notify(?g->active_game)",
                "    ",
                "    # Wait for the game to start, don't enter unless one team has no players, team sizes uneven,",
                "    # or player is not on either team yet",
                "    while (len(g->team1) != len(g->team2)) or (len(g->team1) == 0) or ((id not in g->team1) and (id not in g->team2)):",
                "        wait(?g->players, ?g->lock)",
                "",
                "    # Return tuple of teams",
                "    teams = (g->team1, g->team2)",
                "",
                "    # Complete game",
                "    g->exited = g->exited + [id,]",
                "    notifyAll(?g->complete_game)",
                "",
                "    release(?g->lock)",
                "",
                "def game_leave(g, id):",
                "    acquire(?g->lock)",
                "    # Wait for game to finish",
                "    while (len(g->exited) != g->game_headcount):",
                "        wait(?g->complete_game, ?g->lock)",
                "    ",
                "    # Remove player from team",
                "    if id in g->team1:",
                "        g->team1 = remove(g->team1, id)",
                "        g->team2 = remove(g->team2, id)",
                "    elif id in g->team2:",
                "        g->team2 = remove(g->team2, id)",
                "        g->team1 = remove(g->team1, id)",
                "    ",
                "    # If teams are empty (game complete), signal umpire to make new teams",
                "    if (len(g->team1) == 0) and (len(g->team2) == 0):",
                "        notify(?g->active_game)",
                "",
                "    release(?g->lock)"
              ],
            "identifiers": {
                "filter": "imported",
                "g": "local-const",
                "held": "imported",
                "issubseteq": "imported",
                "get": "imported",
                "release": "imported",
                "Game": "constant",
                "acquired": "imported",
                "tas": "imported",
                "set": "module",
                "issubsetstrict": "imported",
                "i": "local-var",
                "issubset": "imported",
                "atomic_load": "imported",
                "id": "local-const",
                "cartesian": "imported",
                "map": "imported",
                "synch": "module",
                "BinSema": "imported",
                "add": "imported",
                "cas": "imported",
                "combinations": "imported",
                "pairedplayers": "local-const",
                "Semaphore": "imported",
                "this": "local-var",
                "remove": "imported",
                "Lock": "imported",
                "j": "local-var",
                "wait": "imported",
                "game_umpire": "constant",
                "subsets": "imported",
                "atomic_store": "imported",
                "V": "imported",
                "P": "imported",
                "game_leave": "constant",
                "game_join": "constant",
                "notifyAll": "imported",
                "reduce": "imported",
                "put": "imported",
                "Queue": "imported",
                "___": "___",
                "union": "imported",
                "Condition": "imported",
                "issuperseteq": "imported",
                "notify": "imported",
                "issupersetstrict": "imported",
                "issuperset": "imported",
                "acquire": "imported"
              }
          },
        "set": {
            "file": "C:\\Python310\\Lib\\site-packages\\harmony_model_checker\\modules\\set.hny",
            "lines": [
                "import list",
                "",
                "def issubset(s, t) returns result:",
                "    result = (s & t) == s",
                "",
                "def issubseteq(s, t) returns result:",
                "    result = (s & t) == s",
                "",
                "def issubsetstrict(s, t) returns result:",
                "    result = (s != t) and ((s & t) == s)",
                "",
                "def issuperset(s, t) returns result:",
                "    result = (s & t) == t",
                "",
                "def issuperseteq(s, t) returns result:",
                "    result = (s & t) == t",
                "",
                "def issupersetstrict(s, t) returns result:",
                "    result = (s != t) and ((s & t) == t)",
                "",
                "def add(s, elt) returns result:",
                "    result =  s | {elt}",
                "",
                "def remove(s, elt) returns result:",
                "    result = s - {elt}",
                "",
                "# Return the set of all subsets of S",
                "def subsets(s) returns result:",
                "    result = {s} | union { subsets(s - {e}) for e in s }",
                "",
                "# s is a set of sets.  Return the union of the sets",
                "def union(s) returns result:",
                "    result = {}",
                "    for e in s:",
                "        result |= e",
                "",
                "# d is a list of sets.  Return the Cartesian product.",
                "def cartesian(d) returns result:",
                "    result = { [] } if d == [] else { [e,] + t for t in cartesian(list.tail(d)) for e in d[0] }",
                "",
                "# return set of all subsets of s of size k",
                "def combinations(s, k) returns result:",
                "    if k == 0:",
                "        result = { {} }",
                "    else:",
                "        let n = len(s):",
                "            if k > n:",
                "                result = {}",
                "            elif k == n:",
                "                result = { s }",
                "            else:",
                "                let hd = min(s) let tl = s - {hd}:",
                "                    result = { ({hd} | x) for x in combinations(tl, k - 1) }",
                "                                | combinations(tl, k)",
                "",
                "# Python functools reduce operator",
                "def reduce(f, d, z) returns result:",
                "    result = z",
                "    for e in d:",
                "        result = f(result, e)",
                "",
                "# Return a set of elements satisfying the condition",
                "def filter(cond, s) returns t:",
                "    t = { e for e in s where cond(e) }",
                "",
                "# Return a set of elements mapped by f",
                "def map(f, s) returns t:",
                "    t = { f(e) for e in s }"
              ],
            "identifiers": {
                "f": "local-const",
                "z": "local-const",
                "filter": "constant",
                "d": "local-const",
                "issubseteq": "constant",
                "tl": "local-const",
                "x": "local-const",
                "issubsetstrict": "constant",
                "n": "local-const",
                "issubset": "constant",
                "cartesian": "constant",
                "k": "local-const",
                "e": "local-const",
                "map": "constant",
                "hd": "local-const",
                "add": "constant",
                "t": "local-const",
                "combinations": "constant",
                "elt": "local-const",
                "this": "local-var",
                "remove": "constant",
                "list": "module",
                "subsets": "constant",
                "cond": "local-const",
                "s": "local-const",
                "reduce": "constant",
                "___": "___",
                "union": "constant",
                "issuperseteq": "constant",
                "issupersetstrict": "constant",
                "issuperset": "constant"
              }
          },
        "__main__": {
            "file": "teams.hny",
            "lines": [
                "from game import *",
                "",
                "const NPLAYERS = 6",
                "",
                "thegame = Game()",
                "",
                "def player(id):",
                "    # Attempt to join a game",
                "    let (team1, team2) = game_join(?thegame, id):",
                "        # Assert same length",
                "        assert (len(team1) == len(team2))",
                "",
                "        # Assert the player is in one of the teams",
                "        assert id in (team1 | team2)",
                "",
                "        # Assert the teams are disjoint",
                "        assert (len(team1 & team2) == 0)",
                "",
                "    # game plays  ",
                "",
                "    # Player leaves the game",
                "    game_leave(?thegame, id)",
                "  ",
                "spawn eternal game_umpire(?thegame)",
                "",
                "for id in {1 .. NPLAYERS}:",
                "    spawn player(id)"
              ],
            "identifiers": {
                "team2": "local-const",
                "game": "module",
                "Game": "imported",
                "player": "constant",
                "id": "local-const",
                "this": "local-var",
                "thegame": "global",
                "game_umpire": "imported",
                "NPLAYERS": "constant",
                "game_leave": "imported",
                "game_join": "imported",
                "team1": "local-const",
                "___": "___"
              }
          },
        "synch": {
            "file": "C:\\Python310\\Lib\\site-packages\\harmony_model_checker\\modules\\synch.hny",
            "lines": [
                "import list",
                "import bag",
                "",
                "def atomic_load(p) returns current:",
                "    atomically current = !p",
                "",
                "def atomic_store(p, v):",
                "    atomically !p = v",
                "",
                "def tas(lk) returns oldvalue:",
                "    atomically:",
                "        oldvalue = !lk",
                "        !lk = True",
                "",
                "def cas(p, old, new) returns success:",
                "    atomically:",
                "        success = !p == old",
                "        if success:",
                "            !p = new",
                "",
                "def BinSema(initial) returns sema:",
                "    assert initial in { False, True }",
                "    sema = initial",
                "",
                "def Lock() returns result:",
                "    result = BinSema(False)",
                "",
                "def acquired(binsema) returns result:",
                "    result = !binsema",
                "    ",
                "def held(binsema) returns result:",
                "    result = !binsema",
                "",
                "def acquire(binsema):",
                "    atomically when not !binsema:",
                "        !binsema = True",
                "",
                "def release(binsema):",
                "    atomically:",
                "        assert !binsema",
                "        !binsema = False",
                "",
                "def Condition() returns result:",
                "    result = bag.empty()",
                "",
                "def wait(c, lk):",
                "    var cnt = 0",
                "    let (), ctx = save():",
                "        atomically:",
                "            cnt = bag.multiplicity(!c, ctx)",
                "            !c = bag.add(!c, ctx)",
                "            !lk = False",
                "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):",
                "            !lk = True",
                "",
                "def notify(c):",
                "    atomically if !c != bag.empty():",
                "        !c = bag.remove(!c, bag.bchoose(!c))",
                "",
                "def notifyAll(c):",
                "    atomically !c = bag.empty()",
                "",
                "def Semaphore(cnt) returns result:",
                "    result = cnt",
                "",
                "def P(sema):",
                "    atomically when !sema > 0:",
                "        !sema -= 1",
                "",
                "def V(sema):",
                "    atomically !sema += 1",
                "    ",
                "def Queue() returns result:",
                "    result = []",
                "",
                "def get(q) returns result:",
                "    atomically when !q != []:",
                "        result = list.head(!q)",
                "        !q = list.tail(!q)",
                "",
                "def put(q, item):",
                "    atomically !q = list.append(!q, item)"
              ],
            "identifiers": {
                "held": "constant",
                "get": "constant",
                "initial": "local-const",
                "release": "constant",
                "bag": "module",
                "cnt": "local-const",
                "acquired": "constant",
                "tas": "constant",
                "atomic_load": "constant",
                "BinSema": "constant",
                "c": "local-const",
                "cas": "constant",
                "Semaphore": "constant",
                "this": "local-var",
                "v": "local-const",
                "Lock": "constant",
                "list": "module",
                "lk": "local-const",
                "wait": "constant",
                "binsema": "local-const",
                "p": "local-const",
                "q": "local-const",
                "atomic_store": "constant",
                "V": "constant",
                "new": "local-const",
                "P": "constant",
                "notifyAll": "constant",
                "put": "constant",
                "Queue": "constant",
                "___": "___",
                "old": "local-const",
                "Condition": "constant",
                "sema": "local-const",
                "item": "local-const",
                "notify": "constant",
                "ctx": "local-const",
                "acquire": "constant"
              }
          },
        "list": {
            "file": "C:\\Python310\\Lib\\site-packages\\harmony_model_checker\\modules\\list.hny",
            "lines": [
                "# return s[b:e]",
                "def subseq(s, b, e) returns result:",
                "    result = [ s[x] for x in {b..e-1} ]",
                "",
                "def append(s, e) returns result:",
                "    result = s + [e,]",
                "",
                "def head(s) returns result:",
                "    result = s[0]",
                "",
                "builtin tail \"list$tail\"",
                "def tail(s) returns result:",
                "    result = subseq(s, 1, len(s))",
                "",
                "# sum of a list or set",
                "def sum(a) returns accu:",
                "    accu = 0",
                "    for v in a:",
                "        accu += v",
                "",
                "# convert list (or values of a dict) to a set",
                "def set(a) returns result:",
                "    result = { v for v in a }",
                "",
                "# convert set into a (sorted) list",
                "def list(a) returns result:",
                "    result = [ v for v in a ]",
                "",
                "# convert values of a dictionary into a list",
                "def values(d) returns result:",
                "    result = [ v for _:v in d ]",
                "",
                "# like Python .items()",
                "def items(d) returns result:",
                "    result = [ (k, v) for k:v in d ]",
                "",
                "# quicksort of a list",
                "def qsort(a) returns sorted:",
                "    if a == []:",
                "        sorted = []",
                "    else:",
                "        let (pivot, rest) = head(a), tail(a)",
                "        let lower = [ v for v in rest where v < pivot ]",
                "        let higher = [ v for v in rest where v >= pivot ]:",
                "            sorted = qsort(lower) + [pivot,] + qsort(higher)",
                "",
                "# like Python sorted()",
                "def sorted(d) returns result:",
                "    result = qsort(list(d))",
                "",
                "# like Python reversed()",
                "def reversed(d) returns result:",
                "    let n = len(d):",
                "        result = [ d[n-i] for i in { 1..n } ]",
                "",
                "# like Python index()",
                "def index(d, e) returns i:",
                "    i = 0",
                "    while d[i] != e:",
                "        i += 1",
                "",
                "# like Python startswith (only defined for strings)",
                "def startswith(d, prefix) returns result:",
                "    result = (len(prefix) <= len(d)) and all(d[i] == prefix[i] for i in { 0 .. len(prefix) - 1 })",
                "",
                "# left fold.  Compute f(f(f(z, d[0]), d[1]), d[2] ...)",
                "def foldl(d, f, z) returns result:",
                "    result = z",
                "    for e in d:",
                "        result = f(result, e)",
                "",
                "# right fold.  Compute f(d[0], f(d[1], ..., f(d[n-1], z)))",
                "def foldr(d, f, z) returns result:",
                "    result = z if len d == 0 else f(d[0], foldr(tail(d), f, z))",
                "",
                "# Python functools reduce operator",
                "def reduce(f, d, z) returns result:",
                "    result = foldl(d, f, z)",
                "",
                "# Return a permutation of set s",
                "def permuted(s) returns perm:",
                "    perm = []",
                "    var c = s",
                "    while c != {}:",
                "        let e = choose c:",
                "            perm += [ e, ]",
                "            c -= { e }",
                "",
                "# Return a list of elements satisfying the condition",
                "def filter(cond, s) returns t:",
                "    t = [ e for e in s where cond(e) ]",
                "",
                "# Return a list of elements mapped by f",
                "def map(f, s) returns t:",
                "    t = [ f(e) for e in s ]"
              ],
            "identifiers": {
                "f": "local-const",
                "z": "local-const",
                "filter": "constant",
                "d": "local-const",
                "head": "constant",
                "x": "local-const",
                "set": "constant",
                "n": "local-const",
                "higher": "local-const",
                "i": "local-const",
                "startswith": "constant",
                "foldl": "constant",
                "values": "constant",
                "k": "local-const",
                "reversed": "constant",
                "e": "local-const",
                "map": "constant",
                "qsort": "constant",
                "pivot": "local-const",
                "a": "local-const",
                "c": "local-var",
                "rest": "local-const",
                "b": "local-const",
                "permuted": "constant",
                "this": "local-var",
                "v": "local-const",
                "list": "constant",
                "prefix": "local-const",
                "subseq": "constant",
                "cond": "local-const",
                "s": "local-const",
                "lower": "local-const",
                "reduce": "constant",
                "tail": "constant",
                "___": "___",
                "sum": "constant",
                "items": "constant",
                "foldr": "constant",
                "sorted": "constant",
                "index": "constant",
                "append": "constant"
              }
          }
      },
    "labels": {
        "__end__": 2153
      },
    "pretty": [
        [
            "Frame __init__()",
            "start of method __init__"
          ],
        [
            "Jump 54",
            "jump over method definition: set program counter to 54"
          ],
        [
            "Frame subseq(s, b, e)",
            "start of method subseq"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu3",
            "initialize accumulator for list comprehension: pop a value and store in $accu3"
          ],
        [
            "LoadVar b",
            "push the value of b"
          ],
        [
            "DelVar b",
            "delete method variable b"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary ..",
            "pop 2 values and push the result of applying .."
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(x)",
            "get next element and assign to x; push False or True depending on success"
          ],
        [
            "JumpCond False 26",
            "check if loop is done: pop a value and jump to 26 if the value is False"
          ],
        [
            "LoadVar $accu3",
            "load accumulator: push the value of $accu3"
          ],
        [
            "DelVar $accu3",
            "delete method variable $accu3"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "LoadVar x",
            "push the value of x"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu3",
            "update accumulator: pop a value and store in $accu3"
          ],
        [
            "Jump 14",
            "set program counter to 14"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "LoadVar $accu3",
            "load final accumulator result: push the value of $accu3"
          ],
        [
            "DelVar $accu3",
            "delete method variable $accu3"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 54",
            "jump over method definition: set program counter to 54"
          ],
        [
            "Frame append(s, e)",
            "start of method append"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 54",
            "jump over method definition: set program counter to 54"
          ],
        [
            "Frame head(s)",
            "start of method head"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Push PC(57)",
            "push constant PC(57)"
          ],
        [
            "Builtin(list$tail)",
            "top of stack is a built-in operation called list$tail"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame tail(s)",
            "start of method tail"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(2)",
            "call method PC(2)"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame sum(a)",
            "start of method sum"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "StoreVar accu",
            "pop a value and store in accu"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "DelVar a",
            "delete method variable a"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(v)",
            "get next element and assign to v; push False or True depending on success"
          ],
        [
            "JumpCond False 87",
            "check if loop is done: pop a value and jump to 87 if the value is False"
          ],
        [
            "LoadVar accu",
            "push the value of accu"
          ],
        [
            "DelVar accu",
            "delete method variable accu"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar accu",
            "pop a value and store in accu"
          ],
        [
            "Jump 78",
            "set program counter to 78"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "ReturnOp(accu)",
            "restore caller method state and push accu"
          ],
        [
            "DelVar accu",
            "delete method variable accu"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame set(a)",
            "start of method set"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push {}",
            "initialize accumulator for set comprehension: push constant {}"
          ],
        [
            "StoreVar $accu72",
            "initialize accumulator for set comprehension: pop a value and store in $accu72"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "DelVar a",
            "delete method variable a"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(v)",
            "get next element and assign to v; push False or True depending on success"
          ],
        [
            "JumpCond False 107",
            "check if loop is done: pop a value and jump to 107 if the value is False"
          ],
        [
            "LoadVar $accu72",
            "load accumulator: push the value of $accu72"
          ],
        [
            "DelVar $accu72",
            "delete method variable $accu72"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar $accu72",
            "update accumulator: pop a value and store in $accu72"
          ],
        [
            "Jump 98",
            "set program counter to 98"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "LoadVar $accu72",
            "load final accumulator result: push the value of $accu72"
          ],
        [
            "DelVar $accu72",
            "delete method variable $accu72"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame list(a)",
            "start of method list"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu88",
            "initialize accumulator for list comprehension: pop a value and store in $accu88"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "DelVar a",
            "delete method variable a"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(v)",
            "get next element and assign to v; push False or True depending on success"
          ],
        [
            "JumpCond False 129",
            "check if loop is done: pop a value and jump to 129 if the value is False"
          ],
        [
            "LoadVar $accu88",
            "load accumulator: push the value of $accu88"
          ],
        [
            "DelVar $accu88",
            "delete method variable $accu88"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu88",
            "update accumulator: pop a value and store in $accu88"
          ],
        [
            "Jump 120",
            "set program counter to 120"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "LoadVar $accu88",
            "load final accumulator result: push the value of $accu88"
          ],
        [
            "DelVar $accu88",
            "delete method variable $accu88"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame values(d)",
            "start of method values"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu104",
            "initialize accumulator for list comprehension: pop a value and store in $accu104"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(_, v)",
            "get next element and assign to _:v; push False or True depending on success"
          ],
        [
            "DelVar _",
            "delete method variable _"
          ],
        [
            "JumpCond False 152",
            "check if loop is done: pop a value and jump to 152 if the value is False"
          ],
        [
            "LoadVar $accu104",
            "load accumulator: push the value of $accu104"
          ],
        [
            "DelVar $accu104",
            "delete method variable $accu104"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu104",
            "update accumulator: pop a value and store in $accu104"
          ],
        [
            "Jump 142",
            "set program counter to 142"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "LoadVar $accu104",
            "load final accumulator result: push the value of $accu104"
          ],
        [
            "DelVar $accu104",
            "delete method variable $accu104"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame items(d)",
            "start of method items"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu120",
            "initialize accumulator for list comprehension: pop a value and store in $accu120"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(k, v)",
            "get next element and assign to k:v; push False or True depending on success"
          ],
        [
            "JumpCond False 179",
            "check if loop is done: pop a value and jump to 179 if the value is False"
          ],
        [
            "LoadVar $accu120",
            "load accumulator: push the value of $accu120"
          ],
        [
            "DelVar $accu120",
            "delete method variable $accu120"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu120",
            "update accumulator: pop a value and store in $accu120"
          ],
        [
            "Jump 165",
            "set program counter to 165"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "LoadVar $accu120",
            "load final accumulator result: push the value of $accu120"
          ],
        [
            "DelVar $accu120",
            "delete method variable $accu120"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame qsort(a)",
            "start of method qsort"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 195",
            "pop a value and jump to 195 if the value is False"
          ],
        [
            "DelVar a",
            "delete method variable a"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "StoreVar sorted",
            "pop a value and store in sorted"
          ],
        [
            "Jump 261",
            "set program counter to 261"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "Apply PC(45)",
            "call method PC(45)"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "DelVar a",
            "delete method variable a"
          ],
        [
            "Apply PC(57)",
            "call method PC(57)"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar (pivot, rest)",
            "pop a value and store in (pivot, rest)"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu155",
            "initialize accumulator for list comprehension: pop a value and store in $accu155"
          ],
        [
            "LoadVar rest",
            "push the value of rest"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "Cut(v)",
            "get next element and assign to v; push False or True depending on success"
          ],
        [
            "JumpCond False 222",
            "check if loop is done: pop a value and jump to 222 if the value is False"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "LoadVar pivot",
            "push the value of pivot"
          ],
        [
            "2-ary <",
            "pop 2 values and push the result of applying <"
          ],
        [
            "JumpCond False 208",
            "pop a value and jump to 208 if the value is False"
          ],
        [
            "LoadVar $accu155",
            "load accumulator: push the value of $accu155"
          ],
        [
            "DelVar $accu155",
            "delete method variable $accu155"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu155",
            "update accumulator: pop a value and store in $accu155"
          ],
        [
            "Jump 208",
            "set program counter to 208"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "LoadVar $accu155",
            "load final accumulator result: push the value of $accu155"
          ],
        [
            "DelVar $accu155",
            "delete method variable $accu155"
          ],
        [
            "StoreVar lower",
            "pop a value and store in lower"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu172",
            "initialize accumulator for list comprehension: pop a value and store in $accu172"
          ],
        [
            "LoadVar rest",
            "push the value of rest"
          ],
        [
            "DelVar rest",
            "delete method variable rest"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "Cut(v)",
            "get next element and assign to v; push False or True depending on success"
          ],
        [
            "JumpCond False 245",
            "check if loop is done: pop a value and jump to 245 if the value is False"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "LoadVar pivot",
            "push the value of pivot"
          ],
        [
            "2-ary >=",
            "pop 2 values and push the result of applying >="
          ],
        [
            "JumpCond False 231",
            "pop a value and jump to 231 if the value is False"
          ],
        [
            "LoadVar $accu172",
            "load accumulator: push the value of $accu172"
          ],
        [
            "DelVar $accu172",
            "delete method variable $accu172"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu172",
            "update accumulator: pop a value and store in $accu172"
          ],
        [
            "Jump 231",
            "set program counter to 231"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "LoadVar $accu172",
            "load final accumulator result: push the value of $accu172"
          ],
        [
            "DelVar $accu172",
            "delete method variable $accu172"
          ],
        [
            "StoreVar higher",
            "pop a value and store in higher"
          ],
        [
            "LoadVar lower",
            "push the value of lower"
          ],
        [
            "DelVar lower",
            "delete method variable lower"
          ],
        [
            "Apply PC(186)",
            "call method PC(186)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar pivot",
            "push the value of pivot"
          ],
        [
            "DelVar pivot",
            "delete method variable pivot"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar higher",
            "push the value of higher"
          ],
        [
            "DelVar higher",
            "delete method variable higher"
          ],
        [
            "Apply PC(186)",
            "call method PC(186)"
          ],
        [
            "3-ary +",
            "pop 3 values and push the result of applying +"
          ],
        [
            "StoreVar sorted",
            "pop a value and store in sorted"
          ],
        [
            "ReturnOp(sorted)",
            "restore caller method state and push sorted"
          ],
        [
            "DelVar sorted",
            "delete method variable sorted"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame sorted(d)",
            "start of method sorted"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Apply PC(113)",
            "call method PC(113)"
          ],
        [
            "Apply PC(186)",
            "call method PC(186)"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame reversed(d)",
            "start of method reversed"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "StoreVar n",
            "pop a value and store in n"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu211",
            "initialize accumulator for list comprehension: pop a value and store in $accu211"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "LoadVar n",
            "push the value of n"
          ],
        [
            "2-ary ..",
            "pop 2 values and push the result of applying .."
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(i)",
            "get next element and assign to i; push False or True depending on success"
          ],
        [
            "JumpCond False 298",
            "check if loop is done: pop a value and jump to 298 if the value is False"
          ],
        [
            "LoadVar $accu211",
            "load accumulator: push the value of $accu211"
          ],
        [
            "DelVar $accu211",
            "delete method variable $accu211"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "LoadVar n",
            "push the value of n"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu211",
            "update accumulator: pop a value and store in $accu211"
          ],
        [
            "Jump 284",
            "set program counter to 284"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "DelVar n",
            "delete method variable n"
          ],
        [
            "LoadVar $accu211",
            "load final accumulator result: push the value of $accu211"
          ],
        [
            "DelVar $accu211",
            "delete method variable $accu211"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame index(d, e)",
            "start of method index"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "StoreVar i",
            "pop a value and store in i"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond False 322",
            "pop a value and jump to 322 if the value is False"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar i",
            "pop a value and store in i"
          ],
        [
            "Jump 309",
            "set program counter to 309"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "ReturnOp(i)",
            "restore caller method state and push i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame startswith(d, prefix)",
            "start of method startswith"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar prefix",
            "push the value of prefix"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "2-ary <=",
            "pop 2 values and push the result of applying <="
          ],
        [
            "JumpCond False 368",
            "pop a value and jump to 368 if the value is False"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu257",
            "initialize accumulator for list comprehension: pop a value and store in $accu257"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "LoadVar prefix",
            "push the value of prefix"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary ..",
            "pop 2 values and push the result of applying .."
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(i)",
            "get next element and assign to i; push False or True depending on success"
          ],
        [
            "JumpCond False 361",
            "check if loop is done: pop a value and jump to 361 if the value is False"
          ],
        [
            "LoadVar $accu257",
            "load accumulator: push the value of $accu257"
          ],
        [
            "DelVar $accu257",
            "delete method variable $accu257"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "LoadVar prefix",
            "push the value of prefix"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu257",
            "update accumulator: pop a value and store in $accu257"
          ],
        [
            "Jump 344",
            "set program counter to 344"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "DelVar prefix",
            "delete method variable prefix"
          ],
        [
            "LoadVar $accu257",
            "load final accumulator result: push the value of $accu257"
          ],
        [
            "DelVar $accu257",
            "delete method variable $accu257"
          ],
        [
            "1-ary all",
            "pop 1 value and push the result of applying all"
          ],
        [
            "Jump 371",
            "set program counter to 371"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "DelVar prefix",
            "delete method variable prefix"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame foldl(d, f, z)",
            "start of method foldl"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar z",
            "push the value of z"
          ],
        [
            "DelVar z",
            "delete method variable z"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(e)",
            "get next element and assign to e; push False or True depending on success"
          ],
        [
            "JumpCond False 396",
            "check if loop is done: pop a value and jump to 396 if the value is False"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 382",
            "set program counter to 382"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame foldr(d, f, z)",
            "start of method foldr"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 412",
            "pop a value and jump to 412 if the value is False"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "LoadVar z",
            "push the value of z"
          ],
        [
            "DelVar z",
            "delete method variable z"
          ],
        [
            "Jump 434",
            "set program counter to 434"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Apply PC(57)",
            "call method PC(57)"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar z",
            "push the value of z"
          ],
        [
            "DelVar z",
            "delete method variable z"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(400)",
            "call method PC(400)"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame reduce(f, d, z)",
            "start of method reduce"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar z",
            "push the value of z"
          ],
        [
            "DelVar z",
            "delete method variable z"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(374)",
            "call method PC(374)"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame permuted(s)",
            "start of method permuted"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "StoreVar perm",
            "pop a value and store in perm"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "StoreVar c",
            "pop a value and store in c"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond False 482",
            "pop a value and jump to 482 if the value is False"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Choose",
            "pop a set value and push one of its elements"
          ],
        [
            "StoreVar e",
            "pop a value and store in e"
          ],
        [
            "LoadVar perm",
            "push the value of perm"
          ],
        [
            "DelVar perm",
            "delete method variable perm"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar perm",
            "pop a value and store in perm"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "StoreVar c",
            "pop a value and store in c"
          ],
        [
            "Jump 459",
            "set program counter to 459"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "ReturnOp(perm)",
            "restore caller method state and push perm"
          ],
        [
            "DelVar perm",
            "delete method variable perm"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame filter(cond, s)",
            "start of method filter"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu377",
            "initialize accumulator for list comprehension: pop a value and store in $accu377"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "Cut(e)",
            "get next element and assign to e; push False or True depending on success"
          ],
        [
            "JumpCond False 507",
            "check if loop is done: pop a value and jump to 507 if the value is False"
          ],
        [
            "LoadVar cond",
            "push the value of cond"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "JumpCond False 492",
            "pop a value and jump to 492 if the value is False"
          ],
        [
            "LoadVar $accu377",
            "load accumulator: push the value of $accu377"
          ],
        [
            "DelVar $accu377",
            "delete method variable $accu377"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu377",
            "update accumulator: pop a value and store in $accu377"
          ],
        [
            "Jump 492",
            "set program counter to 492"
          ],
        [
            "DelVar cond",
            "delete method variable cond"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "LoadVar $accu377",
            "load final accumulator result: push the value of $accu377"
          ],
        [
            "DelVar $accu377",
            "delete method variable $accu377"
          ],
        [
            "StoreVar t",
            "pop a value and store in t"
          ],
        [
            "ReturnOp(t)",
            "restore caller method state and push t"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame map(f, s)",
            "start of method map"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu398",
            "initialize accumulator for list comprehension: pop a value and store in $accu398"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(e)",
            "get next element and assign to e; push False or True depending on success"
          ],
        [
            "JumpCond False 533",
            "check if loop is done: pop a value and jump to 533 if the value is False"
          ],
        [
            "LoadVar $accu398",
            "load accumulator: push the value of $accu398"
          ],
        [
            "DelVar $accu398",
            "delete method variable $accu398"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu398",
            "update accumulator: pop a value and store in $accu398"
          ],
        [
            "Jump 521",
            "set program counter to 521"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "LoadVar $accu398",
            "load final accumulator result: push the value of $accu398"
          ],
        [
            "DelVar $accu398",
            "delete method variable $accu398"
          ],
        [
            "StoreVar t",
            "pop a value and store in t"
          ],
        [
            "ReturnOp(t)",
            "restore caller method state and push t"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame empty()",
            "start of method empty"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "StoreVar bg",
            "pop a value and store in bg"
          ],
        [
            "ReturnOp(bg)",
            "restore caller method state and push bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame fromSet(s)",
            "start of method fromSet"
          ],
        [
            "Push {:}",
            "initialize accumulator for dict comprehension: push constant {:}"
          ],
        [
            "StoreVar $accu422",
            "initialize accumulator for dict comprehension: pop a value and store in $accu422"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(elt)",
            "get next element and assign to elt; push False or True depending on success"
          ],
        [
            "JumpCond False 563",
            "check if loop is done: pop a value and jump to 563 if the value is False"
          ],
        [
            "LoadVar $accu422",
            "load accumulator: push the value of $accu422"
          ],
        [
            "DelVar $accu422",
            "delete method variable $accu422"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "StoreVar $accu422",
            "update accumulator: pop a value and store in $accu422"
          ],
        [
            "Jump 553",
            "set program counter to 553"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "LoadVar $accu422",
            "load final accumulator result: push the value of $accu422"
          ],
        [
            "DelVar $accu422",
            "delete method variable $accu422"
          ],
        [
            "StoreVar bg",
            "pop a value and store in bg"
          ],
        [
            "ReturnOp(bg)",
            "restore caller method state and push bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame fromList(a)",
            "start of method fromList"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "StoreVar bg",
            "pop a value and store in bg"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "DelVar a",
            "delete method variable a"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(v)",
            "get next element and assign to v; push False or True depending on success"
          ],
        [
            "JumpCond False 599",
            "check if loop is done: pop a value and jump to 599 if the value is False"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 592",
            "pop a value and jump to 592 if the value is False"
          ],
        [
            "Push ?bg",
            "push constant ?bg"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar [bg]",
            "pop a value and the address of a method variable and store the value at that address"
          ],
        [
            "Jump 576",
            "set program counter to 576"
          ],
        [
            "Push ?bg",
            "push constant ?bg"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "StoreVar [bg]",
            "pop a value and the address of a method variable and store the value at that address"
          ],
        [
            "Jump 576",
            "set program counter to 576"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "ReturnOp(bg)",
            "restore caller method state and push bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "Push PC(605)",
            "push constant PC(605)"
          ],
        [
            "Builtin(bag$multiplicity)",
            "top of stack is a built-in operation called bag$multiplicity"
          ],
        [
            "Jump 624",
            "jump over method definition: set program counter to 624"
          ],
        [
            "Frame multiplicity(bg, elt)",
            "start of method multiplicity"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 618",
            "pop a value and jump to 618 if the value is False"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "Jump 622",
            "set program counter to 622"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "ReturnOp(count)",
            "restore caller method state and push count"
          ],
        [
            "DelVar count",
            "delete method variable count"
          ],
        [
            "Push PC(627)",
            "push constant PC(627)"
          ],
        [
            "Builtin(bag$size)",
            "top of stack is a built-in operation called bag$size"
          ],
        [
            "Jump 646",
            "jump over method definition: set program counter to 646"
          ],
        [
            "Frame size(bg)",
            "start of method size"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(_, c)",
            "get next element and assign to _:c; push False or True depending on success"
          ],
        [
            "DelVar _",
            "delete method variable _"
          ],
        [
            "JumpCond False 643",
            "check if loop is done: pop a value and jump to 643 if the value is False"
          ],
        [
            "LoadVar count",
            "push the value of count"
          ],
        [
            "DelVar count",
            "delete method variable count"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "Jump 633",
            "set program counter to 633"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "ReturnOp(count)",
            "restore caller method state and push count"
          ],
        [
            "DelVar count",
            "delete method variable count"
          ],
        [
            "Push PC(649)",
            "push constant PC(649)"
          ],
        [
            "Builtin(bag$bmin)",
            "top of stack is a built-in operation called bag$bmin"
          ],
        [
            "Jump 665",
            "jump over method definition: set program counter to 665"
          ],
        [
            "Frame bmin(bg)",
            "start of method bmin"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "1-ary keys",
            "pop 1 value and push the result of applying keys"
          ],
        [
            "1-ary min",
            "pop 1 value and push the result of applying min"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "ReturnOp(count)",
            "restore caller method state and push count"
          ],
        [
            "DelVar count",
            "delete method variable count"
          ],
        [
            "Push PC(668)",
            "push constant PC(668)"
          ],
        [
            "Builtin(bag$bmax)",
            "top of stack is a built-in operation called bag$bmax"
          ],
        [
            "Jump 693",
            "jump over method definition: set program counter to 693"
          ],
        [
            "Frame bmax(bg)",
            "start of method bmax"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "1-ary keys",
            "pop 1 value and push the result of applying keys"
          ],
        [
            "1-ary max",
            "pop 1 value and push the result of applying max"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "ReturnOp(count)",
            "restore caller method state and push count"
          ],
        [
            "DelVar count",
            "delete method variable count"
          ],
        [
            "Jump 693",
            "jump over method definition: set program counter to 693"
          ],
        [
            "Frame bchoose(bg)",
            "start of method bchoose"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "1-ary keys",
            "pop 1 value and push the result of applying keys"
          ],
        [
            "Choose",
            "pop a set value and push one of its elements"
          ],
        [
            "StoreVar elt",
            "pop a value and store in elt"
          ],
        [
            "ReturnOp(elt)",
            "restore caller method state and push elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "Push PC(696)",
            "push constant PC(696)"
          ],
        [
            "Builtin(bag$add)",
            "top of stack is a built-in operation called bag$add"
          ],
        [
            "Jump 722",
            "jump over method definition: set program counter to 722"
          ],
        [
            "Frame add(bg, elt)",
            "start of method add"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 715",
            "pop a value and jump to 715 if the value is False"
          ],
        [
            "Push ?result",
            "push constant ?result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar [result]",
            "pop a value and the address of a method variable and store the value at that address"
          ],
        [
            "Jump 721",
            "set program counter to 721"
          ],
        [
            "Push ?result",
            "push constant ?result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "StoreVar [result]",
            "pop a value and the address of a method variable and store the value at that address"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Push PC(725)",
            "push constant PC(725)"
          ],
        [
            "Builtin(bag$remove)",
            "top of stack is a built-in operation called bag$remove"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame remove(bg, elt)",
            "start of method remove"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 765",
            "pop a value and jump to 765 if the value is False"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary >",
            "pop 2 values and push the result of applying >"
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Push ?result",
            "push constant ?result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "StoreVar [result]",
            "pop a value and the address of a method variable and store the value at that address"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 765",
            "pop a value and jump to 765 if the value is False"
          ],
        [
            "Push ?result",
            "push constant ?result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "DelVar [result]",
            "pop an address of a method variable and delete that variable"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame combinations(bg, k)",
            "start of method combinations"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 781",
            "pop a value and jump to 781 if the value is False"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 856",
            "set program counter to 856"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "Apply PC(627)",
            "call method PC(627)"
          ],
        [
            "StoreVar n",
            "pop a value and store in n"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "LoadVar n",
            "push the value of n"
          ],
        [
            "2-ary >",
            "pop 2 values and push the result of applying >"
          ],
        [
            "JumpCond False 794",
            "pop a value and jump to 794 if the value is False"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "DelVar n",
            "delete method variable n"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 856",
            "set program counter to 856"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "LoadVar n",
            "push the value of n"
          ],
        [
            "DelVar n",
            "delete method variable n"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 806",
            "pop a value and jump to 806 if the value is False"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 856",
            "set program counter to 856"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "Apply PC(649)",
            "call method PC(649)"
          ],
        [
            "StoreVar hd",
            "pop a value and store in hd"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar hd",
            "push the value of hd"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(725)",
            "call method PC(725)"
          ],
        [
            "StoreVar tl",
            "pop a value and store in tl"
          ],
        [
            "Push {}",
            "initialize accumulator for set comprehension: push constant {}"
          ],
        [
            "StoreVar $accu645",
            "initialize accumulator for set comprehension: pop a value and store in $accu645"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar tl",
            "push the value of tl"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(768)",
            "call method PC(768)"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(x)",
            "get next element and assign to x; push False or True depending on success"
          ],
        [
            "JumpCond False 842",
            "check if loop is done: pop a value and jump to 842 if the value is False"
          ],
        [
            "LoadVar $accu645",
            "load accumulator: push the value of $accu645"
          ],
        [
            "DelVar $accu645",
            "delete method variable $accu645"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar x",
            "push the value of x"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar hd",
            "push the value of hd"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(696)",
            "call method PC(696)"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar $accu645",
            "update accumulator: pop a value and store in $accu645"
          ],
        [
            "Jump 828",
            "set program counter to 828"
          ],
        [
            "DelVar hd",
            "delete method variable hd"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "LoadVar $accu645",
            "load final accumulator result: push the value of $accu645"
          ],
        [
            "DelVar $accu645",
            "delete method variable $accu645"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar tl",
            "push the value of tl"
          ],
        [
            "DelVar tl",
            "delete method variable tl"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(768)",
            "call method PC(768)"
          ],
        [
            "2-ary |",
            "pop 2 values and push the result of applying |"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame atomic_load(p)",
            "start of method atomic_load"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar p",
            "push the value of p"
          ],
        [
            "DelVar p",
            "delete method variable p"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar current",
            "pop a value and store in current"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(current)",
            "restore caller method state and push current"
          ],
        [
            "DelVar current",
            "delete method variable current"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame atomic_store(p, v)",
            "start of method atomic_store"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar p",
            "push the value of p"
          ],
        [
            "DelVar p",
            "delete method variable p"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame tas(lk)",
            "start of method tas"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar lk",
            "push the value of lk"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar oldvalue",
            "pop a value and store in oldvalue"
          ],
        [
            "LoadVar lk",
            "push the value of lk"
          ],
        [
            "DelVar lk",
            "delete method variable lk"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(oldvalue)",
            "restore caller method state and push oldvalue"
          ],
        [
            "DelVar oldvalue",
            "delete method variable oldvalue"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame cas(p, old, new)",
            "start of method cas"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar p",
            "push the value of p"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "LoadVar old",
            "push the value of old"
          ],
        [
            "DelVar old",
            "delete method variable old"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "StoreVar success",
            "pop a value and store in success"
          ],
        [
            "LoadVar success",
            "push the value of success"
          ],
        [
            "JumpCond False 906",
            "pop a value and jump to 906 if the value is False"
          ],
        [
            "LoadVar p",
            "push the value of p"
          ],
        [
            "DelVar p",
            "delete method variable p"
          ],
        [
            "LoadVar new",
            "push the value of new"
          ],
        [
            "DelVar new",
            "delete method variable new"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "DelVar new",
            "delete method variable new"
          ],
        [
            "DelVar p",
            "delete method variable p"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(success)",
            "restore caller method state and push success"
          ],
        [
            "DelVar success",
            "delete method variable success"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame BinSema(initial)",
            "start of method BinSema"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar initial",
            "push the value of initial"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "LoadVar initial",
            "push the value of initial"
          ],
        [
            "DelVar initial",
            "delete method variable initial"
          ],
        [
            "StoreVar sema",
            "pop a value and store in sema"
          ],
        [
            "ReturnOp(sema)",
            "restore caller method state and push sema"
          ],
        [
            "DelVar sema",
            "delete method variable sema"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame Lock()",
            "start of method Lock"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "Apply PC(912)",
            "call method PC(912)"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame acquired(binsema)",
            "start of method acquired"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar binsema",
            "push the value of binsema"
          ],
        [
            "DelVar binsema",
            "delete method variable binsema"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame held(binsema)",
            "start of method held"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar binsema",
            "push the value of binsema"
          ],
        [
            "DelVar binsema",
            "delete method variable binsema"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame acquire(binsema)",
            "start of method acquire"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar binsema",
            "push the value of binsema"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary not",
            "pop 1 value and push the result of applying not"
          ],
        [
            "JumpCond False 962",
            "pop a value and jump to 962 if the value is False"
          ],
        [
            "Jump 965",
            "set program counter to 965"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Jump 955",
            "set program counter to 955"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "LoadVar binsema",
            "push the value of binsema"
          ],
        [
            "DelVar binsema",
            "delete method variable binsema"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame release(binsema)",
            "start of method release"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar binsema",
            "push the value of binsema"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "LoadVar binsema",
            "push the value of binsema"
          ],
        [
            "DelVar binsema",
            "delete method variable binsema"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame Condition()",
            "start of method Condition"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push PC(541)",
            "push constant PC(541)"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame wait(c, lk)",
            "start of method wait"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "StoreVar cnt",
            "pop a value and store in cnt"
          ],
        [
            "DelVar cnt",
            "delete method variable cnt"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Save",
            "pop a value and save context"
          ],
        [
            "Continue",
            "a no-op, must follow a Stop or Save operation"
          ],
        [
            "StoreVar ((), ctx)",
            "pop a value and store in ((), ctx)"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "Push PC(605)",
            "push constant PC(605)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar ctx",
            "push the value of ctx"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar cnt",
            "pop a value and store in cnt"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Push PC(696)",
            "push constant PC(696)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar ctx",
            "push the value of ctx"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar lk",
            "push the value of lk"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar lk",
            "push the value of lk"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary not",
            "pop 1 value and push the result of applying not"
          ],
        [
            "JumpCond False 1050",
            "pop a value and jump to 1050 if the value is False"
          ],
        [
            "Push PC(605)",
            "push constant PC(605)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar ctx",
            "push the value of ctx"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "LoadVar cnt",
            "push the value of cnt"
          ],
        [
            "2-ary <=",
            "pop 2 values and push the result of applying <="
          ],
        [
            "Jump 1051",
            "set program counter to 1051"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "JumpCond False 1056",
            "pop a value and jump to 1056 if the value is False"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "DelVar cnt",
            "delete method variable cnt"
          ],
        [
            "DelVar ctx",
            "delete method variable ctx"
          ],
        [
            "Jump 1059",
            "set program counter to 1059"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Jump 1032",
            "set program counter to 1032"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "LoadVar lk",
            "push the value of lk"
          ],
        [
            "DelVar lk",
            "delete method variable lk"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame notify(c)",
            "start of method notify"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push PC(541)",
            "push constant PC(541)"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond False 1093",
            "pop a value and jump to 1093 if the value is False"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Push PC(725)",
            "push constant PC(725)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push PC(685)",
            "push constant PC(685)"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame notifyAll(c)",
            "start of method notifyAll"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "Push PC(541)",
            "push constant PC(541)"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame Semaphore(cnt)",
            "start of method Semaphore"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar cnt",
            "push the value of cnt"
          ],
        [
            "DelVar cnt",
            "delete method variable cnt"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame P(sema)",
            "start of method P"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar sema",
            "push the value of sema"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary >",
            "pop 2 values and push the result of applying >"
          ],
        [
            "JumpCond False 1125",
            "pop a value and jump to 1125 if the value is False"
          ],
        [
            "Jump 1128",
            "set program counter to 1128"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Jump 1117",
            "set program counter to 1117"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "LoadVar sema",
            "push the value of sema"
          ],
        [
            "DelVar sema",
            "delete method variable sema"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame V(sema)",
            "start of method V"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar sema",
            "push the value of sema"
          ],
        [
            "DelVar sema",
            "delete method variable sema"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame Queue()",
            "start of method Queue"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame get(q)",
            "start of method get"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar q",
            "push the value of q"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond False 1167",
            "pop a value and jump to 1167 if the value is False"
          ],
        [
            "Jump 1170",
            "set program counter to 1170"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Jump 1158",
            "set program counter to 1158"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "Push PC(45)",
            "push constant PC(45)"
          ],
        [
            "LoadVar q",
            "push the value of q"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "LoadVar q",
            "push the value of q"
          ],
        [
            "Push PC(57)",
            "push constant PC(57)"
          ],
        [
            "LoadVar q",
            "push the value of q"
          ],
        [
            "DelVar q",
            "delete method variable q"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame put(q, item)",
            "start of method put"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar q",
            "push the value of q"
          ],
        [
            "Push PC(33)",
            "push constant PC(33)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar q",
            "push the value of q"
          ],
        [
            "DelVar q",
            "delete method variable q"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar item",
            "push the value of item"
          ],
        [
            "DelVar item",
            "delete method variable item"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame issubset(s, t)",
            "start of method issubset"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "LoadVar t",
            "push the value of t"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "2-ary &",
            "pop 2 values and push the result of applying &"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame issubseteq(s, t)",
            "start of method issubseteq"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "LoadVar t",
            "push the value of t"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "2-ary &",
            "pop 2 values and push the result of applying &"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame issubsetstrict(s, t)",
            "start of method issubsetstrict"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "LoadVar t",
            "push the value of t"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond False 1244",
            "pop a value and jump to 1244 if the value is False"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "LoadVar t",
            "push the value of t"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "2-ary &",
            "pop 2 values and push the result of applying &"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "Jump 1247",
            "set program counter to 1247"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame issuperset(s, t)",
            "start of method issuperset"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "LoadVar t",
            "push the value of t"
          ],
        [
            "2-ary &",
            "pop 2 values and push the result of applying &"
          ],
        [
            "LoadVar t",
            "push the value of t"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame issuperseteq(s, t)",
            "start of method issuperseteq"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "LoadVar t",
            "push the value of t"
          ],
        [
            "2-ary &",
            "pop 2 values and push the result of applying &"
          ],
        [
            "LoadVar t",
            "push the value of t"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame issupersetstrict(s, t)",
            "start of method issupersetstrict"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "LoadVar t",
            "push the value of t"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond False 1288",
            "pop a value and jump to 1288 if the value is False"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "LoadVar t",
            "push the value of t"
          ],
        [
            "2-ary &",
            "pop 2 values and push the result of applying &"
          ],
        [
            "LoadVar t",
            "push the value of t"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "Jump 1291",
            "set program counter to 1291"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame add(s, elt)",
            "start of method add"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "2-ary |",
            "pop 2 values and push the result of applying |"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame remove(s, elt)",
            "start of method remove"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame subsets(s)",
            "start of method subsets"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "Push {}",
            "initialize accumulator for set comprehension: push constant {}"
          ],
        [
            "StoreVar $accu1076",
            "initialize accumulator for set comprehension: pop a value and store in $accu1076"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(e)",
            "get next element and assign to e; push False or True depending on success"
          ],
        [
            "JumpCond False 1341",
            "check if loop is done: pop a value and jump to 1341 if the value is False"
          ],
        [
            "LoadVar $accu1076",
            "load accumulator: push the value of $accu1076"
          ],
        [
            "DelVar $accu1076",
            "delete method variable $accu1076"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "Apply PC(1318)",
            "call method PC(1318)"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar $accu1076",
            "update accumulator: pop a value and store in $accu1076"
          ],
        [
            "Jump 1327",
            "set program counter to 1327"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "LoadVar $accu1076",
            "load final accumulator result: push the value of $accu1076"
          ],
        [
            "DelVar $accu1076",
            "delete method variable $accu1076"
          ],
        [
            "Apply PC(1350)",
            "call method PC(1350)"
          ],
        [
            "2-ary |",
            "pop 2 values and push the result of applying |"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame union(s)",
            "start of method union"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(e)",
            "get next element and assign to e; push False or True depending on success"
          ],
        [
            "JumpCond False 1366",
            "check if loop is done: pop a value and jump to 1366 if the value is False"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary |",
            "pop 2 values and push the result of applying |"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 1357",
            "set program counter to 1357"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame cartesian(d)",
            "start of method cartesian"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 1380",
            "pop a value and jump to 1380 if the value is False"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "Jump 1415",
            "set program counter to 1415"
          ],
        [
            "Push {}",
            "initialize accumulator for set comprehension: push constant {}"
          ],
        [
            "StoreVar $accu1121",
            "initialize accumulator for set comprehension: pop a value and store in $accu1121"
          ],
        [
            "Push PC(57)",
            "push constant PC(57)"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Apply PC(1369)",
            "call method PC(1369)"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(t)",
            "get next element and assign to t; push False or True depending on success"
          ],
        [
            "JumpCond False 1411",
            "check if loop is done: pop a value and jump to 1411 if the value is False"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(e)",
            "get next element and assign to e; push False or True depending on success"
          ],
        [
            "JumpCond False 1408",
            "check if loop is done: pop a value and jump to 1408 if the value is False"
          ],
        [
            "LoadVar $accu1121",
            "load accumulator: push the value of $accu1121"
          ],
        [
            "DelVar $accu1121",
            "delete method variable $accu1121"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar t",
            "push the value of t"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar $accu1121",
            "update accumulator: pop a value and store in $accu1121"
          ],
        [
            "Jump 1395",
            "set program counter to 1395"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "Jump 1388",
            "set program counter to 1388"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "LoadVar $accu1121",
            "load final accumulator result: push the value of $accu1121"
          ],
        [
            "DelVar $accu1121",
            "delete method variable $accu1121"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame combinations(s, k)",
            "start of method combinations"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 1431",
            "pop a value and jump to 1431 if the value is False"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 1504",
            "set program counter to 1504"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "StoreVar n",
            "pop a value and store in n"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "LoadVar n",
            "push the value of n"
          ],
        [
            "2-ary >",
            "pop 2 values and push the result of applying >"
          ],
        [
            "JumpCond False 1444",
            "pop a value and jump to 1444 if the value is False"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "DelVar n",
            "delete method variable n"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 1504",
            "set program counter to 1504"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "LoadVar n",
            "push the value of n"
          ],
        [
            "DelVar n",
            "delete method variable n"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 1456",
            "pop a value and jump to 1456 if the value is False"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 1504",
            "set program counter to 1504"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "1-ary min",
            "pop 1 value and push the result of applying min"
          ],
        [
            "StoreVar hd",
            "pop a value and store in hd"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar hd",
            "push the value of hd"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "StoreVar tl",
            "pop a value and store in tl"
          ],
        [
            "Push {}",
            "initialize accumulator for set comprehension: push constant {}"
          ],
        [
            "StoreVar $accu1190",
            "initialize accumulator for set comprehension: pop a value and store in $accu1190"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar tl",
            "push the value of tl"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(1418)",
            "call method PC(1418)"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(x)",
            "get next element and assign to x; push False or True depending on success"
          ],
        [
            "JumpCond False 1490",
            "check if loop is done: pop a value and jump to 1490 if the value is False"
          ],
        [
            "LoadVar $accu1190",
            "load accumulator: push the value of $accu1190"
          ],
        [
            "DelVar $accu1190",
            "delete method variable $accu1190"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar hd",
            "push the value of hd"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "LoadVar x",
            "push the value of x"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "2-ary |",
            "pop 2 values and push the result of applying |"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar $accu1190",
            "update accumulator: pop a value and store in $accu1190"
          ],
        [
            "Jump 1477",
            "set program counter to 1477"
          ],
        [
            "DelVar hd",
            "delete method variable hd"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "LoadVar $accu1190",
            "load final accumulator result: push the value of $accu1190"
          ],
        [
            "DelVar $accu1190",
            "delete method variable $accu1190"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar tl",
            "push the value of tl"
          ],
        [
            "DelVar tl",
            "delete method variable tl"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(1418)",
            "call method PC(1418)"
          ],
        [
            "2-ary |",
            "pop 2 values and push the result of applying |"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame reduce(f, d, z)",
            "start of method reduce"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar z",
            "push the value of z"
          ],
        [
            "DelVar z",
            "delete method variable z"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(e)",
            "get next element and assign to e; push False or True depending on success"
          ],
        [
            "JumpCond False 1528",
            "check if loop is done: pop a value and jump to 1528 if the value is False"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 1514",
            "set program counter to 1514"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame filter(cond, s)",
            "start of method filter"
          ],
        [
            "Push {}",
            "initialize accumulator for set comprehension: push constant {}"
          ],
        [
            "StoreVar $accu1243",
            "initialize accumulator for set comprehension: pop a value and store in $accu1243"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "Cut(e)",
            "get next element and assign to e; push False or True depending on success"
          ],
        [
            "JumpCond False 1553",
            "check if loop is done: pop a value and jump to 1553 if the value is False"
          ],
        [
            "LoadVar cond",
            "push the value of cond"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "JumpCond False 1538",
            "pop a value and jump to 1538 if the value is False"
          ],
        [
            "LoadVar $accu1243",
            "load accumulator: push the value of $accu1243"
          ],
        [
            "DelVar $accu1243",
            "delete method variable $accu1243"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar $accu1243",
            "update accumulator: pop a value and store in $accu1243"
          ],
        [
            "Jump 1538",
            "set program counter to 1538"
          ],
        [
            "DelVar cond",
            "delete method variable cond"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "LoadVar $accu1243",
            "load final accumulator result: push the value of $accu1243"
          ],
        [
            "DelVar $accu1243",
            "delete method variable $accu1243"
          ],
        [
            "StoreVar t",
            "pop a value and store in t"
          ],
        [
            "ReturnOp(t)",
            "restore caller method state and push t"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame map(f, s)",
            "start of method map"
          ],
        [
            "Push {}",
            "initialize accumulator for set comprehension: push constant {}"
          ],
        [
            "StoreVar $accu1264",
            "initialize accumulator for set comprehension: pop a value and store in $accu1264"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(e)",
            "get next element and assign to e; push False or True depending on success"
          ],
        [
            "JumpCond False 1579",
            "check if loop is done: pop a value and jump to 1579 if the value is False"
          ],
        [
            "LoadVar $accu1264",
            "load accumulator: push the value of $accu1264"
          ],
        [
            "DelVar $accu1264",
            "delete method variable $accu1264"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar $accu1264",
            "update accumulator: pop a value and store in $accu1264"
          ],
        [
            "Jump 1567",
            "set program counter to 1567"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "LoadVar $accu1264",
            "load final accumulator result: push the value of $accu1264"
          ],
        [
            "DelVar $accu1264",
            "delete method variable $accu1264"
          ],
        [
            "StoreVar t",
            "pop a value and store in t"
          ],
        [
            "ReturnOp(t)",
            "restore caller method state and push t"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame Game()",
            "start of method Game"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Apply PC(931)",
            "call method PC(931)"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "Push \"active_game\"",
            "push constant \"active_game\""
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Apply PC(989)",
            "call method PC(989)"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "Push \"players\"",
            "push constant \"players\""
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Apply PC(989)",
            "call method PC(989)"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "Push \"complete_game\"",
            "push constant \"complete_game\""
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Apply PC(989)",
            "call method PC(989)"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "Push \"game_headcount\"",
            "push constant \"game_headcount\""
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "Push \"exited\"",
            "push constant \"exited\""
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "StoreVar game",
            "pop a value and store in game"
          ],
        [
            "ReturnOp(game)",
            "restore caller method state and push game"
          ],
        [
            "DelVar game",
            "delete method variable game"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame game_umpire(g)",
            "start of method game_umpire"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(954)",
            "call method PC(954)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "JumpCond False 1809",
            "pop a value and jump to 1809 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 2",
            "push constant 2"
          ],
        [
            "2-ary <",
            "pop 2 values and push the result of applying <"
          ],
        [
            "JumpCond True 1656",
            "pop a value and jump to 1656 if the value is True"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond True 1656",
            "pop a value and jump to 1656 if the value is True"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "Jump 1657",
            "set program counter to 1657"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "JumpCond False 1670",
            "pop a value and jump to 1670 if the value is False"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"active_game\"",
            "push constant \"active_game\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(998)",
            "call method PC(998)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "Jump 1632",
            "set program counter to 1632"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 2",
            "push constant 2"
          ],
        [
            "2-ary %",
            "pop 2 values and push the result of applying %"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "StoreVar pairedplayers",
            "pop a value and store in pairedplayers"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "StoreVar i",
            "pop a value and store in i"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "LoadVar pairedplayers",
            "push the value of pairedplayers"
          ],
        [
            "2-ary <",
            "pop 2 values and push the result of applying <"
          ],
        [
            "JumpCond False 1772",
            "pop a value and jump to 1772 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(1294)",
            "call method PC(1294)"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(1294)",
            "call method PC(1294)"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(1294)",
            "call method PC(1294)"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(1294)",
            "call method PC(1294)"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "Push 2",
            "push constant 2"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar i",
            "pop a value and store in i"
          ],
        [
            "Jump 1686",
            "set program counter to 1686"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "StoreVar j",
            "pop a value and store in j"
          ],
        [
            "LoadVar j",
            "push the value of j"
          ],
        [
            "LoadVar pairedplayers",
            "push the value of pairedplayers"
          ],
        [
            "2-ary <",
            "pop 2 values and push the result of applying <"
          ],
        [
            "JumpCond False 1791",
            "pop a value and jump to 1791 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Del",
            "pop an address and delete the shared variable at the address"
          ],
        [
            "LoadVar j",
            "push the value of j"
          ],
        [
            "DelVar j",
            "delete method variable j"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar j",
            "pop a value and store in j"
          ],
        [
            "Jump 1775",
            "set program counter to 1775"
          ],
        [
            "DelVar j",
            "delete method variable j"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"game_headcount\"",
            "push constant \"game_headcount\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar pairedplayers",
            "push the value of pairedplayers"
          ],
        [
            "DelVar pairedplayers",
            "delete method variable pairedplayers"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"exited\"",
            "push constant \"exited\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"players\"",
            "push constant \"players\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(1097)",
            "call method PC(1097)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "Jump 1630",
            "set program counter to 1630"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "DelVar g",
            "delete method variable g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(973)",
            "call method PC(973)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame game_join(g, id)",
            "start of method game_join"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(954)",
            "call method PC(954)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 1851",
            "pop a value and jump to 1851 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "Jump 1852",
            "set program counter to 1852"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "JumpCond False 1858",
            "pop a value and jump to 1858 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"active_game\"",
            "push constant \"active_game\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(1067)",
            "call method PC(1067)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond True 1896",
            "pop a value and jump to 1896 if the value is True"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond True 1896",
            "pop a value and jump to 1896 if the value is True"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "1-ary not",
            "pop 1 value and push the result of applying not"
          ],
        [
            "JumpCond False 1894",
            "pop a value and jump to 1894 if the value is False"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "1-ary not",
            "pop 1 value and push the result of applying not"
          ],
        [
            "Jump 1897",
            "set program counter to 1897"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "Jump 1897",
            "set program counter to 1897"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "JumpCond False 1910",
            "pop a value and jump to 1910 if the value is False"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"players\"",
            "push constant \"players\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(998)",
            "call method PC(998)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "Jump 1858",
            "set program counter to 1858"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar teams",
            "pop a value and store in teams"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"exited\"",
            "push constant \"exited\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"exited\"",
            "push constant \"exited\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "DelVar id",
            "delete method variable id"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"complete_game\"",
            "push constant \"complete_game\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(1097)",
            "call method PC(1097)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "DelVar g",
            "delete method variable g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(973)",
            "call method PC(973)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "ReturnOp(teams)",
            "restore caller method state and push teams"
          ],
        [
            "DelVar teams",
            "delete method variable teams"
          ],
        [
            "Jump 2078",
            "jump over method definition: set program counter to 2078"
          ],
        [
            "Frame game_leave(g, id)",
            "start of method game_leave"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(954)",
            "call method PC(954)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"exited\"",
            "push constant \"exited\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"game_headcount\"",
            "push constant \"game_headcount\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond False 1978",
            "pop a value and jump to 1978 if the value is False"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"complete_game\"",
            "push constant \"complete_game\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(998)",
            "call method PC(998)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "Jump 1955",
            "set program counter to 1955"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 2013",
            "pop a value and jump to 2013 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(1306)",
            "call method PC(1306)"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "DelVar id",
            "delete method variable id"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(1306)",
            "call method PC(1306)"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Jump 2047",
            "set program counter to 2047"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 2047",
            "pop a value and jump to 2047 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(1306)",
            "call method PC(1306)"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "DelVar id",
            "delete method variable id"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(1306)",
            "call method PC(1306)"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "DelVar id",
            "delete method variable id"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 2064",
            "pop a value and jump to 2064 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "Jump 2065",
            "set program counter to 2065"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "JumpCond False 2071",
            "pop a value and jump to 2071 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"active_game\"",
            "push constant \"active_game\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(1067)",
            "call method PC(1067)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "DelVar g",
            "delete method variable g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(973)",
            "call method PC(973)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Apply PC(1587)",
            "call method PC(1587)"
          ],
        [
            "Store thegame",
            "pop a value and store it in shared variable thegame"
          ],
        [
            "Jump 2132",
            "jump over method definition: set program counter to 2132"
          ],
        [
            "Frame player(id)",
            "start of method player"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push ?thegame",
            "push constant ?thegame"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(1817)",
            "call method PC(1817)"
          ],
        [
            "StoreVar (team1, team2)",
            "pop a value and store in (team1, team2)"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar team1",
            "push the value of team1"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "LoadVar team2",
            "push the value of team2"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "LoadVar team1",
            "push the value of team1"
          ],
        [
            "LoadVar team2",
            "push the value of team2"
          ],
        [
            "2-ary |",
            "pop 2 values and push the result of applying |"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar team1",
            "push the value of team1"
          ],
        [
            "DelVar team1",
            "delete method variable team1"
          ],
        [
            "LoadVar team2",
            "push the value of team2"
          ],
        [
            "DelVar team2",
            "delete method variable team2"
          ],
        [
            "2-ary &",
            "pop 2 values and push the result of applying &"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push ?thegame",
            "push constant ?thegame"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "DelVar id",
            "delete method variable id"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(1949)",
            "call method PC(1949)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Push ?PC(1624)",
            "push constant ?PC(1624)"
          ],
        [
            "Push ?thegame",
            "push constant ?thegame"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "Spawn",
            "pop thread-local state, argument, and pc and spawn a new thread"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "Push 4",
            "push constant 4"
          ],
        [
            "2-ary ..",
            "pop 2 values and push the result of applying .."
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(id)",
            "get next element and assign to id; push False or True depending on success"
          ],
        [
            "JumpCond False 2150",
            "check if loop is done: pop a value and jump to 2150 if the value is False"
          ],
        [
            "Push ?PC(2082)",
            "push constant ?PC(2082)"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "DelVar id",
            "delete method variable id"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "Spawn",
            "pop thread-local state, argument, and pc and spawn a new thread"
          ],
        [
            "Jump 2141",
            "set program counter to 2141"
          ],
        [
            "DelVar id",
            "delete method variable id"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ]
      ],
    "locs": [
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                1,
                1,
                27,
                26
              ],
            "line": 1,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "list",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                35
              ],
            "line": 2,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                35
              ],
            "line": 2,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 31,
            "column": 31
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 31,
            "column": 31
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 36,
            "column": 34
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 36,
            "column": 31
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 37
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                35
              ],
            "line": 2,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "list",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                32
              ],
            "line": 5,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                32
              ],
            "line": 5,
            "endcolumn": 32,
            "column": 1
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 20,
            "column": 19
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 20,
            "column": 19
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                32
              ],
            "line": 5,
            "endcolumn": 32,
            "column": 1
          },
        {
            "module": "list",
            "endline": 8,
            "stmt": [
                8,
                1,
                8,
                27
              ],
            "line": 8,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 8,
            "stmt": [
                8,
                1,
                8,
                27
              ],
            "line": 8,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "list",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 17,
            "column": 14
          },
        {
            "module": "list",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 17,
            "column": 14
          },
        {
            "module": "list",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 8,
            "stmt": [
                8,
                1,
                8,
                27
              ],
            "line": 8,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "list",
            "endline": 11,
            "stmt": [
                11,
                1,
                11,
                24
              ],
            "line": 11,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "list",
            "endline": 11,
            "stmt": [
                11,
                1,
                11,
                24
              ],
            "line": 11,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "list",
            "endline": 12,
            "stmt": [
                12,
                1,
                12,
                27
              ],
            "line": 12,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 12,
            "stmt": [
                12,
                1,
                12,
                27
              ],
            "line": 12,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 32,
            "column": 21
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 32,
            "column": 21
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 32,
            "column": 21
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 32,
            "column": 21
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 31,
            "column": 31
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 31,
            "column": 31
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 32,
            "column": 27
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 32,
            "column": 21
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 33,
            "column": 14
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 12,
            "stmt": [
                12,
                1,
                12,
                27
              ],
            "line": 12,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "list",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                24
              ],
            "line": 16,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                24
              ],
            "line": 16,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "list",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                12
              ],
            "line": 17,
            "endcolumn": 12,
            "column": 12
          },
        {
            "module": "list",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                12
              ],
            "line": 17,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "list",
            "endline": 18,
            "stmt": [
                18,
                5,
                18,
                14
              ],
            "line": 18,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 18,
            "stmt": [
                18,
                5,
                18,
                14
              ],
            "line": 18,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 18,
            "stmt": [
                18,
                5,
                18,
                14
              ],
            "line": 18,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 18,
            "stmt": [
                18,
                5,
                18,
                14
              ],
            "line": 18,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 18,
            "stmt": [
                18,
                5,
                18,
                14
              ],
            "line": 18,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 19,
            "stmt": [
                19,
                9,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 17,
            "column": 9
          },
        {
            "module": "list",
            "endline": 19,
            "stmt": [
                19,
                9,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 17,
            "column": 9
          },
        {
            "module": "list",
            "endline": 19,
            "stmt": [
                19,
                9,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "list",
            "endline": 19,
            "stmt": [
                19,
                9,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "list",
            "endline": 19,
            "stmt": [
                19,
                9,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 17,
            "column": 9
          },
        {
            "module": "list",
            "endline": 19,
            "stmt": [
                19,
                9,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 15,
            "column": 9
          },
        {
            "module": "list",
            "endline": 18,
            "stmt": [
                18,
                5,
                18,
                14
              ],
            "line": 18,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                24
              ],
            "line": 16,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "list",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                24
              ],
            "line": 16,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "list",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                24
              ],
            "line": 16,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "list",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                26
              ],
            "line": 22,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                26
              ],
            "line": 22,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                26
              ],
            "line": 22,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "list",
            "endline": 26,
            "stmt": [
                26,
                1,
                26,
                27
              ],
            "line": 26,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 26,
            "stmt": [
                26,
                1,
                26,
                27
              ],
            "line": 26,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 26,
            "stmt": [
                26,
                1,
                26,
                27
              ],
            "line": 26,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "list",
            "endline": 30,
            "stmt": [
                30,
                1,
                30,
                29
              ],
            "line": 30,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 30,
            "stmt": [
                30,
                1,
                30,
                29
              ],
            "line": 30,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 30,
            "stmt": [
                30,
                1,
                30,
                29
              ],
            "line": 30,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "list",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                28
              ],
            "line": 34,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                28
              ],
            "line": 34,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                28
              ],
            "line": 34,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "list",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "list",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                15
              ],
            "line": 39,
            "endcolumn": 8,
            "column": 8
          },
        {
            "module": "list",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                15
              ],
            "line": 39,
            "endcolumn": 14,
            "column": 13
          },
        {
            "module": "list",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                15
              ],
            "line": 39,
            "endcolumn": 14,
            "column": 8
          },
        {
            "module": "list",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                15
              ],
            "line": 39,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "list",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                19
              ],
            "line": 40,
            "endcolumn": 19,
            "column": 18
          },
        {
            "module": "list",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                19
              ],
            "line": 40,
            "endcolumn": 19,
            "column": 18
          },
        {
            "module": "list",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                19
              ],
            "line": 40,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "list",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                15
              ],
            "line": 39,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 44,
            "column": 29
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 35,
            "column": 29
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 44,
            "column": 29
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 43,
            "column": 43
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 43,
            "column": 43
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 44,
            "column": 38
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 44,
            "column": 29
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 27,
            "column": 9
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 37,
            "column": 34
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 45,
            "column": 45
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 49
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 45
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 49
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 38,
            "column": 35
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 38,
            "column": 35
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 51
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 46
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 51
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 20,
            "column": 9
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 32,
            "column": 28
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 32,
            "column": 28
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 33,
            "column": 22
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 43,
            "column": 38
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 42,
            "column": 38
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 42,
            "column": 38
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 43,
            "column": 38
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 59,
            "column": 54
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 59,
            "column": 54
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 60,
            "column": 48
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 60,
            "column": 22
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 20,
            "column": 13
          },
        {
            "module": "list",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "list",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "list",
            "endline": 48,
            "stmt": [
                48,
                1,
                48,
                29
              ],
            "line": 48,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 48,
            "stmt": [
                48,
                1,
                48,
                29
              ],
            "line": 48,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "list",
            "endline": 49,
            "stmt": [
                49,
                5,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "list",
            "endline": 49,
            "stmt": [
                49,
                5,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "list",
            "endline": 49,
            "stmt": [
                49,
                5,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "list",
            "endline": 49,
            "stmt": [
                49,
                5,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "list",
            "endline": 49,
            "stmt": [
                49,
                5,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 27,
            "column": 14
          },
        {
            "module": "list",
            "endline": 49,
            "stmt": [
                49,
                5,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 48,
            "stmt": [
                48,
                1,
                48,
                29
              ],
            "line": 48,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "list",
            "endline": 52,
            "stmt": [
                52,
                1,
                52,
                31
              ],
            "line": 52,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 52,
            "stmt": [
                52,
                1,
                52,
                31
              ],
            "line": 52,
            "endcolumn": 31,
            "column": 1
          },
        {
            "module": "list",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                18
              ],
            "line": 53,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "list",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                18
              ],
            "line": 53,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "list",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                18
              ],
            "line": 53,
            "endcolumn": 18,
            "column": 13
          },
        {
            "module": "list",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                18
              ],
            "line": 53,
            "endcolumn": 11,
            "column": 5
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 38,
            "column": 38
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 41,
            "column": 41
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 41,
            "column": 38
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 22
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 25,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 25,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 43
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "list",
            "endline": 52,
            "stmt": [
                52,
                1,
                52,
                31
              ],
            "line": 52,
            "endcolumn": 31,
            "column": 1
          },
        {
            "module": "list",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                26
              ],
            "line": 57,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                26
              ],
            "line": 57,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "list",
            "endline": 58,
            "stmt": [
                58,
                5,
                58,
                9
              ],
            "line": 58,
            "endcolumn": 9,
            "column": 9
          },
        {
            "module": "list",
            "endline": 58,
            "stmt": [
                58,
                5,
                58,
                9
              ],
            "line": 58,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                20
              ],
            "line": 59,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                20
              ],
            "line": 59,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "list",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                20
              ],
            "line": 59,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "list",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                20
              ],
            "line": 59,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "list",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                20
              ],
            "line": 59,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "list",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                20
              ],
            "line": 59,
            "endcolumn": 19,
            "column": 11
          },
        {
            "module": "list",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                20
              ],
            "line": 59,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "list",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "list",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "list",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "list",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "list",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                20
              ],
            "line": 59,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "list",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                26
              ],
            "line": 57,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "list",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                26
              ],
            "line": 57,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "list",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                26
              ],
            "line": 57,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "list",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                26
              ],
            "line": 57,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "list",
            "endline": 63,
            "stmt": [
                63,
                1,
                63,
                41
              ],
            "line": 63,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 63,
            "stmt": [
                63,
                1,
                63,
                41
              ],
            "line": 63,
            "endcolumn": 41,
            "column": 1
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 24,
            "column": 19
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 24,
            "column": 19
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 25,
            "column": 15
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 35,
            "column": 30
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 35,
            "column": 15
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 97,
            "column": 14
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 75,
            "column": 75
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 89,
            "column": 84
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 90,
            "column": 80
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 94,
            "column": 94
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 94,
            "column": 80
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 94,
            "column": 75
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 48,
            "column": 48
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 49,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 49,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 59,
            "column": 54
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 61,
            "column": 61
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 61,
            "column": 61
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 62,
            "column": 54
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 62,
            "column": 54
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 62,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 96
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 97,
            "column": 42
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 40,
            "column": 38
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 97,
            "column": 14
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 97,
            "column": 14
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 97,
            "column": 14
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 63,
            "stmt": [
                63,
                1,
                63,
                41
              ],
            "line": 63,
            "endcolumn": 41,
            "column": 1
          },
        {
            "module": "list",
            "endline": 67,
            "stmt": [
                67,
                1,
                67,
                34
              ],
            "line": 67,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 67,
            "stmt": [
                67,
                1,
                67,
                34
              ],
            "line": 67,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "list",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                14
              ],
            "line": 68,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                14
              ],
            "line": 68,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                14
              ],
            "line": 68,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                14
              ],
            "line": 68,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                14
              ],
            "line": 69,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                14
              ],
            "line": 69,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                14
              ],
            "line": 69,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                14
              ],
            "line": 69,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                14
              ],
            "line": 69,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 28,
            "column": 20
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 25,
            "column": 20
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 25,
            "column": 20
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 28,
            "column": 20
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 28,
            "column": 20
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 29,
            "column": 18
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 29,
            "column": 18
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "list",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                14
              ],
            "line": 69,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 67,
            "stmt": [
                67,
                1,
                67,
                34
              ],
            "line": 67,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "list",
            "endline": 67,
            "stmt": [
                67,
                1,
                67,
                34
              ],
            "line": 67,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "list",
            "endline": 67,
            "stmt": [
                67,
                1,
                67,
                34
              ],
            "line": 67,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "list",
            "endline": 73,
            "stmt": [
                73,
                1,
                73,
                34
              ],
            "line": 73,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 73,
            "stmt": [
                73,
                1,
                73,
                34
              ],
            "line": 73,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 23,
            "column": 19
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 28,
            "column": 19
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 63,
            "column": 14
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 35,
            "column": 35
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 62,
            "column": 37
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 37,
            "column": 37
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 40,
            "column": 37
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 40,
            "column": 37
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 62,
            "column": 37
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 61,
            "column": 49
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 54,
            "column": 54
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 54,
            "column": 54
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 55,
            "column": 49
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 61,
            "column": 49
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 58,
            "column": 58
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 58,
            "column": 58
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 61,
            "column": 49
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 61,
            "column": 61
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 61,
            "column": 61
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 61,
            "column": 49
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 62,
            "column": 43
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 62,
            "column": 37
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 63,
            "column": 35
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 63,
            "column": 35
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 73,
            "stmt": [
                73,
                1,
                73,
                34
              ],
            "line": 73,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "list",
            "endline": 77,
            "stmt": [
                77,
                1,
                77,
                35
              ],
            "line": 77,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 77,
            "stmt": [
                77,
                1,
                77,
                35
              ],
            "line": 77,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 26,
            "column": 26
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 26,
            "column": 26
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 27,
            "column": 14
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 77,
            "stmt": [
                77,
                1,
                77,
                35
              ],
            "line": 77,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "list",
            "endline": 81,
            "stmt": [
                81,
                1,
                81,
                29
              ],
            "line": 81,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 81,
            "stmt": [
                81,
                1,
                81,
                29
              ],
            "line": 81,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "list",
            "endline": 82,
            "stmt": [
                82,
                5,
                82,
                13
              ],
            "line": 82,
            "endcolumn": 13,
            "column": 12
          },
        {
            "module": "list",
            "endline": 82,
            "stmt": [
                82,
                5,
                82,
                13
              ],
            "line": 82,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "list",
            "endline": 83,
            "stmt": [
                83,
                5,
                83,
                13
              ],
            "line": 83,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "list",
            "endline": 83,
            "stmt": [
                83,
                5,
                83,
                13
              ],
            "line": 83,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "list",
            "endline": 83,
            "stmt": [
                83,
                5,
                83,
                13
              ],
            "line": 83,
            "endcolumn": 13,
            "column": 5
          },
        {
            "module": "list",
            "endline": 84,
            "stmt": [
                84,
                5,
                84,
                18
              ],
            "line": 84,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 84,
            "stmt": [
                84,
                5,
                84,
                18
              ],
            "line": 84,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "list",
            "endline": 84,
            "stmt": [
                84,
                5,
                84,
                18
              ],
            "line": 84,
            "endcolumn": 17,
            "column": 11
          },
        {
            "module": "list",
            "endline": 84,
            "stmt": [
                84,
                5,
                84,
                18
              ],
            "line": 84,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "list",
            "endline": 85,
            "stmt": [
                85,
                9,
                85,
                24
              ],
            "line": 85,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 85,
            "stmt": [
                85,
                9,
                85,
                24
              ],
            "line": 85,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "list",
            "endline": 85,
            "stmt": [
                85,
                9,
                85,
                24
              ],
            "line": 85,
            "endcolumn": 15,
            "column": 9
          },
        {
            "module": "list",
            "endline": 86,
            "stmt": [
                86,
                13,
                86,
                26
              ],
            "line": 86,
            "endcolumn": 26,
            "column": 13
          },
        {
            "module": "list",
            "endline": 86,
            "stmt": [
                86,
                13,
                86,
                26
              ],
            "line": 86,
            "endcolumn": 26,
            "column": 13
          },
        {
            "module": "list",
            "endline": 86,
            "stmt": [
                86,
                13,
                86,
                26
              ],
            "line": 86,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "list",
            "endline": 86,
            "stmt": [
                86,
                13,
                86,
                26
              ],
            "line": 86,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 86,
            "stmt": [
                86,
                13,
                86,
                26
              ],
            "line": 86,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "list",
            "endline": 86,
            "stmt": [
                86,
                13,
                86,
                26
              ],
            "line": 86,
            "endcolumn": 26,
            "column": 13
          },
        {
            "module": "list",
            "endline": 86,
            "stmt": [
                86,
                13,
                86,
                26
              ],
            "line": 86,
            "endcolumn": 19,
            "column": 13
          },
        {
            "module": "list",
            "endline": 87,
            "stmt": [
                87,
                13,
                87,
                22
              ],
            "line": 87,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "list",
            "endline": 87,
            "stmt": [
                87,
                13,
                87,
                22
              ],
            "line": 87,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "list",
            "endline": 87,
            "stmt": [
                87,
                13,
                87,
                22
              ],
            "line": 87,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 87,
            "stmt": [
                87,
                13,
                87,
                22
              ],
            "line": 87,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 87,
            "stmt": [
                87,
                13,
                87,
                22
              ],
            "line": 87,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 87,
            "stmt": [
                87,
                13,
                87,
                22
              ],
            "line": 87,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 87,
            "stmt": [
                87,
                13,
                87,
                22
              ],
            "line": 87,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "list",
            "endline": 87,
            "stmt": [
                87,
                13,
                87,
                22
              ],
            "line": 87,
            "endcolumn": 16,
            "column": 13
          },
        {
            "module": "list",
            "endline": 84,
            "stmt": [
                84,
                5,
                84,
                18
              ],
            "line": 84,
            "endcolumn": 18,
            "column": 5
          },
        {
            "module": "list",
            "endline": 81,
            "stmt": [
                81,
                1,
                81,
                29
              ],
            "line": 81,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "list",
            "endline": 81,
            "stmt": [
                81,
                1,
                81,
                29
              ],
            "line": 81,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "list",
            "endline": 81,
            "stmt": [
                81,
                1,
                81,
                29
              ],
            "line": 81,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "list",
            "endline": 90,
            "stmt": [
                90,
                1,
                90,
                30
              ],
            "line": 90,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 90,
            "stmt": [
                90,
                1,
                90,
                30
              ],
            "line": 90,
            "endcolumn": 30,
            "column": 1
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 33,
            "column": 30
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 35,
            "column": 35
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 30
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 30
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 90,
            "stmt": [
                90,
                1,
                90,
                30
              ],
            "line": 90,
            "endcolumn": 30,
            "column": 1
          },
        {
            "module": "list",
            "endline": 90,
            "stmt": [
                90,
                1,
                90,
                30
              ],
            "line": 90,
            "endcolumn": 30,
            "column": 1
          },
        {
            "module": "list",
            "endline": 94,
            "stmt": [
                94,
                1,
                94,
                24
              ],
            "line": 94,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 94,
            "stmt": [
                94,
                1,
                94,
                24
              ],
            "line": 94,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 94,
            "stmt": [
                94,
                1,
                94,
                24
              ],
            "line": 94,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "list",
            "endline": 94,
            "stmt": [
                94,
                1,
                94,
                24
              ],
            "line": 94,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                23
              ],
            "line": 1,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                23
              ],
            "line": 1,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 2,
            "stmt": [
                2,
                5,
                2,
                12
              ],
            "line": 2,
            "endcolumn": 12,
            "column": 10
          },
        {
            "module": "bag",
            "endline": 2,
            "stmt": [
                2,
                5,
                2,
                12
              ],
            "line": 2,
            "endcolumn": 8,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                23
              ],
            "line": 1,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                23
              ],
            "line": 1,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                26
              ],
            "line": 4,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                26
              ],
            "line": 4,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 8,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                26
              ],
            "line": 4,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                26
              ],
            "line": 4,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                27
              ],
            "line": 7,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                27
              ],
            "line": 7,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                12
              ],
            "line": 8,
            "endcolumn": 12,
            "column": 10
          },
        {
            "module": "bag",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                12
              ],
            "line": 8,
            "endcolumn": 8,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                19
              ],
            "line": 10,
            "endcolumn": 12,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                19
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                19
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                19
              ],
            "line": 10,
            "endcolumn": 10,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 14,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 20,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                19
              ],
            "line": 10,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 14,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 19,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                27
              ],
            "line": 7,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                27
              ],
            "line": 7,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                27
              ],
            "line": 7,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                39
              ],
            "line": 15,
            "endcolumn": 20,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                39
              ],
            "line": 15,
            "endcolumn": 39,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                40
              ],
            "line": 16,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                40
              ],
            "line": 16,
            "endcolumn": 40,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                17
              ],
            "line": 17,
            "endcolumn": 10,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                17
              ],
            "line": 17,
            "endcolumn": 16,
            "column": 15
          },
        {
            "module": "bag",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                17
              ],
            "line": 17,
            "endcolumn": 16,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                17
              ],
            "line": 17,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 18,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 18,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 23,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 23,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 15,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                17
              ],
            "line": 17,
            "endcolumn": 17,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 20,
            "stmt": [
                20,
                9,
                20,
                17
              ],
            "line": 20,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 20,
            "stmt": [
                20,
                9,
                20,
                17
              ],
            "line": 20,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 20,
            "stmt": [
                20,
                9,
                20,
                17
              ],
            "line": 20,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 20,
            "stmt": [
                20,
                9,
                20,
                17
              ],
            "line": 20,
            "endcolumn": 15,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                40
              ],
            "line": 16,
            "endcolumn": 40,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                40
              ],
            "line": 16,
            "endcolumn": 40,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                23
              ],
            "line": 22,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                23
              ],
            "line": 22,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 23,
            "stmt": [
                23,
                1,
                23,
                27
              ],
            "line": 23,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 23,
            "stmt": [
                23,
                1,
                23,
                27
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 24,
            "stmt": [
                24,
                5,
                24,
                13
              ],
            "line": 24,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 24,
            "stmt": [
                24,
                5,
                24,
                13
              ],
            "line": 24,
            "endcolumn": 11,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 23,
            "stmt": [
                23,
                1,
                23,
                27
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 23,
            "stmt": [
                23,
                1,
                23,
                27
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 23,
            "stmt": [
                23,
                1,
                23,
                27
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 28,
            "stmt": [
                28,
                1,
                28,
                23
              ],
            "line": 28,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 28,
            "stmt": [
                28,
                1,
                28,
                23
              ],
            "line": 28,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                27
              ],
            "line": 29,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                27
              ],
            "line": 29,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 13,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                25
              ],
            "line": 31,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                25
              ],
            "line": 31,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                25
              ],
            "line": 31,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                25
              ],
            "line": 31,
            "endcolumn": 25,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                25
              ],
            "line": 31,
            "endcolumn": 11,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                27
              ],
            "line": 29,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                27
              ],
            "line": 29,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 33,
            "stmt": [
                33,
                1,
                33,
                23
              ],
            "line": 33,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 33,
            "stmt": [
                33,
                1,
                33,
                23
              ],
            "line": 33,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                27
              ],
            "line": 34,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                27
              ],
            "line": 34,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 13,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                25
              ],
            "line": 36,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                25
              ],
            "line": 36,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                25
              ],
            "line": 36,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                25
              ],
            "line": 36,
            "endcolumn": 25,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                25
              ],
            "line": 36,
            "endcolumn": 11,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                27
              ],
            "line": 34,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                27
              ],
            "line": 34,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                26
              ],
            "line": 39,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                26
              ],
            "line": 39,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                26
              ],
            "line": 39,
            "endcolumn": 25,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                26
              ],
            "line": 39,
            "endcolumn": 26,
            "column": 11
          },
        {
            "module": "bag",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                26
              ],
            "line": 39,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 41,
            "stmt": [
                41,
                1,
                41,
                21
              ],
            "line": 41,
            "endcolumn": 11,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 41,
            "stmt": [
                41,
                1,
                41,
                21
              ],
            "line": 41,
            "endcolumn": 21,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 42,
            "stmt": [
                42,
                1,
                42,
                32
              ],
            "line": 42,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 42,
            "stmt": [
                42,
                1,
                42,
                32
              ],
            "line": 42,
            "endcolumn": 32,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                15
              ],
            "line": 43,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                15
              ],
            "line": 43,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                15
              ],
            "line": 43,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                15
              ],
            "line": 43,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                21
              ],
            "line": 44,
            "endcolumn": 10,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                21
              ],
            "line": 44,
            "endcolumn": 20,
            "column": 15
          },
        {
            "module": "bag",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                21
              ],
            "line": 44,
            "endcolumn": 20,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                21
              ],
            "line": 44,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 22,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                21
              ],
            "line": 44,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 21,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 42,
            "stmt": [
                42,
                1,
                42,
                32
              ],
            "line": 42,
            "endcolumn": 32,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 49,
            "stmt": [
                49,
                1,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 49,
            "stmt": [
                49,
                1,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 50,
            "stmt": [
                50,
                1,
                50,
                35
              ],
            "line": 50,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 50,
            "stmt": [
                50,
                1,
                50,
                35
              ],
            "line": 50,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                15
              ],
            "line": 51,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                15
              ],
            "line": 51,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                15
              ],
            "line": 51,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                15
              ],
            "line": 51,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 52,
            "stmt": [
                52,
                5,
                52,
                21
              ],
            "line": 52,
            "endcolumn": 10,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 52,
            "stmt": [
                52,
                5,
                52,
                21
              ],
            "line": 52,
            "endcolumn": 20,
            "column": 15
          },
        {
            "module": "bag",
            "endline": 52,
            "stmt": [
                52,
                5,
                52,
                21
              ],
            "line": 52,
            "endcolumn": 20,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 52,
            "stmt": [
                52,
                5,
                52,
                21
              ],
            "line": 52,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 21,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 25,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 26,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 26,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 30
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 22,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 17,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 21,
            "column": 19
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 22,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 22,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 27,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 10,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 56,
            "stmt": [
                56,
                13,
                56,
                27
              ],
            "line": 56,
            "endcolumn": 22,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 56,
            "stmt": [
                56,
                13,
                56,
                27
              ],
            "line": 56,
            "endcolumn": 26,
            "column": 24
          },
        {
            "module": "bag",
            "endline": 56,
            "stmt": [
                56,
                13,
                56,
                27
              ],
            "line": 56,
            "endcolumn": 26,
            "column": 24
          },
        {
            "module": "bag",
            "endline": 56,
            "stmt": [
                56,
                13,
                56,
                27
              ],
            "line": 56,
            "endcolumn": 27,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 56,
            "stmt": [
                56,
                13,
                56,
                27
              ],
            "line": 56,
            "endcolumn": 27,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 50,
            "stmt": [
                50,
                1,
                50,
                35
              ],
            "line": 50,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 50,
            "stmt": [
                50,
                1,
                50,
                35
              ],
            "line": 50,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 59,
            "stmt": [
                59,
                1,
                59,
                39
              ],
            "line": 59,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 59,
            "stmt": [
                59,
                1,
                59,
                39
              ],
            "line": 59,
            "endcolumn": 39,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 8,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 8,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 13,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 14,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 63,
            "stmt": [
                63,
                9,
                63,
                24
              ],
            "line": 63,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 63,
            "stmt": [
                63,
                9,
                63,
                24
              ],
            "line": 63,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 63,
            "stmt": [
                63,
                9,
                63,
                24
              ],
            "line": 63,
            "endcolumn": 15,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                21
              ],
            "line": 64,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                21
              ],
            "line": 64,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                21
              ],
            "line": 64,
            "endcolumn": 20,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                21
              ],
            "line": 64,
            "endcolumn": 14,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 65,
            "stmt": [
                65,
                17,
                65,
                27
              ],
            "line": 65,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "bag",
            "endline": 65,
            "stmt": [
                65,
                17,
                65,
                27
              ],
            "line": 65,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "bag",
            "endline": 65,
            "stmt": [
                65,
                17,
                65,
                27
              ],
            "line": 65,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "bag",
            "endline": 65,
            "stmt": [
                65,
                17,
                65,
                27
              ],
            "line": 65,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "bag",
            "endline": 65,
            "stmt": [
                65,
                17,
                65,
                27
              ],
            "line": 65,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                21
              ],
            "line": 64,
            "endcolumn": 21,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 23,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 16,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 24,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                17,
                69,
                33
              ],
            "line": 69,
            "endcolumn": 32,
            "column": 31
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                17,
                69,
                33
              ],
            "line": 69,
            "endcolumn": 33,
            "column": 26
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                17,
                69,
                33
              ],
            "line": 69,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 56,
            "column": 51
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 52,
            "column": 51
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 52,
            "column": 51
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 56,
            "column": 51
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 56,
            "column": 55
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 56,
            "column": 51
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 57,
            "column": 44
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 42,
            "column": 35
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 73,
            "column": 65
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 66,
            "column": 65
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 73,
            "column": 65
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 69,
            "column": 69
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 73,
            "column": 73
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 73,
            "column": 69
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 73,
            "column": 65
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 52
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 34,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 34,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 34,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 40,
            "column": 36
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 40,
            "column": 36
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 40,
            "column": 39
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 40,
            "column": 36
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 41,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 74
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 48
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 49,
            "column": 48
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 49,
            "column": 48
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 48
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 52
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 52
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 48
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 53,
            "column": 35
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 53,
            "column": 30
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 28,
            "column": 21
          },
        {
            "module": "bag",
            "endline": 59,
            "stmt": [
                59,
                1,
                59,
                39
              ],
            "line": 59,
            "endcolumn": 39,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                35
              ],
            "line": 4,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                35
              ],
            "line": 4,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "synch",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "synch",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "synch",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 24,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                35
              ],
            "line": 4,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                35
              ],
            "line": 4,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                23
              ],
            "line": 7,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                23
              ],
            "line": 7,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 8,
            "stmt": [
                8,
                16,
                8,
                21
              ],
            "line": 8,
            "endcolumn": 21,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 8,
            "stmt": [
                8,
                16,
                8,
                21
              ],
            "line": 8,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "synch",
            "endline": 8,
            "stmt": [
                8,
                16,
                8,
                21
              ],
            "line": 8,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "synch",
            "endline": 8,
            "stmt": [
                8,
                16,
                8,
                21
              ],
            "line": 8,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 8,
            "stmt": [
                8,
                16,
                8,
                21
              ],
            "line": 8,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 8,
            "stmt": [
                8,
                16,
                8,
                21
              ],
            "line": 8,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 8,
            "stmt": [
                8,
                16,
                8,
                21
              ],
            "line": 8,
            "endcolumn": 21,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                23
              ],
            "line": 7,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                29
              ],
            "line": 10,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                29
              ],
            "line": 10,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 11,
            "stmt": [
                11,
                5,
                11,
                15
              ],
            "line": 11,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                22
              ],
            "line": 12,
            "endcolumn": 22,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                22
              ],
            "line": 12,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                22
              ],
            "line": 12,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                18
              ],
            "line": 13,
            "endcolumn": 11,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                18
              ],
            "line": 13,
            "endcolumn": 11,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                18
              ],
            "line": 13,
            "endcolumn": 18,
            "column": 15
          },
        {
            "module": "synch",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                18
              ],
            "line": 13,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 11,
            "stmt": [
                11,
                5,
                11,
                15
              ],
            "line": 11,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                29
              ],
            "line": 10,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                29
              ],
            "line": 10,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                37
              ],
            "line": 15,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                37
              ],
            "line": 15,
            "endcolumn": 37,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                15
              ],
            "line": 16,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 20,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 27,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 27,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 27,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 17,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                19
              ],
            "line": 18,
            "endcolumn": 18,
            "column": 12
          },
        {
            "module": "synch",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                19
              ],
            "line": 18,
            "endcolumn": 10,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                20
              ],
            "line": 19,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                20
              ],
            "line": 19,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                20
              ],
            "line": 19,
            "endcolumn": 20,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                20
              ],
            "line": 19,
            "endcolumn": 20,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                20
              ],
            "line": 19,
            "endcolumn": 16,
            "column": 13
          },
        {
            "module": "synch",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                15
              ],
            "line": 16,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                15
              ],
            "line": 16,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                15
              ],
            "line": 16,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                37
              ],
            "line": 15,
            "endcolumn": 37,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                37
              ],
            "line": 15,
            "endcolumn": 37,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 21,
            "stmt": [
                21,
                1,
                21,
                34
              ],
            "line": 21,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 21,
            "stmt": [
                21,
                1,
                21,
                34
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 37,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 37,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 18,
            "column": 12
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 35,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 29,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 35,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 35,
            "column": 32
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 35,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 37,
            "column": 12
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 37,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 37,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                18
              ],
            "line": 23,
            "endcolumn": 18,
            "column": 12
          },
        {
            "module": "synch",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                18
              ],
            "line": 23,
            "endcolumn": 18,
            "column": 12
          },
        {
            "module": "synch",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                18
              ],
            "line": 23,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 21,
            "stmt": [
                21,
                1,
                21,
                34
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 21,
            "stmt": [
                21,
                1,
                21,
                34
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 25,
            "stmt": [
                25,
                1,
                25,
                26
              ],
            "line": 25,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 25,
            "stmt": [
                25,
                1,
                25,
                26
              ],
            "line": 25,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 26,
            "stmt": [
                26,
                5,
                26,
                27
              ],
            "line": 26,
            "endcolumn": 26,
            "column": 22
          },
        {
            "module": "synch",
            "endline": 26,
            "stmt": [
                26,
                5,
                26,
                27
              ],
            "line": 26,
            "endcolumn": 26,
            "column": 22
          },
        {
            "module": "synch",
            "endline": 26,
            "stmt": [
                26,
                5,
                26,
                27
              ],
            "line": 26,
            "endcolumn": 27,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 26,
            "stmt": [
                26,
                5,
                26,
                27
              ],
            "line": 26,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 25,
            "stmt": [
                25,
                1,
                25,
                26
              ],
            "line": 25,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 28,
            "stmt": [
                28,
                1,
                28,
                37
              ],
            "line": 28,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 28,
            "stmt": [
                28,
                1,
                28,
                37
              ],
            "line": 28,
            "endcolumn": 37,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                21
              ],
            "line": 29,
            "endcolumn": 21,
            "column": 15
          },
        {
            "module": "synch",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                21
              ],
            "line": 29,
            "endcolumn": 21,
            "column": 15
          },
        {
            "module": "synch",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                21
              ],
            "line": 29,
            "endcolumn": 21,
            "column": 15
          },
        {
            "module": "synch",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                21
              ],
            "line": 29,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                21
              ],
            "line": 29,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 28,
            "stmt": [
                28,
                1,
                28,
                37
              ],
            "line": 28,
            "endcolumn": 37,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 31,
            "stmt": [
                31,
                1,
                31,
                33
              ],
            "line": 31,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 31,
            "stmt": [
                31,
                1,
                31,
                33
              ],
            "line": 31,
            "endcolumn": 33,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 32,
            "stmt": [
                32,
                5,
                32,
                21
              ],
            "line": 32,
            "endcolumn": 21,
            "column": 15
          },
        {
            "module": "synch",
            "endline": 32,
            "stmt": [
                32,
                5,
                32,
                21
              ],
            "line": 32,
            "endcolumn": 21,
            "column": 15
          },
        {
            "module": "synch",
            "endline": 32,
            "stmt": [
                32,
                5,
                32,
                21
              ],
            "line": 32,
            "endcolumn": 21,
            "column": 15
          },
        {
            "module": "synch",
            "endline": 32,
            "stmt": [
                32,
                5,
                32,
                21
              ],
            "line": 32,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 32,
            "stmt": [
                32,
                5,
                32,
                21
              ],
            "line": 32,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 31,
            "stmt": [
                31,
                1,
                31,
                33
              ],
            "line": 31,
            "endcolumn": 33,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                21
              ],
            "line": 34,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                21
              ],
            "line": 34,
            "endcolumn": 21,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 37,
            "stmt": [
                35,
                16,
                37,
                6
              ],
            "line": 35,
            "endcolumn": 6,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                37,
                6
              ],
            "line": 35,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 26
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 32
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 32
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 36,
            "stmt": [
                36,
                9,
                36,
                23
              ],
            "line": 36,
            "endcolumn": 16,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 36,
            "stmt": [
                36,
                9,
                36,
                23
              ],
            "line": 36,
            "endcolumn": 16,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 36,
            "stmt": [
                36,
                9,
                36,
                23
              ],
            "line": 36,
            "endcolumn": 23,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 36,
            "stmt": [
                36,
                9,
                36,
                23
              ],
            "line": 36,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                21
              ],
            "line": 34,
            "endcolumn": 21,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                21
              ],
            "line": 38,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                21
              ],
            "line": 38,
            "endcolumn": 21,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                15
              ],
            "line": 39,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                23
              ],
            "line": 40,
            "endcolumn": 23,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                23
              ],
            "line": 40,
            "endcolumn": 23,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                23
              ],
            "line": 40,
            "endcolumn": 23,
            "column": 17
          },
        {
            "module": "synch",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                23
              ],
            "line": 40,
            "endcolumn": 23,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                23
              ],
            "line": 40,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                23
              ],
            "line": 40,
            "endcolumn": 23,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                23
              ],
            "line": 40,
            "endcolumn": 23,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 41,
            "stmt": [
                41,
                9,
                41,
                24
              ],
            "line": 41,
            "endcolumn": 16,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 41,
            "stmt": [
                41,
                9,
                41,
                24
              ],
            "line": 41,
            "endcolumn": 16,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 41,
            "stmt": [
                41,
                9,
                41,
                24
              ],
            "line": 41,
            "endcolumn": 24,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 41,
            "stmt": [
                41,
                9,
                41,
                24
              ],
            "line": 41,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                15
              ],
            "line": 39,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                21
              ],
            "line": 38,
            "endcolumn": 21,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 43,
            "stmt": [
                43,
                1,
                43,
                31
              ],
            "line": 43,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 43,
            "stmt": [
                43,
                1,
                43,
                31
              ],
            "line": 43,
            "endcolumn": 31,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                24
              ],
            "line": 44,
            "endcolumn": 22,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                24
              ],
            "line": 44,
            "endcolumn": 22,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                24
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "synch",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                24
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                24
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                24
              ],
            "line": 44,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 43,
            "stmt": [
                43,
                1,
                43,
                31
              ],
            "line": 43,
            "endcolumn": 31,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 46,
            "stmt": [
                46,
                1,
                46,
                16
              ],
            "line": 46,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 46,
            "stmt": [
                46,
                1,
                46,
                16
              ],
            "line": 46,
            "endcolumn": 16,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 47,
            "stmt": [
                47,
                5,
                47,
                15
              ],
            "line": 47,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "synch",
            "endline": 47,
            "stmt": [
                47,
                5,
                47,
                15
              ],
            "line": 47,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                24
              ],
            "line": 48,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "synch",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                24
              ],
            "line": 48,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "synch",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                24
              ],
            "line": 48,
            "endcolumn": 24,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                24
              ],
            "line": 48,
            "endcolumn": 24,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                24
              ],
            "line": 48,
            "endcolumn": 17,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 49,
            "stmt": [
                49,
                9,
                49,
                19
              ],
            "line": 49,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 34,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 42,
            "column": 36
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 37,
            "column": 37
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 37,
            "column": 36
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 42,
            "column": 36
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 42,
            "column": 40
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 42,
            "column": 36
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 43,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 43,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 24,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 32,
            "column": 26
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 32,
            "column": 26
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 32,
            "column": 30
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 32,
            "column": 26
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 33,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 33,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 16,
            "column": 13
          },
        {
            "module": "synch",
            "endline": 52,
            "stmt": [
                52,
                13,
                52,
                23
              ],
            "line": 52,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 52,
            "stmt": [
                52,
                13,
                52,
                23
              ],
            "line": 52,
            "endcolumn": 23,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 52,
            "stmt": [
                52,
                13,
                52,
                23
              ],
            "line": 52,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "synch",
            "endline": 49,
            "stmt": [
                49,
                9,
                49,
                19
              ],
            "line": 49,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 55,
            "stmt": [
                53,
                20,
                55,
                6
              ],
            "line": 53,
            "endcolumn": 6,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                55,
                6
              ],
            "line": 53,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 32,
            "column": 31
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 32,
            "column": 30
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 32,
            "column": 26
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 55,
            "column": 40
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 63,
            "column": 57
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 58,
            "column": 58
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 58,
            "column": 57
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 63,
            "column": 57
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 63,
            "column": 61
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 63,
            "column": 57
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 64,
            "column": 40
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 64,
            "column": 40
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 71,
            "column": 69
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 71,
            "column": 40
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 37,
            "column": 35
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 72
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 72
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 72
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 72
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 72
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 54,
            "stmt": [
                54,
                13,
                54,
                22
              ],
            "line": 54,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 54,
            "stmt": [
                54,
                13,
                54,
                22
              ],
            "line": 54,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 54,
            "stmt": [
                54,
                13,
                54,
                22
              ],
            "line": 54,
            "endcolumn": 22,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 54,
            "stmt": [
                54,
                13,
                54,
                22
              ],
            "line": 54,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 46,
            "stmt": [
                46,
                1,
                46,
                16
              ],
            "line": 46,
            "endcolumn": 16,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 56,
            "stmt": [
                56,
                1,
                56,
                14
              ],
            "line": 56,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 56,
            "stmt": [
                56,
                1,
                56,
                14
              ],
            "line": 56,
            "endcolumn": 14,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 59,
            "stmt": [
                57,
                16,
                59,
                6
              ],
            "line": 57,
            "endcolumn": 6,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 20,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 33,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 35,
            "column": 34
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 35,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 35,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 35,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 10,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 23,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 43,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 26,
            "column": 26
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 26,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 43,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 39,
            "column": 29
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 42,
            "column": 42
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 42,
            "column": 42
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 42,
            "column": 41
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 43,
            "column": 29
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 43,
            "column": 29
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 43,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 44,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 44,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 36,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 36,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 56,
            "stmt": [
                56,
                1,
                56,
                14
              ],
            "line": 56,
            "endcolumn": 14,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 60,
            "stmt": [
                60,
                1,
                60,
                17
              ],
            "line": 60,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 60,
            "stmt": [
                60,
                1,
                60,
                17
              ],
            "line": 60,
            "endcolumn": 17,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 31,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 29,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 31,
            "column": 30
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 31,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 31,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 31,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 60,
            "stmt": [
                60,
                1,
                60,
                17
              ],
            "line": 60,
            "endcolumn": 17,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 63,
            "stmt": [
                63,
                1,
                63,
                34
              ],
            "line": 63,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 63,
            "stmt": [
                63,
                1,
                63,
                34
              ],
            "line": 63,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                16
              ],
            "line": 64,
            "endcolumn": 16,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                16
              ],
            "line": 64,
            "endcolumn": 16,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                16
              ],
            "line": 64,
            "endcolumn": 16,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                16
              ],
            "line": 64,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 63,
            "stmt": [
                63,
                1,
                63,
                34
              ],
            "line": 63,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 66,
            "stmt": [
                66,
                1,
                66,
                12
              ],
            "line": 66,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 66,
            "stmt": [
                66,
                1,
                66,
                12
              ],
            "line": 66,
            "endcolumn": 12,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 69,
            "stmt": [
                67,
                16,
                69,
                6
              ],
            "line": 67,
            "endcolumn": 6,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                69,
                6
              ],
            "line": 67,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 25,
            "column": 22
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 25,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                18
              ],
            "line": 68,
            "endcolumn": 13,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                18
              ],
            "line": 68,
            "endcolumn": 13,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                18
              ],
            "line": 68,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                18
              ],
            "line": 68,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                18
              ],
            "line": 68,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                18
              ],
            "line": 68,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                18
              ],
            "line": 68,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 66,
            "stmt": [
                66,
                1,
                66,
                12
              ],
            "line": 66,
            "endcolumn": 12,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 70,
            "stmt": [
                70,
                1,
                70,
                12
              ],
            "line": 70,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 70,
            "stmt": [
                70,
                1,
                70,
                12
              ],
            "line": 70,
            "endcolumn": 12,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 25,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 25,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 25,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 25,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 23,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 25,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 70,
            "stmt": [
                70,
                1,
                70,
                12
              ],
            "line": 70,
            "endcolumn": 12,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 73,
            "stmt": [
                73,
                1,
                73,
                27
              ],
            "line": 73,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 73,
            "stmt": [
                73,
                1,
                73,
                27
              ],
            "line": 73,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                15
              ],
            "line": 74,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                15
              ],
            "line": 74,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                15
              ],
            "line": 74,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 73,
            "stmt": [
                73,
                1,
                73,
                27
              ],
            "line": 73,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 76,
            "stmt": [
                76,
                1,
                76,
                26
              ],
            "line": 76,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 76,
            "stmt": [
                76,
                1,
                76,
                26
              ],
            "line": 76,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 80,
            "stmt": [
                77,
                16,
                80,
                6
              ],
            "line": 77,
            "endcolumn": 6,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 80,
            "stmt": [
                77,
                16,
                80,
                6
              ],
            "line": 77,
            "endcolumn": 6,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                80,
                6
              ],
            "line": 77,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 22,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 27
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                30
              ],
            "line": 78,
            "endcolumn": 26,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                30
              ],
            "line": 78,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "synch",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                30
              ],
            "line": 78,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "synch",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                30
              ],
            "line": 78,
            "endcolumn": 30,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                30
              ],
            "line": 78,
            "endcolumn": 30,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                30
              ],
            "line": 78,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 79,
            "stmt": [
                79,
                9,
                79,
                26
              ],
            "line": 79,
            "endcolumn": 10,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 79,
            "stmt": [
                79,
                9,
                79,
                26
              ],
            "line": 79,
            "endcolumn": 22,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 79,
            "stmt": [
                79,
                9,
                79,
                26
              ],
            "line": 79,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 79,
            "stmt": [
                79,
                9,
                79,
                26
              ],
            "line": 79,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 79,
            "stmt": [
                79,
                9,
                79,
                26
              ],
            "line": 79,
            "endcolumn": 25,
            "column": 24
          },
        {
            "module": "synch",
            "endline": 79,
            "stmt": [
                79,
                9,
                79,
                26
              ],
            "line": 79,
            "endcolumn": 26,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 79,
            "stmt": [
                79,
                9,
                79,
                26
              ],
            "line": 79,
            "endcolumn": 26,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 79,
            "stmt": [
                79,
                9,
                79,
                26
              ],
            "line": 79,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 76,
            "stmt": [
                76,
                1,
                76,
                26
              ],
            "line": 76,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 81,
            "stmt": [
                81,
                1,
                81,
                17
              ],
            "line": 81,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 81,
            "stmt": [
                81,
                1,
                81,
                17
              ],
            "line": 81,
            "endcolumn": 17,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 41,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 31,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 40,
            "column": 33
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 34,
            "column": 33
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 40,
            "column": 33
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 40,
            "column": 37
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 40,
            "column": 37
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 40,
            "column": 33
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 41,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 41,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 41,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 81,
            "stmt": [
                81,
                1,
                81,
                17
              ],
            "line": 81,
            "endcolumn": 17,
            "column": 1
          },
        {
            "module": "set",
            "endline": 3,
            "stmt": [
                3,
                1,
                3,
                34
              ],
            "line": 3,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "set",
            "endline": 3,
            "stmt": [
                3,
                1,
                3,
                34
              ],
            "line": 3,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "set",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                25
              ],
            "line": 4,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                25
              ],
            "line": 4,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                25
              ],
            "line": 4,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "set",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                25
              ],
            "line": 4,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "set",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                25
              ],
            "line": 4,
            "endcolumn": 19,
            "column": 15
          },
        {
            "module": "set",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                25
              ],
            "line": 4,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "set",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                25
              ],
            "line": 4,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "set",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                25
              ],
            "line": 4,
            "endcolumn": 25,
            "column": 14
          },
        {
            "module": "set",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                25
              ],
            "line": 4,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "set",
            "endline": 3,
            "stmt": [
                3,
                1,
                3,
                34
              ],
            "line": 3,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "set",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                36
              ],
            "line": 6,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "set",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                36
              ],
            "line": 6,
            "endcolumn": 36,
            "column": 1
          },
        {
            "module": "set",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                25
              ],
            "line": 7,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                25
              ],
            "line": 7,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                25
              ],
            "line": 7,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "set",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                25
              ],
            "line": 7,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "set",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                25
              ],
            "line": 7,
            "endcolumn": 19,
            "column": 15
          },
        {
            "module": "set",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                25
              ],
            "line": 7,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "set",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                25
              ],
            "line": 7,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "set",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                25
              ],
            "line": 7,
            "endcolumn": 25,
            "column": 14
          },
        {
            "module": "set",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                25
              ],
            "line": 7,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "set",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                36
              ],
            "line": 6,
            "endcolumn": 36,
            "column": 1
          },
        {
            "module": "set",
            "endline": 9,
            "stmt": [
                9,
                1,
                9,
                40
              ],
            "line": 9,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "set",
            "endline": 9,
            "stmt": [
                9,
                1,
                9,
                40
              ],
            "line": 9,
            "endcolumn": 40,
            "column": 1
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 20,
            "column": 15
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 40,
            "column": 14
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 33,
            "column": 33
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 33,
            "column": 33
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 33,
            "column": 29
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 39,
            "column": 28
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 25,
            "column": 23
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 40,
            "column": 14
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 40,
            "column": 14
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 40,
            "column": 14
          },
        {
            "module": "set",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                40
              ],
            "line": 10,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "set",
            "endline": 9,
            "stmt": [
                9,
                1,
                9,
                40
              ],
            "line": 9,
            "endcolumn": 40,
            "column": 1
          },
        {
            "module": "set",
            "endline": 12,
            "stmt": [
                12,
                1,
                12,
                36
              ],
            "line": 12,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "set",
            "endline": 12,
            "stmt": [
                12,
                1,
                12,
                36
              ],
            "line": 12,
            "endcolumn": 36,
            "column": 1
          },
        {
            "module": "set",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                25
              ],
            "line": 13,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                25
              ],
            "line": 13,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                25
              ],
            "line": 13,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                25
              ],
            "line": 13,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "set",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                25
              ],
            "line": 13,
            "endcolumn": 19,
            "column": 15
          },
        {
            "module": "set",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                25
              ],
            "line": 13,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "set",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                25
              ],
            "line": 13,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "set",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                25
              ],
            "line": 13,
            "endcolumn": 25,
            "column": 14
          },
        {
            "module": "set",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                25
              ],
            "line": 13,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "set",
            "endline": 12,
            "stmt": [
                12,
                1,
                12,
                36
              ],
            "line": 12,
            "endcolumn": 36,
            "column": 1
          },
        {
            "module": "set",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                38
              ],
            "line": 15,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "set",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                38
              ],
            "line": 15,
            "endcolumn": 38,
            "column": 1
          },
        {
            "module": "set",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                25
              ],
            "line": 16,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                25
              ],
            "line": 16,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                25
              ],
            "line": 16,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                25
              ],
            "line": 16,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "set",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                25
              ],
            "line": 16,
            "endcolumn": 19,
            "column": 15
          },
        {
            "module": "set",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                25
              ],
            "line": 16,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "set",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                25
              ],
            "line": 16,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "set",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                25
              ],
            "line": 16,
            "endcolumn": 25,
            "column": 14
          },
        {
            "module": "set",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                25
              ],
            "line": 16,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "set",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                38
              ],
            "line": 15,
            "endcolumn": 38,
            "column": 1
          },
        {
            "module": "set",
            "endline": 18,
            "stmt": [
                18,
                1,
                18,
                42
              ],
            "line": 18,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "set",
            "endline": 18,
            "stmt": [
                18,
                1,
                18,
                42
              ],
            "line": 18,
            "endcolumn": 42,
            "column": 1
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 20,
            "column": 15
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 40,
            "column": 14
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 33,
            "column": 33
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 33,
            "column": 29
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 39,
            "column": 28
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 25,
            "column": 23
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 40,
            "column": 14
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 40,
            "column": 14
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 40,
            "column": 14
          },
        {
            "module": "set",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                40
              ],
            "line": 19,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "set",
            "endline": 18,
            "stmt": [
                18,
                1,
                18,
                42
              ],
            "line": 18,
            "endcolumn": 42,
            "column": 1
          },
        {
            "module": "set",
            "endline": 21,
            "stmt": [
                21,
                1,
                21,
                31
              ],
            "line": 21,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "set",
            "endline": 21,
            "stmt": [
                21,
                1,
                21,
                31
              ],
            "line": 21,
            "endcolumn": 31,
            "column": 1
          },
        {
            "module": "set",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                23
              ],
            "line": 22,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                23
              ],
            "line": 22,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                23
              ],
            "line": 22,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                23
              ],
            "line": 22,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "set",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                23
              ],
            "line": 22,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "set",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                23
              ],
            "line": 22,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "set",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                23
              ],
            "line": 22,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "set",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                23
              ],
            "line": 22,
            "endcolumn": 23,
            "column": 15
          },
        {
            "module": "set",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                23
              ],
            "line": 22,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "set",
            "endline": 21,
            "stmt": [
                21,
                1,
                21,
                31
              ],
            "line": 21,
            "endcolumn": 31,
            "column": 1
          },
        {
            "module": "set",
            "endline": 24,
            "stmt": [
                24,
                1,
                24,
                34
              ],
            "line": 24,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "set",
            "endline": 24,
            "stmt": [
                24,
                1,
                24,
                34
              ],
            "line": 24,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "set",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                22
              ],
            "line": 25,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "set",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                22
              ],
            "line": 25,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "set",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                22
              ],
            "line": 25,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "set",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                22
              ],
            "line": 25,
            "endcolumn": 21,
            "column": 19
          },
        {
            "module": "set",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                22
              ],
            "line": 25,
            "endcolumn": 21,
            "column": 19
          },
        {
            "module": "set",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                22
              ],
            "line": 25,
            "endcolumn": 21,
            "column": 19
          },
        {
            "module": "set",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                22
              ],
            "line": 25,
            "endcolumn": 21,
            "column": 19
          },
        {
            "module": "set",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                22
              ],
            "line": 25,
            "endcolumn": 22,
            "column": 14
          },
        {
            "module": "set",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                22
              ],
            "line": 25,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "set",
            "endline": 24,
            "stmt": [
                24,
                1,
                24,
                34
              ],
            "line": 24,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "set",
            "endline": 28,
            "stmt": [
                28,
                1,
                28,
                30
              ],
            "line": 28,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "set",
            "endline": 28,
            "stmt": [
                28,
                1,
                28,
                30
              ],
            "line": 28,
            "endcolumn": 30,
            "column": 1
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 54,
            "column": 28
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 54,
            "column": 28
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 54,
            "column": 54
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 34,
            "column": 28
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 34,
            "column": 28
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 34,
            "column": 28
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 54,
            "column": 28
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 54,
            "column": 28
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 41,
            "column": 41
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 41,
            "column": 41
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 41,
            "column": 41
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 41,
            "column": 41
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 42,
            "column": 36
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 43,
            "column": 28
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 54,
            "column": 28
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 54,
            "column": 28
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 54,
            "column": 54
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 54,
            "column": 28
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 54,
            "column": 28
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 54,
            "column": 28
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 54,
            "column": 28
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 56,
            "column": 20
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 56,
            "column": 14
          },
        {
            "module": "set",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                56
              ],
            "line": 29,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "set",
            "endline": 28,
            "stmt": [
                28,
                1,
                28,
                30
              ],
            "line": 28,
            "endcolumn": 30,
            "column": 1
          },
        {
            "module": "set",
            "endline": 32,
            "stmt": [
                32,
                1,
                32,
                28
              ],
            "line": 32,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "set",
            "endline": 32,
            "stmt": [
                32,
                1,
                32,
                28
              ],
            "line": 32,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "set",
            "endline": 33,
            "stmt": [
                33,
                5,
                33,
                15
              ],
            "line": 33,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "set",
            "endline": 33,
            "stmt": [
                33,
                5,
                33,
                15
              ],
            "line": 33,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "set",
            "endline": 33,
            "stmt": [
                33,
                5,
                33,
                15
              ],
            "line": 33,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "set",
            "endline": 34,
            "stmt": [
                34,
                5,
                34,
                14
              ],
            "line": 34,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "set",
            "endline": 34,
            "stmt": [
                34,
                5,
                34,
                14
              ],
            "line": 34,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "set",
            "endline": 34,
            "stmt": [
                34,
                5,
                34,
                14
              ],
            "line": 34,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "set",
            "endline": 34,
            "stmt": [
                34,
                5,
                34,
                14
              ],
            "line": 34,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "set",
            "endline": 34,
            "stmt": [
                34,
                5,
                34,
                14
              ],
            "line": 34,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "set",
            "endline": 35,
            "stmt": [
                35,
                9,
                35,
                19
              ],
            "line": 35,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "set",
            "endline": 35,
            "stmt": [
                35,
                9,
                35,
                19
              ],
            "line": 35,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "set",
            "endline": 35,
            "stmt": [
                35,
                9,
                35,
                19
              ],
            "line": 35,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "set",
            "endline": 35,
            "stmt": [
                35,
                9,
                35,
                19
              ],
            "line": 35,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "set",
            "endline": 35,
            "stmt": [
                35,
                9,
                35,
                19
              ],
            "line": 35,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "set",
            "endline": 35,
            "stmt": [
                35,
                9,
                35,
                19
              ],
            "line": 35,
            "endcolumn": 17,
            "column": 9
          },
        {
            "module": "set",
            "endline": 34,
            "stmt": [
                34,
                5,
                34,
                14
              ],
            "line": 34,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "set",
            "endline": 32,
            "stmt": [
                32,
                1,
                32,
                28
              ],
            "line": 32,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "set",
            "endline": 32,
            "stmt": [
                32,
                1,
                32,
                28
              ],
            "line": 32,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "set",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                32
              ],
            "line": 38,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "set",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                32
              ],
            "line": 38,
            "endcolumn": 32,
            "column": 1
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 30,
            "column": 29
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 30,
            "column": 24
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 95,
            "column": 14
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 22,
            "column": 21
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 93,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 93,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 75,
            "column": 67
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 77,
            "column": 77
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 78,
            "column": 67
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 78,
            "column": 67
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 79,
            "column": 57
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 90,
            "column": 90
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 92,
            "column": 92
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 93,
            "column": 90
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 93,
            "column": 90
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 93,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 93,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 41,
            "column": 40
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 40,
            "column": 40
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 40,
            "column": 40
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 41,
            "column": 40
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 46,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 93,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 93,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 93,
            "column": 93
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 93,
            "column": 93
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 93,
            "column": 93
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 93,
            "column": 93
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 93,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 93,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 93,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 93,
            "column": 39
          },
        {
            "module": "set",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                95
              ],
            "line": 39,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "set",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                32
              ],
            "line": 38,
            "endcolumn": 32,
            "column": 1
          },
        {
            "module": "set",
            "endline": 42,
            "stmt": [
                42,
                1,
                42,
                38
              ],
            "line": 42,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "set",
            "endline": 42,
            "stmt": [
                42,
                1,
                42,
                38
              ],
            "line": 42,
            "endcolumn": 38,
            "column": 1
          },
        {
            "module": "set",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                14
              ],
            "line": 43,
            "endcolumn": 8,
            "column": 8
          },
        {
            "module": "set",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                14
              ],
            "line": 43,
            "endcolumn": 8,
            "column": 8
          },
        {
            "module": "set",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                14
              ],
            "line": 43,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "set",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                14
              ],
            "line": 43,
            "endcolumn": 13,
            "column": 8
          },
        {
            "module": "set",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                14
              ],
            "line": 43,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "set",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                23
              ],
            "line": 44,
            "endcolumn": 21,
            "column": 20
          },
        {
            "module": "set",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                23
              ],
            "line": 44,
            "endcolumn": 21,
            "column": 20
          },
        {
            "module": "set",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                23
              ],
            "line": 44,
            "endcolumn": 21,
            "column": 20
          },
        {
            "module": "set",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                23
              ],
            "line": 44,
            "endcolumn": 21,
            "column": 20
          },
        {
            "module": "set",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                23
              ],
            "line": 44,
            "endcolumn": 21,
            "column": 20
          },
        {
            "module": "set",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                23
              ],
            "line": 44,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "set",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                14
              ],
            "line": 43,
            "endcolumn": 14,
            "column": 5
          },
        {
            "module": "set",
            "endline": 46,
            "stmt": [
                46,
                9,
                46,
                22
              ],
            "line": 46,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "set",
            "endline": 46,
            "stmt": [
                46,
                9,
                46,
                22
              ],
            "line": 46,
            "endcolumn": 22,
            "column": 17
          },
        {
            "module": "set",
            "endline": 46,
            "stmt": [
                46,
                9,
                46,
                22
              ],
            "line": 46,
            "endcolumn": 15,
            "column": 9
          },
        {
            "module": "set",
            "endline": 47,
            "stmt": [
                47,
                13,
                47,
                21
              ],
            "line": 47,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "set",
            "endline": 47,
            "stmt": [
                47,
                13,
                47,
                21
              ],
            "line": 47,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "set",
            "endline": 47,
            "stmt": [
                47,
                13,
                47,
                21
              ],
            "line": 47,
            "endcolumn": 20,
            "column": 16
          },
        {
            "module": "set",
            "endline": 47,
            "stmt": [
                47,
                13,
                47,
                21
              ],
            "line": 47,
            "endcolumn": 14,
            "column": 13
          },
        {
            "module": "set",
            "endline": 48,
            "stmt": [
                48,
                17,
                48,
                27
              ],
            "line": 48,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "set",
            "endline": 48,
            "stmt": [
                48,
                17,
                48,
                27
              ],
            "line": 48,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "set",
            "endline": 48,
            "stmt": [
                48,
                17,
                48,
                27
              ],
            "line": 48,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "set",
            "endline": 48,
            "stmt": [
                48,
                17,
                48,
                27
              ],
            "line": 48,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "set",
            "endline": 48,
            "stmt": [
                48,
                17,
                48,
                27
              ],
            "line": 48,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "set",
            "endline": 47,
            "stmt": [
                47,
                13,
                47,
                21
              ],
            "line": 47,
            "endcolumn": 21,
            "column": 13
          },
        {
            "module": "set",
            "endline": 49,
            "stmt": [
                49,
                13,
                49,
                24
              ],
            "line": 49,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "set",
            "endline": 49,
            "stmt": [
                49,
                13,
                49,
                24
              ],
            "line": 49,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "set",
            "endline": 49,
            "stmt": [
                49,
                13,
                49,
                24
              ],
            "line": 49,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "set",
            "endline": 49,
            "stmt": [
                49,
                13,
                49,
                24
              ],
            "line": 49,
            "endcolumn": 23,
            "column": 18
          },
        {
            "module": "set",
            "endline": 49,
            "stmt": [
                49,
                13,
                49,
                24
              ],
            "line": 49,
            "endcolumn": 16,
            "column": 13
          },
        {
            "module": "set",
            "endline": 50,
            "stmt": [
                50,
                17,
                50,
                30
              ],
            "line": 50,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "set",
            "endline": 50,
            "stmt": [
                50,
                17,
                50,
                30
              ],
            "line": 50,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "set",
            "endline": 50,
            "stmt": [
                50,
                17,
                50,
                30
              ],
            "line": 50,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "set",
            "endline": 50,
            "stmt": [
                50,
                17,
                50,
                30
              ],
            "line": 50,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "set",
            "endline": 50,
            "stmt": [
                50,
                17,
                50,
                30
              ],
            "line": 50,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "set",
            "endline": 50,
            "stmt": [
                50,
                17,
                50,
                30
              ],
            "line": 50,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "set",
            "endline": 49,
            "stmt": [
                49,
                13,
                49,
                24
              ],
            "line": 49,
            "endcolumn": 24,
            "column": 13
          },
        {
            "module": "set",
            "endline": 52,
            "stmt": [
                52,
                17,
                52,
                31
              ],
            "line": 52,
            "endcolumn": 30,
            "column": 30
          },
        {
            "module": "set",
            "endline": 52,
            "stmt": [
                52,
                17,
                52,
                31
              ],
            "line": 52,
            "endcolumn": 31,
            "column": 26
          },
        {
            "module": "set",
            "endline": 52,
            "stmt": [
                52,
                17,
                52,
                31
              ],
            "line": 52,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "set",
            "endline": 52,
            "stmt": [
                52,
                33,
                52,
                49
              ],
            "line": 52,
            "endcolumn": 42,
            "column": 42
          },
        {
            "module": "set",
            "endline": 52,
            "stmt": [
                52,
                33,
                52,
                49
              ],
            "line": 52,
            "endcolumn": 42,
            "column": 42
          },
        {
            "module": "set",
            "endline": 52,
            "stmt": [
                52,
                33,
                52,
                49
              ],
            "line": 52,
            "endcolumn": 48,
            "column": 47
          },
        {
            "module": "set",
            "endline": 52,
            "stmt": [
                52,
                33,
                52,
                49
              ],
            "line": 52,
            "endcolumn": 48,
            "column": 47
          },
        {
            "module": "set",
            "endline": 52,
            "stmt": [
                52,
                33,
                52,
                49
              ],
            "line": 52,
            "endcolumn": 48,
            "column": 47
          },
        {
            "module": "set",
            "endline": 52,
            "stmt": [
                52,
                33,
                52,
                49
              ],
            "line": 52,
            "endcolumn": 49,
            "column": 42
          },
        {
            "module": "set",
            "endline": 52,
            "stmt": [
                52,
                33,
                52,
                49
              ],
            "line": 52,
            "endcolumn": 40,
            "column": 33
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 73,
            "column": 65
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 66,
            "column": 65
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 73,
            "column": 65
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 69,
            "column": 69
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 73,
            "column": 73
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 73,
            "column": 69
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 73,
            "column": 65
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 74,
            "column": 52
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 32,
            "column": 32
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 32,
            "column": 32
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 32,
            "column": 32
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 35,
            "column": 34
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 35,
            "column": 34
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 35,
            "column": 34
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 40,
            "column": 40
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 40,
            "column": 40
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 40,
            "column": 33
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 74,
            "column": 74
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "set",
            "endline": 54,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 54,
            "endcolumn": 52,
            "column": 48
          },
        {
            "module": "set",
            "endline": 54,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 54,
            "endcolumn": 49,
            "column": 48
          },
        {
            "module": "set",
            "endline": 54,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 54,
            "endcolumn": 49,
            "column": 48
          },
        {
            "module": "set",
            "endline": 54,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 54,
            "endcolumn": 52,
            "column": 48
          },
        {
            "module": "set",
            "endline": 54,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 54,
            "endcolumn": 52,
            "column": 52
          },
        {
            "module": "set",
            "endline": 54,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 54,
            "endcolumn": 52,
            "column": 52
          },
        {
            "module": "set",
            "endline": 54,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 54,
            "endcolumn": 52,
            "column": 48
          },
        {
            "module": "set",
            "endline": 54,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 54,
            "endcolumn": 53,
            "column": 35
          },
        {
            "module": "set",
            "endline": 54,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 53,
            "column": 30
          },
        {
            "module": "set",
            "endline": 53,
            "stmt": [
                53,
                21,
                54,
                53
              ],
            "line": 53,
            "endcolumn": 28,
            "column": 21
          },
        {
            "module": "set",
            "endline": 42,
            "stmt": [
                42,
                1,
                42,
                38
              ],
            "line": 42,
            "endcolumn": 38,
            "column": 1
          },
        {
            "module": "set",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                35
              ],
            "line": 57,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "set",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                35
              ],
            "line": 57,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "set",
            "endline": 58,
            "stmt": [
                58,
                5,
                58,
                14
              ],
            "line": 58,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "set",
            "endline": 58,
            "stmt": [
                58,
                5,
                58,
                14
              ],
            "line": 58,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "set",
            "endline": 58,
            "stmt": [
                58,
                5,
                58,
                14
              ],
            "line": 58,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "set",
            "endline": 58,
            "stmt": [
                58,
                5,
                58,
                14
              ],
            "line": 58,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "set",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                14
              ],
            "line": 59,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "set",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                14
              ],
            "line": 59,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "set",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                14
              ],
            "line": 59,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "set",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                14
              ],
            "line": 59,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "set",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                14
              ],
            "line": 59,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "set",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                29
              ],
            "line": 60,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "set",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                29
              ],
            "line": 60,
            "endcolumn": 28,
            "column": 20
          },
        {
            "module": "set",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                29
              ],
            "line": 60,
            "endcolumn": 25,
            "column": 20
          },
        {
            "module": "set",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                29
              ],
            "line": 60,
            "endcolumn": 25,
            "column": 20
          },
        {
            "module": "set",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                29
              ],
            "line": 60,
            "endcolumn": 28,
            "column": 20
          },
        {
            "module": "set",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                29
              ],
            "line": 60,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "set",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                29
              ],
            "line": 60,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "set",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                29
              ],
            "line": 60,
            "endcolumn": 28,
            "column": 20
          },
        {
            "module": "set",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                29
              ],
            "line": 60,
            "endcolumn": 29,
            "column": 18
          },
        {
            "module": "set",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                29
              ],
            "line": 60,
            "endcolumn": 29,
            "column": 18
          },
        {
            "module": "set",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                29
              ],
            "line": 60,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "set",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                14
              ],
            "line": 59,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "set",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                35
              ],
            "line": 57,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "set",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                35
              ],
            "line": 57,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "set",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                35
              ],
            "line": 57,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "set",
            "endline": 63,
            "stmt": [
                63,
                1,
                63,
                30
              ],
            "line": 63,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "set",
            "endline": 63,
            "stmt": [
                63,
                1,
                63,
                30
              ],
            "line": 63,
            "endcolumn": 30,
            "column": 1
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 33,
            "column": 30
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 35,
            "column": 35
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 36,
            "column": 30
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 36,
            "column": 30
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "set",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                38
              ],
            "line": 64,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "set",
            "endline": 63,
            "stmt": [
                63,
                1,
                63,
                30
              ],
            "line": 63,
            "endcolumn": 30,
            "column": 1
          },
        {
            "module": "set",
            "endline": 63,
            "stmt": [
                63,
                1,
                63,
                30
              ],
            "line": 63,
            "endcolumn": 30,
            "column": 1
          },
        {
            "module": "set",
            "endline": 67,
            "stmt": [
                67,
                1,
                67,
                24
              ],
            "line": 67,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "set",
            "endline": 67,
            "stmt": [
                67,
                1,
                67,
                24
              ],
            "line": 67,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "set",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                27
              ],
            "line": 68,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "set",
            "endline": 67,
            "stmt": [
                67,
                1,
                67,
                24
              ],
            "line": 67,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "set",
            "endline": 67,
            "stmt": [
                67,
                1,
                67,
                24
              ],
            "line": 67,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "game",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                24
              ],
            "line": 4,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "game",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                24
              ],
            "line": 4,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "game",
            "endline": 7,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 43,
            "column": 14
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 25,
            "column": 24
          },
        {
            "module": "game",
            "endline": 7,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 43,
            "column": 14
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 33,
            "column": 28
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 37,
            "column": 36
          },
        {
            "module": "game",
            "endline": 7,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 43,
            "column": 14
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 45,
            "column": 40
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 49,
            "column": 48
          },
        {
            "module": "game",
            "endline": 7,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 43,
            "column": 14
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 56,
            "column": 52
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 64,
            "column": 63
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 64,
            "column": 59
          },
        {
            "module": "game",
            "endline": 7,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 43,
            "column": 14
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 6,
            "endcolumn": 24,
            "column": 13
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 6,
            "endcolumn": 37,
            "column": 36
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 6,
            "endcolumn": 37,
            "column": 27
          },
        {
            "module": "game",
            "endline": 7,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 43,
            "column": 14
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 6,
            "endcolumn": 47,
            "column": 40
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 6,
            "endcolumn": 60,
            "column": 59
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 6,
            "endcolumn": 60,
            "column": 50
          },
        {
            "module": "game",
            "endline": 7,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 43,
            "column": 14
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 6,
            "endcolumn": 76,
            "column": 63
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 6,
            "endcolumn": 89,
            "column": 88
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 6,
            "endcolumn": 89,
            "column": 79
          },
        {
            "module": "game",
            "endline": 7,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 43,
            "column": 14
          },
        {
            "module": "game",
            "endline": 7,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 7,
            "endcolumn": 27,
            "column": 13
          },
        {
            "module": "game",
            "endline": 7,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 7,
            "endcolumn": 30,
            "column": 30
          },
        {
            "module": "game",
            "endline": 7,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 43,
            "column": 14
          },
        {
            "module": "game",
            "endline": 7,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 7,
            "endcolumn": 39,
            "column": 33
          },
        {
            "module": "game",
            "endline": 7,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 7,
            "endcolumn": 43,
            "column": 42
          },
        {
            "module": "game",
            "endline": 7,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 43,
            "column": 14
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                7,
                44
              ],
            "line": 5,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "game",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                24
              ],
            "line": 4,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "game",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                24
              ],
            "line": 4,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "game",
            "endline": 9,
            "stmt": [
                9,
                1,
                9,
                19
              ],
            "line": 9,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "game",
            "endline": 9,
            "stmt": [
                9,
                1,
                9,
                19
              ],
            "line": 9,
            "endcolumn": 19,
            "column": 1
          },
        {
            "module": "game",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                21
              ],
            "line": 10,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                21
              ],
            "line": 10,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "game",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                21
              ],
            "line": 10,
            "endcolumn": 20,
            "column": 14
          },
        {
            "module": "game",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                21
              ],
            "line": 10,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                21
              ],
            "line": 10,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 11,
            "stmt": [
                11,
                5,
                11,
                15
              ],
            "line": 11,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "game",
            "endline": 11,
            "stmt": [
                11,
                5,
                11,
                15
              ],
            "line": 11,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 29,
            "column": 23
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 29,
            "column": 20
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 29,
            "column": 20
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 30,
            "column": 16
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 83,
            "column": 15
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 45,
            "column": 45
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 52,
            "column": 48
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 52,
            "column": 45
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 52,
            "column": 45
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 53,
            "column": 41
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 58,
            "column": 58
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 58,
            "column": 41
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 83,
            "column": 15
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 69,
            "column": 69
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 76,
            "column": 72
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 76,
            "column": 69
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 76,
            "column": 69
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 77,
            "column": 65
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 82,
            "column": 82
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 82,
            "column": 65
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 38,
            "column": 37
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 83,
            "column": 15
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "game",
            "endline": 15,
            "stmt": [
                15,
                13,
                15,
                43
              ],
            "line": 15,
            "endcolumn": 42,
            "column": 18
          },
        {
            "module": "game",
            "endline": 15,
            "stmt": [
                15,
                13,
                15,
                43
              ],
            "line": 15,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "game",
            "endline": 15,
            "stmt": [
                15,
                13,
                15,
                43
              ],
            "line": 15,
            "endcolumn": 32,
            "column": 22
          },
        {
            "module": "game",
            "endline": 15,
            "stmt": [
                15,
                13,
                15,
                43
              ],
            "line": 15,
            "endcolumn": 32,
            "column": 19
          },
        {
            "module": "game",
            "endline": 15,
            "stmt": [
                15,
                13,
                15,
                43
              ],
            "line": 15,
            "endcolumn": 42,
            "column": 18
          },
        {
            "module": "game",
            "endline": 15,
            "stmt": [
                15,
                13,
                15,
                43
              ],
            "line": 15,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "game",
            "endline": 15,
            "stmt": [
                15,
                13,
                15,
                43
              ],
            "line": 15,
            "endcolumn": 42,
            "column": 39
          },
        {
            "module": "game",
            "endline": 15,
            "stmt": [
                15,
                13,
                15,
                43
              ],
            "line": 15,
            "endcolumn": 42,
            "column": 36
          },
        {
            "module": "game",
            "endline": 15,
            "stmt": [
                15,
                13,
                15,
                43
              ],
            "line": 15,
            "endcolumn": 42,
            "column": 18
          },
        {
            "module": "game",
            "endline": 15,
            "stmt": [
                15,
                13,
                15,
                43
              ],
            "line": 15,
            "endcolumn": 43,
            "column": 13
          },
        {
            "module": "game",
            "endline": 15,
            "stmt": [
                15,
                13,
                15,
                43
              ],
            "line": 15,
            "endcolumn": 43,
            "column": 13
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                84
              ],
            "line": 14,
            "endcolumn": 84,
            "column": 9
          },
        {
            "module": "game",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                67
              ],
            "line": 18,
            "endcolumn": 33,
            "column": 33
          },
        {
            "module": "game",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                67
              ],
            "line": 18,
            "endcolumn": 42,
            "column": 36
          },
        {
            "module": "game",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                67
              ],
            "line": 18,
            "endcolumn": 42,
            "column": 33
          },
        {
            "module": "game",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                67
              ],
            "line": 18,
            "endcolumn": 42,
            "column": 33
          },
        {
            "module": "game",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                67
              ],
            "line": 18,
            "endcolumn": 43,
            "column": 29
          },
        {
            "module": "game",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                67
              ],
            "line": 18,
            "endcolumn": 52,
            "column": 52
          },
        {
            "module": "game",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                67
              ],
            "line": 18,
            "endcolumn": 61,
            "column": 55
          },
        {
            "module": "game",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                67
              ],
            "line": 18,
            "endcolumn": 61,
            "column": 52
          },
        {
            "module": "game",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                67
              ],
            "line": 18,
            "endcolumn": 61,
            "column": 52
          },
        {
            "module": "game",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                67
              ],
            "line": 18,
            "endcolumn": 62,
            "column": 48
          },
        {
            "module": "game",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                67
              ],
            "line": 18,
            "endcolumn": 66,
            "column": 66
          },
        {
            "module": "game",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                67
              ],
            "line": 18,
            "endcolumn": 66,
            "column": 48
          },
        {
            "module": "game",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                67
              ],
            "line": 18,
            "endcolumn": 67,
            "column": 29
          },
        {
            "module": "game",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                67
              ],
            "line": 18,
            "endcolumn": 27,
            "column": 9
          },
        {
            "module": "game",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                21
              ],
            "line": 19,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "game",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                21
              ],
            "line": 19,
            "endcolumn": 21,
            "column": 13
          },
        {
            "module": "game",
            "endline": 20,
            "stmt": [
                20,
                13,
                20,
                36
              ],
            "line": 20,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "game",
            "endline": 20,
            "stmt": [
                20,
                13,
                20,
                36
              ],
            "line": 20,
            "endcolumn": 35,
            "column": 23
          },
        {
            "module": "game",
            "endline": 20,
            "stmt": [
                20,
                13,
                20,
                36
              ],
            "line": 20,
            "endcolumn": 35,
            "column": 19
          },
        {
            "module": "game",
            "endline": 20,
            "stmt": [
                20,
                13,
                20,
                36
              ],
            "line": 20,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 24,
            "column": 20
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 54,
            "column": 32
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 32,
            "column": 32
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 39,
            "column": 35
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 39,
            "column": 32
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 39,
            "column": 32
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 54,
            "column": 32
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 42,
            "column": 42
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 51,
            "column": 45
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 51,
            "column": 42
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 53,
            "column": 53
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 54,
            "column": 42
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 54,
            "column": 42
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 54,
            "column": 32
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 55,
            "column": 28
          },
        {
            "module": "game",
            "endline": 21,
            "stmt": [
                21,
                17,
                21,
                55
              ],
            "line": 21,
            "endcolumn": 26,
            "column": 17
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 24,
            "column": 20
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 56,
            "column": 32
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 32,
            "column": 32
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 39,
            "column": 35
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 39,
            "column": 32
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 39,
            "column": 32
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 56,
            "column": 32
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 42,
            "column": 42
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 51,
            "column": 45
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 51,
            "column": 42
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 53
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 55,
            "column": 55
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 55,
            "column": 53
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 56,
            "column": 42
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 56,
            "column": 42
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 56,
            "column": 32
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 57,
            "column": 28
          },
        {
            "module": "game",
            "endline": 22,
            "stmt": [
                22,
                17,
                22,
                57
              ],
            "line": 22,
            "endcolumn": 26,
            "column": 17
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 24,
            "column": 20
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 54,
            "column": 32
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 32,
            "column": 32
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 39,
            "column": 35
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 39,
            "column": 32
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 39,
            "column": 32
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 54,
            "column": 32
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 42,
            "column": 42
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 51,
            "column": 45
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 51,
            "column": 42
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 53,
            "column": 53
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 54,
            "column": 42
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 54,
            "column": 42
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 54,
            "column": 32
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 55,
            "column": 28
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                17,
                23,
                55
              ],
            "line": 23,
            "endcolumn": 26,
            "column": 17
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 24,
            "column": 20
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 56,
            "column": 32
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 32,
            "column": 32
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 39,
            "column": 35
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 39,
            "column": 32
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 39,
            "column": 32
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 56,
            "column": 32
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 42,
            "column": 42
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 51,
            "column": 45
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 51,
            "column": 42
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 53,
            "column": 53
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 55,
            "column": 55
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 55,
            "column": 53
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 56,
            "column": 42
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 56,
            "column": 42
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 56,
            "column": 32
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 57,
            "column": 28
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                57
              ],
            "line": 24,
            "endcolumn": 26,
            "column": 17
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                17,
                25,
                22
              ],
            "line": 25,
            "endcolumn": 22,
            "column": 17
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                17,
                25,
                22
              ],
            "line": 25,
            "endcolumn": 22,
            "column": 17
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                17,
                25,
                22
              ],
            "line": 25,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                17,
                25,
                22
              ],
            "line": 25,
            "endcolumn": 22,
            "column": 17
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                17,
                25,
                22
              ],
            "line": 25,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "game",
            "endline": 20,
            "stmt": [
                20,
                13,
                20,
                36
              ],
            "line": 20,
            "endcolumn": 36,
            "column": 13
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                13,
                27,
                21
              ],
            "line": 27,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                13,
                27,
                21
              ],
            "line": 27,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                13,
                27,
                21
              ],
            "line": 27,
            "endcolumn": 21,
            "column": 13
          },
        {
            "module": "game",
            "endline": 28,
            "stmt": [
                28,
                13,
                28,
                36
              ],
            "line": 28,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "game",
            "endline": 28,
            "stmt": [
                28,
                13,
                28,
                36
              ],
            "line": 28,
            "endcolumn": 35,
            "column": 23
          },
        {
            "module": "game",
            "endline": 28,
            "stmt": [
                28,
                13,
                28,
                36
              ],
            "line": 28,
            "endcolumn": 35,
            "column": 19
          },
        {
            "module": "game",
            "endline": 28,
            "stmt": [
                28,
                13,
                28,
                36
              ],
            "line": 28,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "game",
            "endline": 29,
            "stmt": [
                29,
                17,
                29,
                33
              ],
            "line": 29,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "game",
            "endline": 29,
            "stmt": [
                29,
                17,
                29,
                33
              ],
            "line": 29,
            "endcolumn": 30,
            "column": 24
          },
        {
            "module": "game",
            "endline": 29,
            "stmt": [
                29,
                17,
                29,
                33
              ],
            "line": 29,
            "endcolumn": 30,
            "column": 21
          },
        {
            "module": "game",
            "endline": 29,
            "stmt": [
                29,
                17,
                29,
                33
              ],
            "line": 29,
            "endcolumn": 32,
            "column": 32
          },
        {
            "module": "game",
            "endline": 29,
            "stmt": [
                29,
                17,
                29,
                33
              ],
            "line": 29,
            "endcolumn": 33,
            "column": 21
          },
        {
            "module": "game",
            "endline": 29,
            "stmt": [
                29,
                17,
                29,
                33
              ],
            "line": 29,
            "endcolumn": 33,
            "column": 17
          },
        {
            "module": "game",
            "endline": 30,
            "stmt": [
                30,
                17,
                30,
                22
              ],
            "line": 30,
            "endcolumn": 22,
            "column": 17
          },
        {
            "module": "game",
            "endline": 30,
            "stmt": [
                30,
                17,
                30,
                22
              ],
            "line": 30,
            "endcolumn": 22,
            "column": 17
          },
        {
            "module": "game",
            "endline": 30,
            "stmt": [
                30,
                17,
                30,
                22
              ],
            "line": 30,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "game",
            "endline": 30,
            "stmt": [
                30,
                17,
                30,
                22
              ],
            "line": 30,
            "endcolumn": 22,
            "column": 17
          },
        {
            "module": "game",
            "endline": 30,
            "stmt": [
                30,
                17,
                30,
                22
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "game",
            "endline": 28,
            "stmt": [
                28,
                13,
                28,
                36
              ],
            "line": 28,
            "endcolumn": 36,
            "column": 13
          },
        {
            "module": "game",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                45
              ],
            "line": 31,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "game",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                45
              ],
            "line": 31,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "game",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                45
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "game",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                45
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 13
          },
        {
            "module": "game",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                45
              ],
            "line": 31,
            "endcolumn": 45,
            "column": 33
          },
        {
            "module": "game",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                45
              ],
            "line": 31,
            "endcolumn": 45,
            "column": 33
          },
        {
            "module": "game",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                45
              ],
            "line": 31,
            "endcolumn": 31,
            "column": 13
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                9,
                32,
                22
              ],
            "line": 32,
            "endcolumn": 9,
            "column": 9
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                9,
                32,
                22
              ],
            "line": 32,
            "endcolumn": 17,
            "column": 12
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                9,
                32,
                22
              ],
            "line": 32,
            "endcolumn": 17,
            "column": 9
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                9,
                32,
                22
              ],
            "line": 32,
            "endcolumn": 22,
            "column": 21
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                9,
                32,
                22
              ],
            "line": 32,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "game",
            "endline": 35,
            "stmt": [
                35,
                9,
                35,
                30
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "game",
            "endline": 35,
            "stmt": [
                35,
                9,
                35,
                30
              ],
            "line": 35,
            "endcolumn": 29,
            "column": 23
          },
        {
            "module": "game",
            "endline": 35,
            "stmt": [
                35,
                9,
                35,
                30
              ],
            "line": 35,
            "endcolumn": 29,
            "column": 20
          },
        {
            "module": "game",
            "endline": 35,
            "stmt": [
                35,
                9,
                35,
                30
              ],
            "line": 35,
            "endcolumn": 30,
            "column": 9
          },
        {
            "module": "game",
            "endline": 35,
            "stmt": [
                35,
                9,
                35,
                30
              ],
            "line": 35,
            "endcolumn": 30,
            "column": 9
          },
        {
            "module": "game",
            "endline": 11,
            "stmt": [
                11,
                5,
                11,
                15
              ],
            "line": 11,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "game",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                21
              ],
            "line": 36,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                21
              ],
            "line": 36,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                21
              ],
            "line": 36,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "game",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                21
              ],
            "line": 36,
            "endcolumn": 20,
            "column": 14
          },
        {
            "module": "game",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                21
              ],
            "line": 36,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                21
              ],
            "line": 36,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 9,
            "stmt": [
                9,
                1,
                9,
                19
              ],
            "line": 9,
            "endcolumn": 19,
            "column": 1
          },
        {
            "module": "game",
            "endline": 39,
            "stmt": [
                39,
                1,
                39,
                35
              ],
            "line": 39,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "game",
            "endline": 39,
            "stmt": [
                39,
                1,
                39,
                35
              ],
            "line": 39,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "game",
            "endline": 40,
            "stmt": [
                40,
                5,
                40,
                21
              ],
            "line": 40,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 40,
            "stmt": [
                40,
                5,
                40,
                21
              ],
            "line": 40,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "game",
            "endline": 40,
            "stmt": [
                40,
                5,
                40,
                21
              ],
            "line": 40,
            "endcolumn": 20,
            "column": 14
          },
        {
            "module": "game",
            "endline": 40,
            "stmt": [
                40,
                5,
                40,
                21
              ],
            "line": 40,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 40,
            "stmt": [
                40,
                5,
                40,
                21
              ],
            "line": 40,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 42,
            "stmt": [
                42,
                5,
                42,
                35
              ],
            "line": 42,
            "endcolumn": 5,
            "column": 5
          },
        {
            "module": "game",
            "endline": 42,
            "stmt": [
                42,
                5,
                42,
                35
              ],
            "line": 42,
            "endcolumn": 14,
            "column": 8
          },
        {
            "module": "game",
            "endline": 42,
            "stmt": [
                42,
                5,
                42,
                35
              ],
            "line": 42,
            "endcolumn": 14,
            "column": 5
          },
        {
            "module": "game",
            "endline": 42,
            "stmt": [
                42,
                5,
                42,
                35
              ],
            "line": 42,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "game",
            "endline": 42,
            "stmt": [
                42,
                5,
                42,
                35
              ],
            "line": 42,
            "endcolumn": 27,
            "column": 21
          },
        {
            "module": "game",
            "endline": 42,
            "stmt": [
                42,
                5,
                42,
                35
              ],
            "line": 42,
            "endcolumn": 27,
            "column": 18
          },
        {
            "module": "game",
            "endline": 42,
            "stmt": [
                42,
                5,
                42,
                35
              ],
            "line": 42,
            "endcolumn": 27,
            "column": 18
          },
        {
            "module": "game",
            "endline": 42,
            "stmt": [
                42,
                5,
                42,
                35
              ],
            "line": 42,
            "endcolumn": 34,
            "column": 32
          },
        {
            "module": "game",
            "endline": 42,
            "stmt": [
                42,
                5,
                42,
                35
              ],
            "line": 42,
            "endcolumn": 33,
            "column": 32
          },
        {
            "module": "game",
            "endline": 42,
            "stmt": [
                42,
                5,
                42,
                35
              ],
            "line": 42,
            "endcolumn": 34,
            "column": 32
          },
        {
            "module": "game",
            "endline": 42,
            "stmt": [
                42,
                5,
                42,
                35
              ],
            "line": 42,
            "endcolumn": 35,
            "column": 18
          },
        {
            "module": "game",
            "endline": 42,
            "stmt": [
                42,
                5,
                42,
                35
              ],
            "line": 42,
            "endcolumn": 16,
            "column": 5
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 20,
            "column": 16
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 20,
            "column": 13
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 20,
            "column": 13
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 21,
            "column": 9
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 26,
            "column": 26
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 26,
            "column": 9
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 52,
            "column": 8
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 38,
            "column": 38
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 45,
            "column": 41
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 45,
            "column": 38
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 45,
            "column": 38
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 46,
            "column": 34
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 51,
            "column": 51
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 51,
            "column": 34
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 31,
            "column": 29
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 52,
            "column": 8
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                53
              ],
            "line": 45,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "game",
            "endline": 46,
            "stmt": [
                46,
                9,
                46,
                31
              ],
            "line": 46,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "game",
            "endline": 46,
            "stmt": [
                46,
                9,
                46,
                31
              ],
            "line": 46,
            "endcolumn": 30,
            "column": 20
          },
        {
            "module": "game",
            "endline": 46,
            "stmt": [
                46,
                9,
                46,
                31
              ],
            "line": 46,
            "endcolumn": 30,
            "column": 17
          },
        {
            "module": "game",
            "endline": 46,
            "stmt": [
                46,
                9,
                46,
                31
              ],
            "line": 46,
            "endcolumn": 31,
            "column": 9
          },
        {
            "module": "game",
            "endline": 46,
            "stmt": [
                46,
                9,
                46,
                31
              ],
            "line": 46,
            "endcolumn": 31,
            "column": 9
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 23,
            "column": 19
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 23,
            "column": 16
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 23,
            "column": 16
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 24,
            "column": 12
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 33,
            "column": 33
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 40,
            "column": 36
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 40,
            "column": 33
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 40,
            "column": 33
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 41,
            "column": 29
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 41,
            "column": 12
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 117,
            "column": 11
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 52,
            "column": 52
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 59,
            "column": 55
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 59,
            "column": 52
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 59,
            "column": 52
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 60,
            "column": 48
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 65,
            "column": 65
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 65,
            "column": 48
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 117,
            "column": 11
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 74,
            "column": 73
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 83,
            "column": 83
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 90,
            "column": 86
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 90,
            "column": 83
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 90,
            "column": 83
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 90,
            "column": 73
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 90,
            "column": 73
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 116,
            "column": 72
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 99,
            "column": 98
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 108,
            "column": 108
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 115,
            "column": 111
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 115,
            "column": 108
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 115,
            "column": 108
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 115,
            "column": 98
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 115,
            "column": 98
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 95,
            "column": 93
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 116,
            "column": 72
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 45,
            "column": 44
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 117,
            "column": 11
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "game",
            "endline": 51,
            "stmt": [
                51,
                9,
                51,
                35
              ],
            "line": 51,
            "endcolumn": 34,
            "column": 14
          },
        {
            "module": "game",
            "endline": 51,
            "stmt": [
                51,
                9,
                51,
                35
              ],
            "line": 51,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "game",
            "endline": 51,
            "stmt": [
                51,
                9,
                51,
                35
              ],
            "line": 51,
            "endcolumn": 24,
            "column": 18
          },
        {
            "module": "game",
            "endline": 51,
            "stmt": [
                51,
                9,
                51,
                35
              ],
            "line": 51,
            "endcolumn": 24,
            "column": 15
          },
        {
            "module": "game",
            "endline": 51,
            "stmt": [
                51,
                9,
                51,
                35
              ],
            "line": 51,
            "endcolumn": 34,
            "column": 14
          },
        {
            "module": "game",
            "endline": 51,
            "stmt": [
                51,
                9,
                51,
                35
              ],
            "line": 51,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "game",
            "endline": 51,
            "stmt": [
                51,
                9,
                51,
                35
              ],
            "line": 51,
            "endcolumn": 34,
            "column": 31
          },
        {
            "module": "game",
            "endline": 51,
            "stmt": [
                51,
                9,
                51,
                35
              ],
            "line": 51,
            "endcolumn": 34,
            "column": 28
          },
        {
            "module": "game",
            "endline": 51,
            "stmt": [
                51,
                9,
                51,
                35
              ],
            "line": 51,
            "endcolumn": 34,
            "column": 14
          },
        {
            "module": "game",
            "endline": 51,
            "stmt": [
                51,
                9,
                51,
                35
              ],
            "line": 51,
            "endcolumn": 35,
            "column": 9
          },
        {
            "module": "game",
            "endline": 51,
            "stmt": [
                51,
                9,
                51,
                35
              ],
            "line": 51,
            "endcolumn": 35,
            "column": 9
          },
        {
            "module": "game",
            "endline": 50,
            "stmt": [
                50,
                5,
                50,
                118
              ],
            "line": 50,
            "endcolumn": 118,
            "column": 5
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                5,
                54,
                32
              ],
            "line": 54,
            "endcolumn": 31,
            "column": 14
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                5,
                54,
                32
              ],
            "line": 54,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                5,
                54,
                32
              ],
            "line": 54,
            "endcolumn": 21,
            "column": 17
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                5,
                54,
                32
              ],
            "line": 54,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                5,
                54,
                32
              ],
            "line": 54,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                5,
                54,
                32
              ],
            "line": 54,
            "endcolumn": 31,
            "column": 14
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                5,
                54,
                32
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                5,
                54,
                32
              ],
            "line": 54,
            "endcolumn": 31,
            "column": 27
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                5,
                54,
                32
              ],
            "line": 54,
            "endcolumn": 31,
            "column": 24
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                5,
                54,
                32
              ],
            "line": 54,
            "endcolumn": 31,
            "column": 24
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                5,
                54,
                32
              ],
            "line": 54,
            "endcolumn": 31,
            "column": 14
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                5,
                54,
                32
              ],
            "line": 54,
            "endcolumn": 11,
            "column": 5
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                33
              ],
            "line": 57,
            "endcolumn": 5,
            "column": 5
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                33
              ],
            "line": 57,
            "endcolumn": 13,
            "column": 8
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                33
              ],
            "line": 57,
            "endcolumn": 13,
            "column": 5
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                33
              ],
            "line": 57,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                33
              ],
            "line": 57,
            "endcolumn": 25,
            "column": 20
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                33
              ],
            "line": 57,
            "endcolumn": 25,
            "column": 17
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                33
              ],
            "line": 57,
            "endcolumn": 25,
            "column": 17
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                33
              ],
            "line": 57,
            "endcolumn": 32,
            "column": 30
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                33
              ],
            "line": 57,
            "endcolumn": 31,
            "column": 30
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                33
              ],
            "line": 57,
            "endcolumn": 31,
            "column": 30
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                33
              ],
            "line": 57,
            "endcolumn": 32,
            "column": 30
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                33
              ],
            "line": 57,
            "endcolumn": 33,
            "column": 17
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                33
              ],
            "line": 57,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "game",
            "endline": 58,
            "stmt": [
                58,
                5,
                58,
                32
              ],
            "line": 58,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "game",
            "endline": 58,
            "stmt": [
                58,
                5,
                58,
                32
              ],
            "line": 58,
            "endcolumn": 31,
            "column": 19
          },
        {
            "module": "game",
            "endline": 58,
            "stmt": [
                58,
                5,
                58,
                32
              ],
            "line": 58,
            "endcolumn": 31,
            "column": 16
          },
        {
            "module": "game",
            "endline": 58,
            "stmt": [
                58,
                5,
                58,
                32
              ],
            "line": 58,
            "endcolumn": 32,
            "column": 5
          },
        {
            "module": "game",
            "endline": 58,
            "stmt": [
                58,
                5,
                58,
                32
              ],
            "line": 58,
            "endcolumn": 32,
            "column": 5
          },
        {
            "module": "game",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                21
              ],
            "line": 60,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                21
              ],
            "line": 60,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                21
              ],
            "line": 60,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "game",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                21
              ],
            "line": 60,
            "endcolumn": 20,
            "column": 14
          },
        {
            "module": "game",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                21
              ],
            "line": 60,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                21
              ],
            "line": 60,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 39,
            "stmt": [
                39,
                1,
                39,
                35
              ],
            "line": 39,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "game",
            "endline": 39,
            "stmt": [
                39,
                1,
                39,
                35
              ],
            "line": 39,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "game",
            "endline": 62,
            "stmt": [
                62,
                1,
                62,
                22
              ],
            "line": 62,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "game",
            "endline": 62,
            "stmt": [
                62,
                1,
                62,
                22
              ],
            "line": 62,
            "endcolumn": 22,
            "column": 1
          },
        {
            "module": "game",
            "endline": 63,
            "stmt": [
                63,
                5,
                63,
                21
              ],
            "line": 63,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 63,
            "stmt": [
                63,
                5,
                63,
                21
              ],
            "line": 63,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "game",
            "endline": 63,
            "stmt": [
                63,
                5,
                63,
                21
              ],
            "line": 63,
            "endcolumn": 20,
            "column": 14
          },
        {
            "module": "game",
            "endline": 63,
            "stmt": [
                63,
                5,
                63,
                21
              ],
            "line": 63,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 63,
            "stmt": [
                63,
                5,
                63,
                21
              ],
            "line": 63,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                48
              ],
            "line": 65,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                48
              ],
            "line": 65,
            "endcolumn": 24,
            "column": 19
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                48
              ],
            "line": 65,
            "endcolumn": 24,
            "column": 16
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                48
              ],
            "line": 65,
            "endcolumn": 24,
            "column": 16
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                48
              ],
            "line": 65,
            "endcolumn": 25,
            "column": 12
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                48
              ],
            "line": 65,
            "endcolumn": 30,
            "column": 30
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                48
              ],
            "line": 65,
            "endcolumn": 46,
            "column": 33
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                48
              ],
            "line": 65,
            "endcolumn": 46,
            "column": 30
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                48
              ],
            "line": 65,
            "endcolumn": 46,
            "column": 30
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                48
              ],
            "line": 65,
            "endcolumn": 46,
            "column": 12
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                48
              ],
            "line": 65,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                41
              ],
            "line": 66,
            "endcolumn": 40,
            "column": 14
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                41
              ],
            "line": 66,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                41
              ],
            "line": 66,
            "endcolumn": 30,
            "column": 18
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                41
              ],
            "line": 66,
            "endcolumn": 30,
            "column": 15
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                41
              ],
            "line": 66,
            "endcolumn": 40,
            "column": 14
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                41
              ],
            "line": 66,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                41
              ],
            "line": 66,
            "endcolumn": 40,
            "column": 37
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                41
              ],
            "line": 66,
            "endcolumn": 40,
            "column": 34
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                41
              ],
            "line": 66,
            "endcolumn": 40,
            "column": 14
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                41
              ],
            "line": 66,
            "endcolumn": 41,
            "column": 9
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                41
              ],
            "line": 66,
            "endcolumn": 41,
            "column": 9
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                48
              ],
            "line": 65,
            "endcolumn": 48,
            "column": 5
          },
        {
            "module": "game",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                22
              ],
            "line": 69,
            "endcolumn": 9,
            "column": 8
          },
        {
            "module": "game",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                22
              ],
            "line": 69,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                22
              ],
            "line": 69,
            "endcolumn": 21,
            "column": 17
          },
        {
            "module": "game",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                22
              ],
            "line": 69,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "game",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                22
              ],
            "line": 69,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "game",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                22
              ],
            "line": 69,
            "endcolumn": 21,
            "column": 8
          },
        {
            "module": "game",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                22
              ],
            "line": 69,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "game",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                39
              ],
            "line": 70,
            "endcolumn": 9,
            "column": 9
          },
        {
            "module": "game",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                39
              ],
            "line": 70,
            "endcolumn": 16,
            "column": 12
          },
        {
            "module": "game",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                39
              ],
            "line": 70,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "game",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                39
              ],
            "line": 70,
            "endcolumn": 38,
            "column": 27
          },
        {
            "module": "game",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                39
              ],
            "line": 70,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "game",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                39
              ],
            "line": 70,
            "endcolumn": 34,
            "column": 30
          },
        {
            "module": "game",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                39
              ],
            "line": 70,
            "endcolumn": 34,
            "column": 27
          },
        {
            "module": "game",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                39
              ],
            "line": 70,
            "endcolumn": 34,
            "column": 27
          },
        {
            "module": "game",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                39
              ],
            "line": 70,
            "endcolumn": 38,
            "column": 27
          },
        {
            "module": "game",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                39
              ],
            "line": 70,
            "endcolumn": 38,
            "column": 37
          },
        {
            "module": "game",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                39
              ],
            "line": 70,
            "endcolumn": 38,
            "column": 27
          },
        {
            "module": "game",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                39
              ],
            "line": 70,
            "endcolumn": 39,
            "column": 20
          },
        {
            "module": "game",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                39
              ],
            "line": 70,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                9,
                71,
                39
              ],
            "line": 71,
            "endcolumn": 9,
            "column": 9
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                9,
                71,
                39
              ],
            "line": 71,
            "endcolumn": 16,
            "column": 12
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                9,
                71,
                39
              ],
            "line": 71,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                9,
                71,
                39
              ],
            "line": 71,
            "endcolumn": 38,
            "column": 27
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                9,
                71,
                39
              ],
            "line": 71,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                9,
                71,
                39
              ],
            "line": 71,
            "endcolumn": 34,
            "column": 30
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                9,
                71,
                39
              ],
            "line": 71,
            "endcolumn": 34,
            "column": 27
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                9,
                71,
                39
              ],
            "line": 71,
            "endcolumn": 34,
            "column": 27
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                9,
                71,
                39
              ],
            "line": 71,
            "endcolumn": 38,
            "column": 27
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                9,
                71,
                39
              ],
            "line": 71,
            "endcolumn": 38,
            "column": 37
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                9,
                71,
                39
              ],
            "line": 71,
            "endcolumn": 38,
            "column": 37
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                9,
                71,
                39
              ],
            "line": 71,
            "endcolumn": 38,
            "column": 27
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                9,
                71,
                39
              ],
            "line": 71,
            "endcolumn": 39,
            "column": 20
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                9,
                71,
                39
              ],
            "line": 71,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "game",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                22
              ],
            "line": 69,
            "endcolumn": 22,
            "column": 5
          },
        {
            "module": "game",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                24
              ],
            "line": 72,
            "endcolumn": 11,
            "column": 10
          },
        {
            "module": "game",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                24
              ],
            "line": 72,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "game",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                24
              ],
            "line": 72,
            "endcolumn": 23,
            "column": 19
          },
        {
            "module": "game",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                24
              ],
            "line": 72,
            "endcolumn": 23,
            "column": 16
          },
        {
            "module": "game",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                24
              ],
            "line": 72,
            "endcolumn": 23,
            "column": 16
          },
        {
            "module": "game",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                24
              ],
            "line": 72,
            "endcolumn": 23,
            "column": 10
          },
        {
            "module": "game",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                24
              ],
            "line": 72,
            "endcolumn": 8,
            "column": 5
          },
        {
            "module": "game",
            "endline": 73,
            "stmt": [
                73,
                9,
                73,
                39
              ],
            "line": 73,
            "endcolumn": 9,
            "column": 9
          },
        {
            "module": "game",
            "endline": 73,
            "stmt": [
                73,
                9,
                73,
                39
              ],
            "line": 73,
            "endcolumn": 16,
            "column": 12
          },
        {
            "module": "game",
            "endline": 73,
            "stmt": [
                73,
                9,
                73,
                39
              ],
            "line": 73,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "game",
            "endline": 73,
            "stmt": [
                73,
                9,
                73,
                39
              ],
            "line": 73,
            "endcolumn": 38,
            "column": 27
          },
        {
            "module": "game",
            "endline": 73,
            "stmt": [
                73,
                9,
                73,
                39
              ],
            "line": 73,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "game",
            "endline": 73,
            "stmt": [
                73,
                9,
                73,
                39
              ],
            "line": 73,
            "endcolumn": 34,
            "column": 30
          },
        {
            "module": "game",
            "endline": 73,
            "stmt": [
                73,
                9,
                73,
                39
              ],
            "line": 73,
            "endcolumn": 34,
            "column": 27
          },
        {
            "module": "game",
            "endline": 73,
            "stmt": [
                73,
                9,
                73,
                39
              ],
            "line": 73,
            "endcolumn": 34,
            "column": 27
          },
        {
            "module": "game",
            "endline": 73,
            "stmt": [
                73,
                9,
                73,
                39
              ],
            "line": 73,
            "endcolumn": 38,
            "column": 27
          },
        {
            "module": "game",
            "endline": 73,
            "stmt": [
                73,
                9,
                73,
                39
              ],
            "line": 73,
            "endcolumn": 38,
            "column": 37
          },
        {
            "module": "game",
            "endline": 73,
            "stmt": [
                73,
                9,
                73,
                39
              ],
            "line": 73,
            "endcolumn": 38,
            "column": 27
          },
        {
            "module": "game",
            "endline": 73,
            "stmt": [
                73,
                9,
                73,
                39
              ],
            "line": 73,
            "endcolumn": 39,
            "column": 20
          },
        {
            "module": "game",
            "endline": 73,
            "stmt": [
                73,
                9,
                73,
                39
              ],
            "line": 73,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                9,
                74,
                39
              ],
            "line": 74,
            "endcolumn": 9,
            "column": 9
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                9,
                74,
                39
              ],
            "line": 74,
            "endcolumn": 16,
            "column": 12
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                9,
                74,
                39
              ],
            "line": 74,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                9,
                74,
                39
              ],
            "line": 74,
            "endcolumn": 38,
            "column": 27
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                9,
                74,
                39
              ],
            "line": 74,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                9,
                74,
                39
              ],
            "line": 74,
            "endcolumn": 34,
            "column": 30
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                9,
                74,
                39
              ],
            "line": 74,
            "endcolumn": 34,
            "column": 27
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                9,
                74,
                39
              ],
            "line": 74,
            "endcolumn": 34,
            "column": 27
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                9,
                74,
                39
              ],
            "line": 74,
            "endcolumn": 38,
            "column": 27
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                9,
                74,
                39
              ],
            "line": 74,
            "endcolumn": 38,
            "column": 37
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                9,
                74,
                39
              ],
            "line": 74,
            "endcolumn": 38,
            "column": 37
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                9,
                74,
                39
              ],
            "line": 74,
            "endcolumn": 38,
            "column": 27
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                9,
                74,
                39
              ],
            "line": 74,
            "endcolumn": 39,
            "column": 20
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                9,
                74,
                39
              ],
            "line": 74,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 20,
            "column": 16
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 20,
            "column": 13
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 20,
            "column": 13
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 21,
            "column": 9
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 26,
            "column": 26
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 26,
            "column": 9
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 52,
            "column": 8
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 38,
            "column": 38
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 45,
            "column": 41
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 45,
            "column": 38
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 45,
            "column": 38
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 46,
            "column": 34
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 51,
            "column": 51
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 51,
            "column": 34
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 31,
            "column": 29
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 52,
            "column": 8
          },
        {
            "module": "game",
            "endline": 77,
            "stmt": [
                77,
                5,
                77,
                53
              ],
            "line": 77,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "game",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                31
              ],
            "line": 78,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "game",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                31
              ],
            "line": 78,
            "endcolumn": 30,
            "column": 20
          },
        {
            "module": "game",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                31
              ],
            "line": 78,
            "endcolumn": 30,
            "column": 17
          },
        {
            "module": "game",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                31
              ],
            "line": 78,
            "endcolumn": 31,
            "column": 9
          },
        {
            "module": "game",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                31
              ],
            "line": 78,
            "endcolumn": 31,
            "column": 9
          },
        {
            "module": "game",
            "endline": 80,
            "stmt": [
                80,
                5,
                80,
                21
              ],
            "line": 80,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 80,
            "stmt": [
                80,
                5,
                80,
                21
              ],
            "line": 80,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 80,
            "stmt": [
                80,
                5,
                80,
                21
              ],
            "line": 80,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "game",
            "endline": 80,
            "stmt": [
                80,
                5,
                80,
                21
              ],
            "line": 80,
            "endcolumn": 20,
            "column": 14
          },
        {
            "module": "game",
            "endline": 80,
            "stmt": [
                80,
                5,
                80,
                21
              ],
            "line": 80,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 80,
            "stmt": [
                80,
                5,
                80,
                21
              ],
            "line": 80,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 62,
            "stmt": [
                62,
                1,
                62,
                22
              ],
            "line": 62,
            "endcolumn": 22,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                16
              ],
            "line": 5,
            "endcolumn": 16,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                16
              ],
            "line": 5,
            "endcolumn": 16,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                16
              ],
            "line": 5,
            "endcolumn": 9,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                15
              ],
            "line": 7,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                15
              ],
            "line": 7,
            "endcolumn": 15,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                48
              ],
            "line": 9,
            "endcolumn": 47,
            "column": 36
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                48
              ],
            "line": 9,
            "endcolumn": 43,
            "column": 37
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                48
              ],
            "line": 9,
            "endcolumn": 47,
            "column": 36
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                48
              ],
            "line": 9,
            "endcolumn": 47,
            "column": 46
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                48
              ],
            "line": 9,
            "endcolumn": 47,
            "column": 36
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                48
              ],
            "line": 9,
            "endcolumn": 48,
            "column": 26
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                48
              ],
            "line": 9,
            "endcolumn": 24,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                41
              ],
            "line": 11,
            "endcolumn": 41,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                41
              ],
            "line": 11,
            "endcolumn": 41,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                41
              ],
            "line": 11,
            "endcolumn": 25,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                41
              ],
            "line": 11,
            "endcolumn": 26,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                41
              ],
            "line": 11,
            "endcolumn": 39,
            "column": 35
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                41
              ],
            "line": 11,
            "endcolumn": 40,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                41
              ],
            "line": 11,
            "endcolumn": 40,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                41
              ],
            "line": 11,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                41
              ],
            "line": 11,
            "endcolumn": 41,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                41
              ],
            "line": 11,
            "endcolumn": 41,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                36
              ],
            "line": 14,
            "endcolumn": 36,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                36
              ],
            "line": 14,
            "endcolumn": 36,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                36
              ],
            "line": 14,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                36
              ],
            "line": 14,
            "endcolumn": 27,
            "column": 23
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                36
              ],
            "line": 14,
            "endcolumn": 35,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                36
              ],
            "line": 14,
            "endcolumn": 35,
            "column": 23
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                36
              ],
            "line": 14,
            "endcolumn": 36,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                36
              ],
            "line": 14,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                36
              ],
            "line": 14,
            "endcolumn": 36,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                36
              ],
            "line": 14,
            "endcolumn": 36,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 40,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 40,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 25,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 25,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 33,
            "column": 29
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 33,
            "column": 29
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 33,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 34,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 39,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 40,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 40,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                28
              ],
            "line": 22,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                28
              ],
            "line": 22,
            "endcolumn": 23,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                28
              ],
            "line": 22,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                28
              ],
            "line": 22,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                28
              ],
            "line": 22,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                28
              ],
            "line": 22,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                28
              ],
            "line": 22,
            "endcolumn": 28,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                28
              ],
            "line": 22,
            "endcolumn": 28,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                15
              ],
            "line": 7,
            "endcolumn": 15,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                1,
                24,
                35
              ],
            "line": 24,
            "endcolumn": 25,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                1,
                24,
                35
              ],
            "line": 24,
            "endcolumn": 34,
            "column": 28
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                1,
                24,
                35
              ],
            "line": 24,
            "endcolumn": 35,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                1,
                24,
                35
              ],
            "line": 24,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                1,
                24,
                35
              ],
            "line": 24,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                1,
                26,
                25
              ],
            "line": 26,
            "endcolumn": 12,
            "column": 12
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                1,
                26,
                25
              ],
            "line": 26,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                1,
                26,
                25
              ],
            "line": 26,
            "endcolumn": 24,
            "column": 12
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                1,
                26,
                25
              ],
            "line": 26,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                1,
                26,
                25
              ],
            "line": 26,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                1,
                26,
                25
              ],
            "line": 26,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                20
              ],
            "line": 27,
            "endcolumn": 16,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                20
              ],
            "line": 27,
            "endcolumn": 19,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                20
              ],
            "line": 27,
            "endcolumn": 19,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                20
              ],
            "line": 27,
            "endcolumn": 20,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                20
              ],
            "line": 27,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                20
              ],
            "line": 27,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                1,
                26,
                25
              ],
            "line": 26,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                1,
                1,
                27,
                26
              ],
            "line": 1,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                1,
                1,
                27,
                26
              ],
            "line": 1,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                1,
                1,
                27,
                26
              ],
            "line": 1,
            "endcolumn": 26,
            "column": 1
          }
      ],
    "code": [
        {
            "args": "()",
            "name": "__init__",
            "op": "Frame"
          },
        {
            "pc": "54",
            "op": "Jump"
          },
        {
            "args": "(s, b, e)",
            "name": "subseq",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu3",
            "op": "StoreVar"
          },
        {
            "value": "b",
            "op": "LoadVar"
          },
        {
            "value": "b",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "..",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "x",
            "op": "Cut"
          },
        {
            "pc": "26",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu3",
            "op": "LoadVar"
          },
        {
            "value": "$accu3",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "x",
            "op": "LoadVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu3",
            "op": "StoreVar"
          },
        {
            "pc": "14",
            "op": "Jump"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "value": "$accu3",
            "op": "LoadVar"
          },
        {
            "value": "$accu3",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "54",
            "op": "Jump"
          },
        {
            "args": "(s, e)",
            "name": "append",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "54",
            "op": "Jump"
          },
        {
            "args": "s",
            "name": "head",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "value": {
                "type": "pc",
                "value": "57"
              },
            "op": "Push"
          },
        {
            "value": "list$tail",
            "op": "Builtin"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "s",
            "name": "tail",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "2"
              },
            "op": "Apply"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "a",
            "name": "sum",
            "op": "Frame"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "accu",
            "op": "StoreVar"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": "a",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "Cut"
          },
        {
            "pc": "87",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "accu",
            "op": "LoadVar"
          },
        {
            "value": "accu",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "accu",
            "op": "StoreVar"
          },
        {
            "pc": "78",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "result": "accu",
            "op": "Return"
          },
        {
            "value": "accu",
            "op": "DelVar"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "a",
            "name": "set",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu72",
            "op": "StoreVar"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": "a",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "Cut"
          },
        {
            "pc": "107",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu72",
            "op": "LoadVar"
          },
        {
            "value": "$accu72",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "$accu72",
            "op": "StoreVar"
          },
        {
            "pc": "98",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "$accu72",
            "op": "LoadVar"
          },
        {
            "value": "$accu72",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "a",
            "name": "list",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu88",
            "op": "StoreVar"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": "a",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "Cut"
          },
        {
            "pc": "129",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu88",
            "op": "LoadVar"
          },
        {
            "value": "$accu88",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu88",
            "op": "StoreVar"
          },
        {
            "pc": "120",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "$accu88",
            "op": "LoadVar"
          },
        {
            "value": "$accu88",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "d",
            "name": "values",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu104",
            "op": "StoreVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "key": "_",
            "op": "Cut"
          },
        {
            "value": "_",
            "op": "DelVar"
          },
        {
            "pc": "152",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu104",
            "op": "LoadVar"
          },
        {
            "value": "$accu104",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu104",
            "op": "StoreVar"
          },
        {
            "pc": "142",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "$accu104",
            "op": "LoadVar"
          },
        {
            "value": "$accu104",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "d",
            "name": "items",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu120",
            "op": "StoreVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "key": "k",
            "op": "Cut"
          },
        {
            "pc": "179",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu120",
            "op": "LoadVar"
          },
        {
            "value": "$accu120",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu120",
            "op": "StoreVar"
          },
        {
            "pc": "165",
            "op": "Jump"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "$accu120",
            "op": "LoadVar"
          },
        {
            "value": "$accu120",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "a",
            "name": "qsort",
            "op": "Frame"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "195",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "a",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "sorted",
            "op": "StoreVar"
          },
        {
            "pc": "261",
            "op": "Jump"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "45"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": "a",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "57"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "(pivot, rest)",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu155",
            "op": "StoreVar"
          },
        {
            "value": "rest",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "Cut"
          },
        {
            "pc": "222",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "pivot",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "<",
            "op": "Nary"
          },
        {
            "pc": "208",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu155",
            "op": "LoadVar"
          },
        {
            "value": "$accu155",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu155",
            "op": "StoreVar"
          },
        {
            "pc": "208",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "$accu155",
            "op": "LoadVar"
          },
        {
            "value": "$accu155",
            "op": "DelVar"
          },
        {
            "value": "lower",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu172",
            "op": "StoreVar"
          },
        {
            "value": "rest",
            "op": "LoadVar"
          },
        {
            "value": "rest",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "Cut"
          },
        {
            "pc": "245",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "pivot",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": ">=",
            "op": "Nary"
          },
        {
            "pc": "231",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu172",
            "op": "LoadVar"
          },
        {
            "value": "$accu172",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu172",
            "op": "StoreVar"
          },
        {
            "pc": "231",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "$accu172",
            "op": "LoadVar"
          },
        {
            "value": "$accu172",
            "op": "DelVar"
          },
        {
            "value": "higher",
            "op": "StoreVar"
          },
        {
            "value": "lower",
            "op": "LoadVar"
          },
        {
            "value": "lower",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "186"
              },
            "op": "Apply"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "pivot",
            "op": "LoadVar"
          },
        {
            "value": "pivot",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "higher",
            "op": "LoadVar"
          },
        {
            "value": "higher",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "186"
              },
            "op": "Apply"
          },
        {
            "arity": 3,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "sorted",
            "op": "StoreVar"
          },
        {
            "result": "sorted",
            "op": "Return"
          },
        {
            "value": "sorted",
            "op": "DelVar"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "d",
            "name": "sorted",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "113"
              },
            "op": "Apply"
          },
        {
            "value": {
                "type": "pc",
                "value": "186"
              },
            "op": "Apply"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "d",
            "name": "reversed",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": "n",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu211",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "value": "n",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "..",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "i",
            "op": "Cut"
          },
        {
            "pc": "298",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu211",
            "op": "LoadVar"
          },
        {
            "value": "$accu211",
            "op": "DelVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "n",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu211",
            "op": "StoreVar"
          },
        {
            "pc": "284",
            "op": "Jump"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "value": "n",
            "op": "DelVar"
          },
        {
            "value": "$accu211",
            "op": "LoadVar"
          },
        {
            "value": "$accu211",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "(d, e)",
            "name": "index",
            "op": "Frame"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "i",
            "op": "StoreVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "322",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "i",
            "op": "StoreVar"
          },
        {
            "pc": "309",
            "op": "Jump"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "result": "i",
            "op": "Return"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "(d, prefix)",
            "name": "startswith",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "prefix",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "<=",
            "op": "Nary"
          },
        {
            "pc": "368",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu257",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "prefix",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "..",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "i",
            "op": "Cut"
          },
        {
            "pc": "361",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu257",
            "op": "LoadVar"
          },
        {
            "value": "$accu257",
            "op": "DelVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "prefix",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu257",
            "op": "StoreVar"
          },
        {
            "pc": "344",
            "op": "Jump"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "value": "prefix",
            "op": "DelVar"
          },
        {
            "value": "$accu257",
            "op": "LoadVar"
          },
        {
            "value": "$accu257",
            "op": "DelVar"
          },
        {
            "arity": 1,
            "value": "all",
            "op": "Nary"
          },
        {
            "pc": "371",
            "op": "Jump"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": "prefix",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "(d, f, z)",
            "name": "foldl",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "z",
            "op": "LoadVar"
          },
        {
            "value": "z",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "Cut"
          },
        {
            "pc": "396",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "382",
            "op": "Jump"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "(d, f, z)",
            "name": "foldr",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "412",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "value": "z",
            "op": "LoadVar"
          },
        {
            "value": "z",
            "op": "DelVar"
          },
        {
            "pc": "434",
            "op": "Jump"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "57"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "z",
            "op": "LoadVar"
          },
        {
            "value": "z",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "400"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "(f, d, z)",
            "name": "reduce",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "z",
            "op": "LoadVar"
          },
        {
            "value": "z",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "374"
              },
            "op": "Apply"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "s",
            "name": "permuted",
            "op": "Frame"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "perm",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": "c",
            "op": "StoreVar"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "482",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "op": "Choose"
          },
        {
            "value": "e",
            "op": "StoreVar"
          },
        {
            "value": "perm",
            "op": "LoadVar"
          },
        {
            "value": "perm",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "perm",
            "op": "StoreVar"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "value": "c",
            "op": "StoreVar"
          },
        {
            "pc": "459",
            "op": "Jump"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "result": "perm",
            "op": "Return"
          },
        {
            "value": "perm",
            "op": "DelVar"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "(cond, s)",
            "name": "filter",
            "op": "Frame"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu377",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "Cut"
          },
        {
            "pc": "507",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "cond",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "pc": "492",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu377",
            "op": "LoadVar"
          },
        {
            "value": "$accu377",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu377",
            "op": "StoreVar"
          },
        {
            "pc": "492",
            "op": "Jump"
          },
        {
            "value": "cond",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "$accu377",
            "op": "LoadVar"
          },
        {
            "value": "$accu377",
            "op": "DelVar"
          },
        {
            "value": "t",
            "op": "StoreVar"
          },
        {
            "result": "t",
            "op": "Return"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "(f, s)",
            "name": "map",
            "op": "Frame"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu398",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "Cut"
          },
        {
            "pc": "533",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu398",
            "op": "LoadVar"
          },
        {
            "value": "$accu398",
            "op": "DelVar"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu398",
            "op": "StoreVar"
          },
        {
            "pc": "521",
            "op": "Jump"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "value": "$accu398",
            "op": "LoadVar"
          },
        {
            "value": "$accu398",
            "op": "DelVar"
          },
        {
            "value": "t",
            "op": "StoreVar"
          },
        {
            "result": "t",
            "op": "Return"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "empty",
            "op": "Frame"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "bg",
            "op": "StoreVar"
          },
        {
            "result": "bg",
            "op": "Return"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "s",
            "name": "fromSet",
            "op": "Frame"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu422",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "Cut"
          },
        {
            "pc": "563",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu422",
            "op": "LoadVar"
          },
        {
            "value": "$accu422",
            "op": "DelVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": "$accu422",
            "op": "StoreVar"
          },
        {
            "pc": "553",
            "op": "Jump"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "value": "$accu422",
            "op": "LoadVar"
          },
        {
            "value": "$accu422",
            "op": "DelVar"
          },
        {
            "value": "bg",
            "op": "StoreVar"
          },
        {
            "result": "bg",
            "op": "Return"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "a",
            "name": "fromList",
            "op": "Frame"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "bg",
            "op": "StoreVar"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": "a",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "Cut"
          },
        {
            "pc": "599",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "592",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "bg"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "op": "StoreVar"
          },
        {
            "pc": "576",
            "op": "Jump"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "bg"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "op": "StoreVar"
          },
        {
            "pc": "576",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "result": "bg",
            "op": "Return"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "605"
              },
            "op": "Push"
          },
        {
            "value": "bag$multiplicity",
            "op": "Builtin"
          },
        {
            "pc": "624",
            "op": "Jump"
          },
        {
            "args": "(bg, elt)",
            "name": "multiplicity",
            "op": "Frame"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "618",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "pc": "622",
            "op": "Jump"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "result": "count",
            "op": "Return"
          },
        {
            "value": "count",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "627"
              },
            "op": "Push"
          },
        {
            "value": "bag$size",
            "op": "Builtin"
          },
        {
            "pc": "646",
            "op": "Jump"
          },
        {
            "args": "bg",
            "name": "size",
            "op": "Frame"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "c",
            "key": "_",
            "op": "Cut"
          },
        {
            "value": "_",
            "op": "DelVar"
          },
        {
            "pc": "643",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "count",
            "op": "LoadVar"
          },
        {
            "value": "count",
            "op": "DelVar"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "pc": "633",
            "op": "Jump"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "result": "count",
            "op": "Return"
          },
        {
            "value": "count",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "649"
              },
            "op": "Push"
          },
        {
            "value": "bag$bmin",
            "op": "Builtin"
          },
        {
            "pc": "665",
            "op": "Jump"
          },
        {
            "args": "bg",
            "name": "bmin",
            "op": "Frame"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "arity": 1,
            "value": "keys",
            "op": "Nary"
          },
        {
            "arity": 1,
            "value": "min",
            "op": "Nary"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "result": "count",
            "op": "Return"
          },
        {
            "value": "count",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "668"
              },
            "op": "Push"
          },
        {
            "value": "bag$bmax",
            "op": "Builtin"
          },
        {
            "pc": "693",
            "op": "Jump"
          },
        {
            "args": "bg",
            "name": "bmax",
            "op": "Frame"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "arity": 1,
            "value": "keys",
            "op": "Nary"
          },
        {
            "arity": 1,
            "value": "max",
            "op": "Nary"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "result": "count",
            "op": "Return"
          },
        {
            "value": "count",
            "op": "DelVar"
          },
        {
            "pc": "693",
            "op": "Jump"
          },
        {
            "args": "bg",
            "name": "bchoose",
            "op": "Frame"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "arity": 1,
            "value": "keys",
            "op": "Nary"
          },
        {
            "op": "Choose"
          },
        {
            "value": "elt",
            "op": "StoreVar"
          },
        {
            "result": "elt",
            "op": "Return"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "696"
              },
            "op": "Push"
          },
        {
            "value": "bag$add",
            "op": "Builtin"
          },
        {
            "pc": "722",
            "op": "Jump"
          },
        {
            "args": "(bg, elt)",
            "name": "add",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "715",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "result"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "op": "StoreVar"
          },
        {
            "pc": "721",
            "op": "Jump"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "result"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "value": {
                "type": "pc",
                "value": "725"
              },
            "op": "Push"
          },
        {
            "value": "bag$remove",
            "op": "Builtin"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(bg, elt)",
            "name": "remove",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "765",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": ">",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "result"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "op": "StoreVar"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "765",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "result"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "DelVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(bg, k)",
            "name": "combinations",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "781",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "856",
            "op": "Jump"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "627"
              },
            "op": "Apply"
          },
        {
            "value": "n",
            "op": "StoreVar"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": "n",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": ">",
            "op": "Nary"
          },
        {
            "pc": "794",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "value": "n",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "856",
            "op": "Jump"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": "n",
            "op": "LoadVar"
          },
        {
            "value": "n",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "806",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "856",
            "op": "Jump"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "649"
              },
            "op": "Apply"
          },
        {
            "value": "hd",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "hd",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "725"
              },
            "op": "Apply"
          },
        {
            "value": "tl",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu645",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "tl",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "768"
              },
            "op": "Apply"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "x",
            "op": "Cut"
          },
        {
            "pc": "842",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu645",
            "op": "LoadVar"
          },
        {
            "value": "$accu645",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "x",
            "op": "LoadVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "hd",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "696"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "$accu645",
            "op": "StoreVar"
          },
        {
            "pc": "828",
            "op": "Jump"
          },
        {
            "value": "hd",
            "op": "DelVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "value": "$accu645",
            "op": "LoadVar"
          },
        {
            "value": "$accu645",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "tl",
            "op": "LoadVar"
          },
        {
            "value": "tl",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "768"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "|",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "p",
            "name": "atomic_load",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "p",
            "op": "LoadVar"
          },
        {
            "value": "p",
            "op": "DelVar"
          },
        {
            "op": "Load"
          },
        {
            "value": "current",
            "op": "StoreVar"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "current",
            "op": "Return"
          },
        {
            "value": "current",
            "op": "DelVar"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(p, v)",
            "name": "atomic_store",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "p",
            "op": "LoadVar"
          },
        {
            "value": "p",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "lk",
            "name": "tas",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "lk",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "value": "oldvalue",
            "op": "StoreVar"
          },
        {
            "value": "lk",
            "op": "LoadVar"
          },
        {
            "value": "lk",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "oldvalue",
            "op": "Return"
          },
        {
            "value": "oldvalue",
            "op": "DelVar"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(p, old, new)",
            "name": "cas",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "p",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "value": "old",
            "op": "LoadVar"
          },
        {
            "value": "old",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "value": "success",
            "op": "StoreVar"
          },
        {
            "value": "success",
            "op": "LoadVar"
          },
        {
            "pc": "906",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "p",
            "op": "LoadVar"
          },
        {
            "value": "p",
            "op": "DelVar"
          },
        {
            "value": "new",
            "op": "LoadVar"
          },
        {
            "value": "new",
            "op": "DelVar"
          },
        {
            "op": "Store"
          },
        {
            "value": "new",
            "op": "DelVar"
          },
        {
            "value": "p",
            "op": "DelVar"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "success",
            "op": "Return"
          },
        {
            "value": "success",
            "op": "DelVar"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "initial",
            "name": "BinSema",
            "op": "Frame"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "initial",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": "initial",
            "op": "LoadVar"
          },
        {
            "value": "initial",
            "op": "DelVar"
          },
        {
            "value": "sema",
            "op": "StoreVar"
          },
        {
            "result": "sema",
            "op": "Return"
          },
        {
            "value": "sema",
            "op": "DelVar"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "Lock",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "912"
              },
            "op": "Apply"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "binsema",
            "name": "acquired",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "binsema",
            "op": "LoadVar"
          },
        {
            "value": "binsema",
            "op": "DelVar"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "binsema",
            "name": "held",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "binsema",
            "op": "LoadVar"
          },
        {
            "value": "binsema",
            "op": "DelVar"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "binsema",
            "name": "acquire",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "binsema",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "not",
            "op": "Nary"
          },
        {
            "pc": "962",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "pc": "965",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "pc": "955",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "value": "binsema",
            "op": "LoadVar"
          },
        {
            "value": "binsema",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "binsema",
            "name": "release",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "binsema",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": "binsema",
            "op": "LoadVar"
          },
        {
            "value": "binsema",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "Condition",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "541"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(c, lk)",
            "name": "wait",
            "op": "Frame"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "cnt",
            "op": "StoreVar"
          },
        {
            "value": "cnt",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "op": "Save"
          },
        {
            "op": "Continue"
          },
        {
            "value": "((), ctx)",
            "op": "StoreVar"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": {
                "type": "pc",
                "value": "605"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "ctx",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "cnt",
            "op": "StoreVar"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "696"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "ctx",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "op": "Store"
          },
        {
            "value": "lk",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "lk",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "not",
            "op": "Nary"
          },
        {
            "pc": "1050",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "pc",
                "value": "605"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "ctx",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "cnt",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "<=",
            "op": "Nary"
          },
        {
            "pc": "1051",
            "op": "Jump"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "pc": "1056",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "value": "cnt",
            "op": "DelVar"
          },
        {
            "value": "ctx",
            "op": "DelVar"
          },
        {
            "pc": "1059",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "pc": "1032",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "value": "lk",
            "op": "LoadVar"
          },
        {
            "value": "lk",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "c",
            "name": "notify",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "pc",
                "value": "541"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "1093",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "725"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "685"
              },
            "op": "Push"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "op": "Store"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "c",
            "name": "notifyAll",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "541"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "cnt",
            "name": "Semaphore",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "cnt",
            "op": "LoadVar"
          },
        {
            "value": "cnt",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "sema",
            "name": "P",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "sema",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": ">",
            "op": "Nary"
          },
        {
            "pc": "1125",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "pc": "1128",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "pc": "1117",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "value": "sema",
            "op": "LoadVar"
          },
        {
            "value": "sema",
            "op": "DelVar"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "sema",
            "name": "V",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "sema",
            "op": "LoadVar"
          },
        {
            "value": "sema",
            "op": "DelVar"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "Queue",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "q",
            "name": "get",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "q",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "1167",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "pc": "1170",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "pc": "1158",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "value": {
                "type": "pc",
                "value": "45"
              },
            "op": "Push"
          },
        {
            "value": "q",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "value": "q",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "57"
              },
            "op": "Push"
          },
        {
            "value": "q",
            "op": "LoadVar"
          },
        {
            "value": "q",
            "op": "DelVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(q, item)",
            "name": "put",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "q",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "33"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "q",
            "op": "LoadVar"
          },
        {
            "value": "q",
            "op": "DelVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "item",
            "op": "LoadVar"
          },
        {
            "value": "item",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(s, t)",
            "name": "issubset",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "t",
            "op": "LoadVar"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "&",
            "op": "Nary"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(s, t)",
            "name": "issubseteq",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "t",
            "op": "LoadVar"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "&",
            "op": "Nary"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(s, t)",
            "name": "issubsetstrict",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "t",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "1244",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "t",
            "op": "LoadVar"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "&",
            "op": "Nary"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "1247",
            "op": "Jump"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(s, t)",
            "name": "issuperset",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": "t",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "&",
            "op": "Nary"
          },
        {
            "value": "t",
            "op": "LoadVar"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(s, t)",
            "name": "issuperseteq",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": "t",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "&",
            "op": "Nary"
          },
        {
            "value": "t",
            "op": "LoadVar"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(s, t)",
            "name": "issupersetstrict",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "t",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "1288",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": "t",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "&",
            "op": "Nary"
          },
        {
            "value": "t",
            "op": "LoadVar"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "1291",
            "op": "Jump"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(s, elt)",
            "name": "add",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "|",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(s, elt)",
            "name": "remove",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "s",
            "name": "subsets",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu1076",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "Cut"
          },
        {
            "pc": "1341",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu1076",
            "op": "LoadVar"
          },
        {
            "value": "$accu1076",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1318"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "$accu1076",
            "op": "StoreVar"
          },
        {
            "pc": "1327",
            "op": "Jump"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": "$accu1076",
            "op": "LoadVar"
          },
        {
            "value": "$accu1076",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "1350"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "|",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "s",
            "name": "union",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "Cut"
          },
        {
            "pc": "1366",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "|",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "1357",
            "op": "Jump"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "d",
            "name": "cartesian",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "1380",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "pc": "1415",
            "op": "Jump"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu1121",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "57"
              },
            "op": "Push"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "pc",
                "value": "1369"
              },
            "op": "Apply"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "t",
            "op": "Cut"
          },
        {
            "pc": "1411",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "Cut"
          },
        {
            "pc": "1408",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu1121",
            "op": "LoadVar"
          },
        {
            "value": "$accu1121",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "t",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "$accu1121",
            "op": "StoreVar"
          },
        {
            "pc": "1395",
            "op": "Jump"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "pc": "1388",
            "op": "Jump"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "value": "$accu1121",
            "op": "LoadVar"
          },
        {
            "value": "$accu1121",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(s, k)",
            "name": "combinations",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "1431",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "1504",
            "op": "Jump"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": "n",
            "op": "StoreVar"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": "n",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": ">",
            "op": "Nary"
          },
        {
            "pc": "1444",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "value": "n",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "1504",
            "op": "Jump"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": "n",
            "op": "LoadVar"
          },
        {
            "value": "n",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "1456",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "1504",
            "op": "Jump"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "min",
            "op": "Nary"
          },
        {
            "value": "hd",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "hd",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "value": "tl",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu1190",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "tl",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1418"
              },
            "op": "Apply"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "x",
            "op": "Cut"
          },
        {
            "pc": "1490",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu1190",
            "op": "LoadVar"
          },
        {
            "value": "$accu1190",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "hd",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "x",
            "op": "LoadVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "|",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "$accu1190",
            "op": "StoreVar"
          },
        {
            "pc": "1477",
            "op": "Jump"
          },
        {
            "value": "hd",
            "op": "DelVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "value": "$accu1190",
            "op": "LoadVar"
          },
        {
            "value": "$accu1190",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "tl",
            "op": "LoadVar"
          },
        {
            "value": "tl",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1418"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "|",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(f, d, z)",
            "name": "reduce",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "z",
            "op": "LoadVar"
          },
        {
            "value": "z",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "Cut"
          },
        {
            "pc": "1528",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "1514",
            "op": "Jump"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(cond, s)",
            "name": "filter",
            "op": "Frame"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu1243",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "Cut"
          },
        {
            "pc": "1553",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "cond",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "pc": "1538",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu1243",
            "op": "LoadVar"
          },
        {
            "value": "$accu1243",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "$accu1243",
            "op": "StoreVar"
          },
        {
            "pc": "1538",
            "op": "Jump"
          },
        {
            "value": "cond",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "$accu1243",
            "op": "LoadVar"
          },
        {
            "value": "$accu1243",
            "op": "DelVar"
          },
        {
            "value": "t",
            "op": "StoreVar"
          },
        {
            "result": "t",
            "op": "Return"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(f, s)",
            "name": "map",
            "op": "Frame"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu1264",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "Cut"
          },
        {
            "pc": "1579",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu1264",
            "op": "LoadVar"
          },
        {
            "value": "$accu1264",
            "op": "DelVar"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "$accu1264",
            "op": "StoreVar"
          },
        {
            "pc": "1567",
            "op": "Jump"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "value": "$accu1264",
            "op": "LoadVar"
          },
        {
            "value": "$accu1264",
            "op": "DelVar"
          },
        {
            "value": "t",
            "op": "StoreVar"
          },
        {
            "result": "t",
            "op": "Return"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "Game",
            "op": "Frame"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "931"
              },
            "op": "Apply"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "active_game"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "989"
              },
            "op": "Apply"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "players"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "989"
              },
            "op": "Apply"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "complete_game"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "989"
              },
            "op": "Apply"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "game_headcount"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "exited"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": "game",
            "op": "StoreVar"
          },
        {
            "result": "game",
            "op": "Return"
          },
        {
            "value": "game",
            "op": "DelVar"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "g",
            "name": "game_umpire",
            "op": "Frame"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "954"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "pc": "1809",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 2
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "<",
            "op": "Nary"
          },
        {
            "pc": "1656",
            "cond": {
                "type": "bool",
                "value": "True"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "1656",
            "cond": {
                "type": "bool",
                "value": "True"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "1657",
            "op": "Jump"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "pc": "1670",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "active_game"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "998"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "pc": "1632",
            "op": "Jump"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 2
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "%",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "value": "pairedplayers",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "i",
            "op": "StoreVar"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": "pairedplayers",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "<",
            "op": "Nary"
          },
        {
            "pc": "1772",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1294"
              },
            "op": "Apply"
          },
        {
            "op": "Store"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1294"
              },
            "op": "Apply"
          },
        {
            "op": "Store"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1294"
              },
            "op": "Apply"
          },
        {
            "op": "Store"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1294"
              },
            "op": "Apply"
          },
        {
            "op": "Store"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 2
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "i",
            "op": "StoreVar"
          },
        {
            "pc": "1686",
            "op": "Jump"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "j",
            "op": "StoreVar"
          },
        {
            "value": "j",
            "op": "LoadVar"
          },
        {
            "value": "pairedplayers",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "<",
            "op": "Nary"
          },
        {
            "pc": "1791",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Del"
          },
        {
            "value": "j",
            "op": "LoadVar"
          },
        {
            "value": "j",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "j",
            "op": "StoreVar"
          },
        {
            "pc": "1775",
            "op": "Jump"
          },
        {
            "value": "j",
            "op": "DelVar"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "game_headcount"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "pairedplayers",
            "op": "LoadVar"
          },
        {
            "value": "pairedplayers",
            "op": "DelVar"
          },
        {
            "op": "Store"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "exited"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "players"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1097"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "pc": "1630",
            "op": "Jump"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": "g",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "973"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(g, id)",
            "name": "game_join",
            "op": "Frame"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "954"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "op": "Store"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "1851",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "1852",
            "op": "Jump"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "pc": "1858",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "active_game"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1067"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "1896",
            "cond": {
                "type": "bool",
                "value": "True"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "1896",
            "cond": {
                "type": "bool",
                "value": "True"
              },
            "op": "JumpCond"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "arity": 1,
            "value": "not",
            "op": "Nary"
          },
        {
            "pc": "1894",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "arity": 1,
            "value": "not",
            "op": "Nary"
          },
        {
            "pc": "1897",
            "op": "Jump"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "pc": "1897",
            "op": "Jump"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "pc": "1910",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "players"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "998"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "pc": "1858",
            "op": "Jump"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "teams",
            "op": "StoreVar"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "exited"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "exited"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "id",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "op": "Store"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "complete_game"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1097"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": "g",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "973"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "result": "teams",
            "op": "Return"
          },
        {
            "value": "teams",
            "op": "DelVar"
          },
        {
            "pc": "2078",
            "op": "Jump"
          },
        {
            "args": "(g, id)",
            "name": "game_leave",
            "op": "Frame"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "954"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "exited"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "game_headcount"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "1978",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "complete_game"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "998"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "pc": "1955",
            "op": "Jump"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "2013",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1306"
              },
            "op": "Apply"
          },
        {
            "op": "Store"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "id",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1306"
              },
            "op": "Apply"
          },
        {
            "op": "Store"
          },
        {
            "pc": "2047",
            "op": "Jump"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "2047",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1306"
              },
            "op": "Apply"
          },
        {
            "op": "Store"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "id",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1306"
              },
            "op": "Apply"
          },
        {
            "op": "Store"
          },
        {
            "value": "id",
            "op": "DelVar"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "2064",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "2065",
            "op": "Jump"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "pc": "2071",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "active_game"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1067"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": "g",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "973"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "1587"
              },
            "op": "Apply"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "thegame"
                  }
              ],
            "op": "Store"
          },
        {
            "pc": "2132",
            "op": "Jump"
          },
        {
            "args": "id",
            "name": "player",
            "op": "Frame"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "thegame"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1817"
              },
            "op": "Apply"
          },
        {
            "value": "(team1, team2)",
            "op": "StoreVar"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "team1",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": "team2",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "team1",
            "op": "LoadVar"
          },
        {
            "value": "team2",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "|",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "team1",
            "op": "LoadVar"
          },
        {
            "value": "team1",
            "op": "DelVar"
          },
        {
            "value": "team2",
            "op": "LoadVar"
          },
        {
            "value": "team2",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "&",
            "op": "Nary"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "thegame"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "id",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1949"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": {
                "type": "address",
                "args": [

                  ],
                "func": {
                    "type": "pc",
                    "value": "1624"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "thegame"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "eternal": "True",
            "op": "Spawn"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 4
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "..",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "id",
            "op": "Cut"
          },
        {
            "pc": "2150",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [

                  ],
                "func": {
                    "type": "pc",
                    "value": "2082"
                  }
              },
            "op": "Push"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "id",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "eternal": "False",
            "op": "Spawn"
          },
        {
            "pc": "2141",
            "op": "Jump"
          },
        {
            "value": "id",
            "op": "DelVar"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": "result",
            "op": "DelVar"
          }
      ]
  },
  "macrosteps": [
    {
      "id": "1",
      "tid": "0",
      "shared": { },
      "name": "__init__()",
      "context": {
        "tid": "0",
        "hvalue": "25473ac0fca",
        "fp": "1",
        "id": "0",
        "name": "__init__()",
        "entry": "0",
        "pc": "0",
        "sp": "1",
        "stack": [{ "type": "list", "value": [] }],
        "trace": [
{"pc": "0","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
        ],
        "atomic": "1",
        "next": { "type": "Frame", "name": "__init__", "args": "()", "value": { "type": "list", "value": [] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Frame __init__()",
          "explain": "pop argument () and run method \"__init__\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "__init__" } ] },
          "npc": "1",
          "fp": "1",
          "trace": [
{"pc": "1","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "0"
        },

        {
          "code": "Jump 54",
          "explain": "jump over method definition: set program counter to 54",
          "explain2": { "text": "jump over method definition: set program counter to 54", "args": [] },
          "npc": "54",
          "push": [ ],
          "pc": "1"
        },

        {
          "code": "Push PC(57)",
          "explain": "push constant PC(57)",
          "explain2": { "text": "push constant PC(57)", "args": [] },
          "npc": "55",
          "push": [ { "type": "pc", "value": "57" } ],
          "pc": "54"
        },

        {
          "code": "Builtin(list$tail)",
          "explain": "pop pc () and bind to built-in method list$tail",
          "explain2": { "text": "pop pc () and bind to built-in method list$tail", "args": [ { "type": "pc", "value": "57" } ] },
          "npc": "56",
          "pop": "1",
          "push": [ ],
          "pc": "55"
        },

        {
          "code": "Jump 602",
          "explain": "jump over method definition: set program counter to 602",
          "explain2": { "text": "jump over method definition: set program counter to 602", "args": [] },
          "npc": "602",
          "push": [ ],
          "pc": "56"
        },

        {
          "code": "Push PC(605)",
          "explain": "push constant PC(605)",
          "explain2": { "text": "push constant PC(605)", "args": [] },
          "npc": "603",
          "push": [ { "type": "pc", "value": "605" } ],
          "pc": "602"
        },

        {
          "code": "Builtin(bag$multiplicity)",
          "explain": "pop pc () and bind to built-in method bag$multiplicity",
          "explain2": { "text": "pop pc () and bind to built-in method bag$multiplicity", "args": [ { "type": "pc", "value": "605" } ] },
          "npc": "604",
          "pop": "1",
          "push": [ ],
          "pc": "603"
        },

        {
          "code": "Jump 624",
          "explain": "jump over method definition: set program counter to 624",
          "explain2": { "text": "jump over method definition: set program counter to 624", "args": [] },
          "npc": "624",
          "push": [ ],
          "pc": "604"
        },

        {
          "code": "Push PC(627)",
          "explain": "push constant PC(627)",
          "explain2": { "text": "push constant PC(627)", "args": [] },
          "npc": "625",
          "push": [ { "type": "pc", "value": "627" } ],
          "pc": "624"
        },

        {
          "code": "Builtin(bag$size)",
          "explain": "pop pc () and bind to built-in method bag$size",
          "explain2": { "text": "pop pc () and bind to built-in method bag$size", "args": [ { "type": "pc", "value": "627" } ] },
          "npc": "626",
          "pop": "1",
          "push": [ ],
          "pc": "625"
        },

        {
          "code": "Jump 646",
          "explain": "jump over method definition: set program counter to 646",
          "explain2": { "text": "jump over method definition: set program counter to 646", "args": [] },
          "npc": "646",
          "push": [ ],
          "pc": "626"
        },

        {
          "code": "Push PC(649)",
          "explain": "push constant PC(649)",
          "explain2": { "text": "push constant PC(649)", "args": [] },
          "npc": "647",
          "push": [ { "type": "pc", "value": "649" } ],
          "pc": "646"
        },

        {
          "code": "Builtin(bag$bmin)",
          "explain": "pop pc () and bind to built-in method bag$bmin",
          "explain2": { "text": "pop pc () and bind to built-in method bag$bmin", "args": [ { "type": "pc", "value": "649" } ] },
          "npc": "648",
          "pop": "1",
          "push": [ ],
          "pc": "647"
        },

        {
          "code": "Jump 665",
          "explain": "jump over method definition: set program counter to 665",
          "explain2": { "text": "jump over method definition: set program counter to 665", "args": [] },
          "npc": "665",
          "push": [ ],
          "pc": "648"
        },

        {
          "code": "Push PC(668)",
          "explain": "push constant PC(668)",
          "explain2": { "text": "push constant PC(668)", "args": [] },
          "npc": "666",
          "push": [ { "type": "pc", "value": "668" } ],
          "pc": "665"
        },

        {
          "code": "Builtin(bag$bmax)",
          "explain": "pop pc () and bind to built-in method bag$bmax",
          "explain2": { "text": "pop pc () and bind to built-in method bag$bmax", "args": [ { "type": "pc", "value": "668" } ] },
          "npc": "667",
          "pop": "1",
          "push": [ ],
          "pc": "666"
        },

        {
          "code": "Jump 693",
          "explain": "jump over method definition: set program counter to 693",
          "explain2": { "text": "jump over method definition: set program counter to 693", "args": [] },
          "npc": "693",
          "push": [ ],
          "pc": "667"
        },

        {
          "code": "Push PC(696)",
          "explain": "push constant PC(696)",
          "explain2": { "text": "push constant PC(696)", "args": [] },
          "npc": "694",
          "push": [ { "type": "pc", "value": "696" } ],
          "pc": "693"
        },

        {
          "code": "Builtin(bag$add)",
          "explain": "pop pc () and bind to built-in method bag$add",
          "explain2": { "text": "pop pc () and bind to built-in method bag$add", "args": [ { "type": "pc", "value": "696" } ] },
          "npc": "695",
          "pop": "1",
          "push": [ ],
          "pc": "694"
        },

        {
          "code": "Jump 722",
          "explain": "jump over method definition: set program counter to 722",
          "explain2": { "text": "jump over method definition: set program counter to 722", "args": [] },
          "npc": "722",
          "push": [ ],
          "pc": "695"
        },

        {
          "code": "Push PC(725)",
          "explain": "push constant PC(725)",
          "explain2": { "text": "push constant PC(725)", "args": [] },
          "npc": "723",
          "push": [ { "type": "pc", "value": "725" } ],
          "pc": "722"
        },

        {
          "code": "Builtin(bag$remove)",
          "explain": "pop pc () and bind to built-in method bag$remove",
          "explain2": { "text": "pop pc () and bind to built-in method bag$remove", "args": [ { "type": "pc", "value": "725" } ] },
          "npc": "724",
          "pop": "1",
          "push": [ ],
          "pc": "723"
        },

        {
          "code": "Jump 2078",
          "explain": "jump over method definition: set program counter to 2078",
          "explain2": { "text": "jump over method definition: set program counter to 2078", "args": [] },
          "npc": "2078",
          "push": [ ],
          "pc": "724"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "2079",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "2078"
        },

        {
          "code": "Apply PC(1587)",
          "explain": "pop an argument ([]) and call method (1587: \"Game\")",
          "explain2": { "text": "pop an argument (#+) and call method (1587: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "Game" } ] },
          "npc": "1587",
          "fp": "4",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1587","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3}
          ],
          "push": [ { "type": "int", "value": "33266" }, { "type": "list", "value": [] } ],
          "pc": "2079"
        },

        {
          "code": "Frame Game()",
          "explain": "pop argument () and run method \"Game\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "Game" } ] },
          "npc": "1588",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1587"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "1589",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1588"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1590",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1589"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1591",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1590"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values ([], \"waiting\", {:}); add key/value pair to dictionary; push result ({ \"waiting\": [] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "waiting" }, { "type": "dict", "value": [] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1592",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1591"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1593",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1592"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "1594",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1593"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values ({}, \"team1\", { \"waiting\": [] }); add key/value pair to dictionary; push result ({ \"team1\": {}, \"waiting\": [] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "atom", "value": "team1" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1595",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1594"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1596",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1595"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "1597",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1596"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values ({}, \"team2\", { \"team1\": {}, \"waiting\": [] }); add key/value pair to dictionary; push result ({ \"team1\": {}, \"team2\": {}, \"waiting\": [] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "atom", "value": "team2" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1598",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1597"
        },

        {
          "code": "Push \"lock\"",
          "explain": "push constant \"lock\"",
          "explain2": { "text": "push constant \"lock\"", "args": [] },
          "npc": "1599",
          "push": [ { "type": "atom", "value": "lock" } ],
          "pc": "1598"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1600",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1599"
        },

        {
          "code": "Apply PC(931)",
          "explain": "pop an argument ([]) and call method (931: \"Lock\")",
          "explain2": { "text": "pop an argument (#+) and call method (931: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "Lock" } ] },
          "npc": "931",
          "fp": "9",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1601","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "931","xpc": "931","method_name": { "type": "atom", "value": "Lock" },
"method_arg": { "type": "list", "value": [] },
"method": "Lock()","calltype": "normal","vars":{ },"sp": 8}
          ],
          "push": [ { "type": "int", "value": "25602" }, { "type": "list", "value": [] } ],
          "pc": "1600"
        },

        {
          "code": "Frame Lock()",
          "explain": "pop argument () and run method \"Lock\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "Lock" } ] },
          "npc": "932",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "931"
        },

        {
          "code": "DelVar result",
          "explain": "delete method variable result",
          "explain2": { "text": "delete method variable result", "args": [] },
          "npc": "933",
          "push": [ ],
          "pc": "932"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "934",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "933"
        },

        {
          "code": "Apply PC(912)",
          "explain": "pop an argument (False) and call method (912: \"BinSema\")",
          "explain2": { "text": "pop an argument (#+) and call method (912: #+)", "args": [ { "type": "bool", "value": "False" }, { "type": "atom", "value": "BinSema" } ] },
          "npc": "912",
          "fp": "12",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1601","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "935","xpc": "931","method_name": { "type": "atom", "value": "Lock" },
"method_arg": { "type": "list", "value": [] },
"method": "Lock()","calltype": "normal","vars":{ },"sp": 8},{"pc": "912","xpc": "912","method_name": { "type": "atom", "value": "BinSema" },
"method_arg": { "type": "bool", "value": "False" },
"method": "BinSema(False)","calltype": "normal","vars":{ },"sp": 11}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "14946" }, { "type": "bool", "value": "False" } ],
          "pc": "934"
        },

        {
          "code": "Frame BinSema(initial)",
          "explain": "pop argument (False), assign to initial, and run method \"BinSema\"",
          "explain2": { "text": "pop argument (#+), assign to initial, and run method #+", "args": [ { "type": "bool", "value": "False" }, { "type": "atom", "value": "BinSema" } ] },
          "npc": "913",
          "local": { "initial": { "type": "bool", "value": "False" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "912"
        },

        {
          "code": "AtomicInc(lazy)",
          "explain": "increment atomic counter from 1 to 2: remains atomic",
          "explain2": { "text": "increment atomic counter from 1 to 2: remains atomic", "args": [ ] },
          "npc": "914",
          "atomic": "2",
          "push": [ ],
          "pc": "913"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "915",
          "readonly": "1",
          "push": [ ],
          "pc": "914"
        },

        {
          "code": "LoadVar initial",
          "explain": "push value (False) of variable \"initial\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "bool", "value": "False" }, { "type": "atom", "value": "initial" } ] },
          "npc": "916",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "915"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "917",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "916"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "918",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "917"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (False, {}); insert first value into the second; push result ({ False })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" } ] } ] },
          "npc": "919",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" } ] } ],
          "pc": "918"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "920",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "919"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (True, { False }); insert first value into the second; push result ({ False, True })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "True" }, { "type": "set", "value": [{ "type": "bool", "value": "False" } ] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ] },
          "npc": "921",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ],
          "pc": "920"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ False, True }, False); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }, { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "922",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "921"
        },

        {
          "code": "Assert",
          "explain": "pop a value (True); do not raise exception",
          "explain2": { "text": "pop a value (True); do not raise exception", "args": [ ] },
          "npc": "923",
          "pop": "1",
          "push": [ ],
          "pc": "922"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "924",
          "readonly": "0",
          "push": [ ],
          "pc": "923"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 2 to 1: remains atomic",
          "explain2": { "text": "decrement atomic counter from 2 to 1: remains atomic", "args": [ ] },
          "npc": "925",
          "atomic": "1",
          "push": [ ],
          "pc": "924"
        },

        {
          "code": "LoadVar initial",
          "explain": "push value (False) of variable \"initial\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "bool", "value": "False" }, { "type": "atom", "value": "initial" } ] },
          "npc": "926",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "925"
        },

        {
          "code": "DelVar initial",
          "explain": "delete method variable initial",
          "explain2": { "text": "delete method variable initial", "args": [] },
          "npc": "927",
          "local": { },
          "push": [ ],
          "pc": "926"
        },

        {
          "code": "StoreVar sema",
          "explain": "pop value (False) and store locally in variable \\\"sema\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"sema\"", "args": [ { "type": "bool", "value": "False" } ] },
          "npc": "928",
          "local": { "sema": { "type": "bool", "value": "False" } },
          "pop": "1",
          "push": [ ],
          "pc": "927"
        },

        {
          "code": "ReturnOp(sema)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "bool", "value": "False" } ] },
          "npc": "935",
          "fp": "9",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1601","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "935","xpc": "931","method_name": { "type": "atom", "value": "Lock" },
"method_arg": { "type": "list", "value": [] },
"method": "Lock()","calltype": "normal","vars":{ },"sp": 8}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "928"
        },

        {
          "code": "StoreVar result",
          "explain": "pop value (False) and store locally in variable \\\"result\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"result\"", "args": [ { "type": "bool", "value": "False" } ] },
          "npc": "936",
          "local": { "result": { "type": "bool", "value": "False" } },
          "pop": "1",
          "push": [ ],
          "pc": "935"
        },

        {
          "code": "ReturnOp(result)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "bool", "value": "False" } ] },
          "npc": "1601",
          "fp": "4",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1601","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "936"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values (False, \"lock\", { \"team1\": {}, \"team2\": {}, \"waiting\": [] }); add key/value pair to dictionary; push result ({ \"lock\": False, \"team1\": {}, \"team2\": {}, \"waiting\": [] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "atom", "value": "lock" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1602",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1601"
        },

        {
          "code": "Push \"active_game\"",
          "explain": "push constant \"active_game\"",
          "explain2": { "text": "push constant \"active_game\"", "args": [] },
          "npc": "1603",
          "push": [ { "type": "atom", "value": "active_game" } ],
          "pc": "1602"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1604",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1603"
        },

        {
          "code": "Apply PC(989)",
          "explain": "pop an argument ([]) and call method (989: \"Condition\")",
          "explain2": { "text": "pop an argument (#+) and call method (989: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "Condition" } ] },
          "npc": "989",
          "fp": "9",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1605","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "989","xpc": "989","method_name": { "type": "atom", "value": "Condition" },
"method_arg": { "type": "list", "value": [] },
"method": "Condition()","calltype": "normal","vars":{ },"sp": 8}
          ],
          "push": [ { "type": "int", "value": "25666" }, { "type": "list", "value": [] } ],
          "pc": "1604"
        },

        {
          "code": "Frame Condition()",
          "explain": "pop argument () and run method \"Condition\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "Condition" } ] },
          "npc": "990",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "989"
        },

        {
          "code": "DelVar result",
          "explain": "delete method variable result",
          "explain2": { "text": "delete method variable result", "args": [] },
          "npc": "991",
          "push": [ ],
          "pc": "990"
        },

        {
          "code": "Push PC(541)",
          "explain": "push program counter constant 541 ()",
          "explain2": { "text": "push program counter constant 541 ()", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "992",
          "push": [ { "type": "pc", "value": "541" } ],
          "pc": "991"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "993",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "992"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([], PC(541)); push result (?PC(541)[[]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "pc", "value": "541" }, { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ] },
          "npc": "994",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ],
          "pc": "993"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([]) and call method (541: \"empty\")",
          "explain2": { "text": "pop an argument (#+) and call method (541: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "empty" } ] },
          "npc": "541",
          "fp": "12",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1605","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "995","xpc": "989","method_name": { "type": "atom", "value": "Condition" },
"method_arg": { "type": "list", "value": [] },
"method": "Condition()","calltype": "normal","vars":{ },"sp": 8},{"pc": "541","xpc": "541","method_name": { "type": "atom", "value": "empty" },
"method_arg": { "type": "list", "value": [] },
"method": "empty()","calltype": "normal","vars":{ },"sp": 11}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "15906" }, { "type": "list", "value": [] } ],
          "pc": "994"
        },

        {
          "code": "Frame empty()",
          "explain": "pop argument () and run method \"empty\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "542",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "541"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "543",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "542"
        },

        {
          "code": "StoreVar bg",
          "explain": "pop value ({:}) and store locally in variable \\\"bg\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"bg\"", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "544",
          "local": { "bg": { "type": "dict", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "543"
        },

        {
          "code": "ReturnOp(bg)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "995",
          "fp": "9",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1605","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "995","xpc": "989","method_name": { "type": "atom", "value": "Condition" },
"method_arg": { "type": "list", "value": [] },
"method": "Condition()","calltype": "normal","vars":{ },"sp": 8}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "544"
        },

        {
          "code": "StoreVar result",
          "explain": "pop value ({:}) and store locally in variable \\\"result\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"result\"", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "996",
          "local": { "result": { "type": "dict", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "995"
        },

        {
          "code": "ReturnOp(result)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "1605",
          "fp": "4",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1605","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "996"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values ({:}, \"active_game\", { \"lock\": False, \"team1\": {}, \"team2\": {}, \"waiting\": [] }); add key/value pair to dictionary; push result ({ \"active_game\": {:}, \"lock\": False, \"team1\": {}, \"team2\": {}, \"waiting\": [] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "dict", "value": [] }, { "type": "atom", "value": "active_game" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1606",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1605"
        },

        {
          "code": "Push \"players\"",
          "explain": "push constant \"players\"",
          "explain2": { "text": "push constant \"players\"", "args": [] },
          "npc": "1607",
          "push": [ { "type": "atom", "value": "players" } ],
          "pc": "1606"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1608",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1607"
        },

        {
          "code": "Apply PC(989)",
          "explain": "pop an argument ([]) and call method (989: \"Condition\")",
          "explain2": { "text": "pop an argument (#+) and call method (989: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "Condition" } ] },
          "npc": "989",
          "fp": "9",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1609","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "989","xpc": "989","method_name": { "type": "atom", "value": "Condition" },
"method_arg": { "type": "list", "value": [] },
"method": "Condition()","calltype": "normal","vars":{ },"sp": 8}
          ],
          "push": [ { "type": "int", "value": "25730" }, { "type": "list", "value": [] } ],
          "pc": "1608"
        },

        {
          "code": "Frame Condition()",
          "explain": "pop argument () and run method \"Condition\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "Condition" } ] },
          "npc": "990",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "989"
        },

        {
          "code": "DelVar result",
          "explain": "delete method variable result",
          "explain2": { "text": "delete method variable result", "args": [] },
          "npc": "991",
          "push": [ ],
          "pc": "990"
        },

        {
          "code": "Push PC(541)",
          "explain": "push program counter constant 541 ()",
          "explain2": { "text": "push program counter constant 541 ()", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "992",
          "push": [ { "type": "pc", "value": "541" } ],
          "pc": "991"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "993",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "992"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([], PC(541)); push result (?PC(541)[[]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "pc", "value": "541" }, { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ] },
          "npc": "994",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ],
          "pc": "993"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([]) and call method (541: \"empty\")",
          "explain2": { "text": "pop an argument (#+) and call method (541: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "empty" } ] },
          "npc": "541",
          "fp": "12",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1609","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "995","xpc": "989","method_name": { "type": "atom", "value": "Condition" },
"method_arg": { "type": "list", "value": [] },
"method": "Condition()","calltype": "normal","vars":{ },"sp": 8},{"pc": "541","xpc": "541","method_name": { "type": "atom", "value": "empty" },
"method_arg": { "type": "list", "value": [] },
"method": "empty()","calltype": "normal","vars":{ },"sp": 11}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "15906" }, { "type": "list", "value": [] } ],
          "pc": "994"
        },

        {
          "code": "Frame empty()",
          "explain": "pop argument () and run method \"empty\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "542",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "541"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "543",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "542"
        },

        {
          "code": "StoreVar bg",
          "explain": "pop value ({:}) and store locally in variable \\\"bg\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"bg\"", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "544",
          "local": { "bg": { "type": "dict", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "543"
        },

        {
          "code": "ReturnOp(bg)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "995",
          "fp": "9",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1609","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "995","xpc": "989","method_name": { "type": "atom", "value": "Condition" },
"method_arg": { "type": "list", "value": [] },
"method": "Condition()","calltype": "normal","vars":{ },"sp": 8}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "544"
        },

        {
          "code": "StoreVar result",
          "explain": "pop value ({:}) and store locally in variable \\\"result\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"result\"", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "996",
          "local": { "result": { "type": "dict", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "995"
        },

        {
          "code": "ReturnOp(result)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "1609",
          "fp": "4",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1609","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "996"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values ({:}, \"players\", { \"active_game\": {:}, \"lock\": False, \"team1\": {}, \"team2\": {}, \"waiting\": [] }); add key/value pair to dictionary; push result ({ \"active_game\": {:}, \"lock\": False, \"players\": {:}, \"team1\": {}, \"team2\": {}, \"waiting\": [] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "dict", "value": [] }, { "type": "atom", "value": "players" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1610",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1609"
        },

        {
          "code": "Push \"complete_game\"",
          "explain": "push constant \"complete_game\"",
          "explain2": { "text": "push constant \"complete_game\"", "args": [] },
          "npc": "1611",
          "push": [ { "type": "atom", "value": "complete_game" } ],
          "pc": "1610"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1612",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1611"
        },

        {
          "code": "Apply PC(989)",
          "explain": "pop an argument ([]) and call method (989: \"Condition\")",
          "explain2": { "text": "pop an argument (#+) and call method (989: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "Condition" } ] },
          "npc": "989",
          "fp": "9",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1613","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "989","xpc": "989","method_name": { "type": "atom", "value": "Condition" },
"method_arg": { "type": "list", "value": [] },
"method": "Condition()","calltype": "normal","vars":{ },"sp": 8}
          ],
          "push": [ { "type": "int", "value": "25794" }, { "type": "list", "value": [] } ],
          "pc": "1612"
        },

        {
          "code": "Frame Condition()",
          "explain": "pop argument () and run method \"Condition\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "Condition" } ] },
          "npc": "990",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "989"
        },

        {
          "code": "DelVar result",
          "explain": "delete method variable result",
          "explain2": { "text": "delete method variable result", "args": [] },
          "npc": "991",
          "push": [ ],
          "pc": "990"
        },

        {
          "code": "Push PC(541)",
          "explain": "push program counter constant 541 ()",
          "explain2": { "text": "push program counter constant 541 ()", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "992",
          "push": [ { "type": "pc", "value": "541" } ],
          "pc": "991"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "993",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "992"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([], PC(541)); push result (?PC(541)[[]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "pc", "value": "541" }, { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ] },
          "npc": "994",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ],
          "pc": "993"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([]) and call method (541: \"empty\")",
          "explain2": { "text": "pop an argument (#+) and call method (541: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "empty" } ] },
          "npc": "541",
          "fp": "12",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1613","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "995","xpc": "989","method_name": { "type": "atom", "value": "Condition" },
"method_arg": { "type": "list", "value": [] },
"method": "Condition()","calltype": "normal","vars":{ },"sp": 8},{"pc": "541","xpc": "541","method_name": { "type": "atom", "value": "empty" },
"method_arg": { "type": "list", "value": [] },
"method": "empty()","calltype": "normal","vars":{ },"sp": 11}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "15906" }, { "type": "list", "value": [] } ],
          "pc": "994"
        },

        {
          "code": "Frame empty()",
          "explain": "pop argument () and run method \"empty\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "542",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "541"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "543",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "542"
        },

        {
          "code": "StoreVar bg",
          "explain": "pop value ({:}) and store locally in variable \\\"bg\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"bg\"", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "544",
          "local": { "bg": { "type": "dict", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "543"
        },

        {
          "code": "ReturnOp(bg)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "995",
          "fp": "9",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1613","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "995","xpc": "989","method_name": { "type": "atom", "value": "Condition" },
"method_arg": { "type": "list", "value": [] },
"method": "Condition()","calltype": "normal","vars":{ },"sp": 8}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "544"
        },

        {
          "code": "StoreVar result",
          "explain": "pop value ({:}) and store locally in variable \\\"result\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"result\"", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "996",
          "local": { "result": { "type": "dict", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "995"
        },

        {
          "code": "ReturnOp(result)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "1613",
          "fp": "4",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1613","xpc": "1587","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "996"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values ({:}, \"complete_game\", { \"active_game\": {:}, \"lock\": False, \"players\": {:}, \"team1\": {}, \"team2\": {}, \"waiting\": [] }); add key/value pair to dictionary; push result ({ \"active_game\": {:}, \"complete_game\": {:}, \"lock\": False, \"players\": {:}, \"team1\": {}, \"team2\": {}, \"waiting\": [] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "dict", "value": [] }, { "type": "atom", "value": "complete_game" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1614",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1613"
        },

        {
          "code": "Push \"game_headcount\"",
          "explain": "push constant \"game_headcount\"",
          "explain2": { "text": "push constant \"game_headcount\"", "args": [] },
          "npc": "1615",
          "push": [ { "type": "atom", "value": "game_headcount" } ],
          "pc": "1614"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1616",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1615"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values (0, \"game_headcount\", { \"active_game\": {:}, \"complete_game\": {:}, \"lock\": False, \"players\": {:}, \"team1\": {}, \"team2\": {}, \"waiting\": [] }); add key/value pair to dictionary; push result ({ \"active_game\": {:}, \"complete_game\": {:}, \"game_headcount\": 0, \"lock\": False, \"players\": {:}, \"team1\": {}, \"team2\": {}, \"waiting\": [] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "game_headcount" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1617",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1616"
        },

        {
          "code": "Push \"exited\"",
          "explain": "push constant \"exited\"",
          "explain2": { "text": "push constant \"exited\"", "args": [] },
          "npc": "1618",
          "push": [ { "type": "atom", "value": "exited" } ],
          "pc": "1617"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1619",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1618"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values ([], \"exited\", { \"active_game\": {:}, \"complete_game\": {:}, \"game_headcount\": 0, \"lock\": False, \"players\": {:}, \"team1\": {}, \"team2\": {}, \"waiting\": [] }); add key/value pair to dictionary; push result ({ \"active_game\": {:}, \"complete_game\": {:}, \"exited\": [], \"game_headcount\": 0, \"lock\": False, \"players\": {:}, \"team1\": {}, \"team2\": {}, \"waiting\": [] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "exited" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1620",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1619"
        },

        {
          "code": "StoreVar game",
          "explain": "pop value ({ \"active_game\": {:}, \"complete_game\": {:}, \"exited\": [], \"game_headcount\": 0, \"lock\": False, \"players\": {:}, \"team1\": {}, \"team2\": {}, \"waiting\": [] }) and store locally in variable \\\"game\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"game\"", "args": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1621",
          "local": { "game": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1620"
        },

        {
          "code": "ReturnOp(game)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "2080",
          "fp": "1",
          "trace": [
{"pc": "2080","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1621"
        },

        {
          "code": "Store thegame",
          "explain": "pop value ({ \"active_game\": {:}, \"complete_game\": {:}, \"exited\": [], \"game_headcount\": 0, \"lock\": False, \"players\": {:}, \"team1\": {}, \"team2\": {}, \"waiting\": [] }) and store into variable thegame",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
          "npc": "2081",
          "pop": "1",
          "push": [ ],
          "pc": "2080"
        },

        {
          "code": "Jump 2132",
          "explain": "jump over method definition: set program counter to 2132",
          "explain2": { "text": "jump over method definition: set program counter to 2132", "args": [] },
          "npc": "2132",
          "push": [ ],
          "pc": "2081"
        },

        {
          "code": "Push ?PC(1624)",
          "explain": "push constant ?PC(1624)",
          "explain2": { "text": "push constant ?PC(1624)", "args": [] },
          "npc": "2133",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "1624" }, "args": [ ] } ],
          "pc": "2132"
        },

        {
          "code": "Push ?thegame",
          "explain": "push constant ?thegame",
          "explain2": { "text": "push constant ?thegame", "args": [] },
          "npc": "2134",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "2133"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (?thegame, ?PC(1624)); push result (?PC(1624)[?thegame])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "1624" }, "args": [ ] }, { "type": "address", "func": { "type": "pc", "value": "1624" }, "args": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] } ] },
          "npc": "2135",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "1624" }, "args": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] } ],
          "pc": "2134"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "2136",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "2135"
        },

        {
          "code": "Spawn",
          "explain": "pop local state ({:}), arg (?thegame), and pc (1624: \"game_umpire\"), and spawn thread",
          "explain2": { "text": "pop local state (#+), arg (#+), and pc (1624: #+), and spawn thread", "args": [ { "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "game_umpire" } ] },
          "npc": "2137",
          "pop": "2",
          "push": [ ],
          "pc": "2136"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "2138",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "2137"
        },

        {
          "code": "Push 4",
          "explain": "push constant 4",
          "explain2": { "text": "push constant 4", "args": [] },
          "npc": "2139",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "2138"
        },

        {
          "code": "2-ary ..",
          "explain": "pop 2 values (4, 1); range of integers; push result ({ 1, 2, 3, 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); range of integers; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "int", "value": "1" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "2140",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "2139"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "2141",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "2140"
        },

        {
          "code": "Cut(id)",
          "explain": "pop index (0) and value ({ 1, 2, 3, 4 }); assign value (1) to id; push new index (1) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to id; push new index (1) and True", "args": [ { "type": "int", "value": "0" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "2142",
          "local": { "id": { "type": "int", "value": "1" } },
          "pop": "1",
          "push": [ { "type": "int", "value": "1" }, { "type": "bool", "value": "True" } ],
          "pc": "2141"
        },

        {
          "code": "JumpCond False 2150",
          "explain": "pop value (True), compare to False, and jump to 2150 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 2150 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "2143",
          "pop": "1",
          "push": [ ],
          "pc": "2142"
        },

        {
          "code": "Push ?PC(2082)",
          "explain": "push constant ?PC(2082)",
          "explain2": { "text": "push constant ?PC(2082)", "args": [] },
          "npc": "2144",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "2082" }, "args": [ ] } ],
          "pc": "2143"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (1) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "id" } ] },
          "npc": "2145",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "2144"
        },

        {
          "code": "DelVar id",
          "explain": "delete method variable id",
          "explain2": { "text": "delete method variable id", "args": [] },
          "npc": "2146",
          "local": { },
          "push": [ ],
          "pc": "2145"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?PC(2082)); push result (?PC(2082)[1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "2082" }, "args": [ ] }, { "type": "address", "func": { "type": "pc", "value": "2082" }, "args": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "2147",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "2082" }, "args": [{ "type": "int", "value": "1" } ] } ],
          "pc": "2146"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "2148",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "2147"
        },

        {
          "code": "Spawn",
          "explain": "pop local state ({:}), arg (1), and pc (2082: \"player\"), and spawn thread",
          "explain2": { "text": "pop local state (#+), arg (#+), and pc (2082: #+), and spawn thread", "args": [ { "type": "dict", "value": [] }, { "type": "int", "value": "1" }, { "type": "atom", "value": "player" } ] },
          "npc": "2149",
          "pop": "2",
          "push": [ ],
          "pc": "2148"
        },

        {
          "code": "Jump 2141",
          "explain": "set program counter to 2141",
          "explain2": { "text": "set program counter to 2141", "args": [] },
          "npc": "2141",
          "push": [ ],
          "pc": "2149"
        },

        {
          "code": "Cut(id)",
          "explain": "pop index (1) and value ({ 1, 2, 3, 4 }); assign value (2) to id; push new index (2) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to id; push new index (2) and True", "args": [ { "type": "int", "value": "1" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "2142",
          "local": { "id": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ { "type": "int", "value": "2" }, { "type": "bool", "value": "True" } ],
          "pc": "2141"
        },

        {
          "code": "JumpCond False 2150",
          "explain": "pop value (True), compare to False, and jump to 2150 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 2150 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "2143",
          "pop": "1",
          "push": [ ],
          "pc": "2142"
        },

        {
          "code": "Push ?PC(2082)",
          "explain": "push constant ?PC(2082)",
          "explain2": { "text": "push constant ?PC(2082)", "args": [] },
          "npc": "2144",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "2082" }, "args": [ ] } ],
          "pc": "2143"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (2) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "id" } ] },
          "npc": "2145",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "2144"
        },

        {
          "code": "DelVar id",
          "explain": "delete method variable id",
          "explain2": { "text": "delete method variable id", "args": [] },
          "npc": "2146",
          "local": { },
          "push": [ ],
          "pc": "2145"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (2, ?PC(2082)); push result (?PC(2082)[2])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "2082" }, "args": [ ] }, { "type": "address", "func": { "type": "pc", "value": "2082" }, "args": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "2147",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "2082" }, "args": [{ "type": "int", "value": "2" } ] } ],
          "pc": "2146"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "2148",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "2147"
        },

        {
          "code": "Spawn",
          "explain": "pop local state ({:}), arg (2), and pc (2082: \"player\"), and spawn thread",
          "explain2": { "text": "pop local state (#+), arg (#+), and pc (2082: #+), and spawn thread", "args": [ { "type": "dict", "value": [] }, { "type": "int", "value": "2" }, { "type": "atom", "value": "player" } ] },
          "npc": "2149",
          "pop": "2",
          "push": [ ],
          "pc": "2148"
        },

        {
          "code": "Jump 2141",
          "explain": "set program counter to 2141",
          "explain2": { "text": "set program counter to 2141", "args": [] },
          "npc": "2141",
          "push": [ ],
          "pc": "2149"
        },

        {
          "code": "Cut(id)",
          "explain": "pop index (2) and value ({ 1, 2, 3, 4 }); assign value (3) to id; push new index (3) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to id; push new index (3) and True", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "2142",
          "local": { "id": { "type": "int", "value": "3" } },
          "pop": "1",
          "push": [ { "type": "int", "value": "3" }, { "type": "bool", "value": "True" } ],
          "pc": "2141"
        },

        {
          "code": "JumpCond False 2150",
          "explain": "pop value (True), compare to False, and jump to 2150 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 2150 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "2143",
          "pop": "1",
          "push": [ ],
          "pc": "2142"
        },

        {
          "code": "Push ?PC(2082)",
          "explain": "push constant ?PC(2082)",
          "explain2": { "text": "push constant ?PC(2082)", "args": [] },
          "npc": "2144",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "2082" }, "args": [ ] } ],
          "pc": "2143"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (3) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "id" } ] },
          "npc": "2145",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "2144"
        },

        {
          "code": "DelVar id",
          "explain": "delete method variable id",
          "explain2": { "text": "delete method variable id", "args": [] },
          "npc": "2146",
          "local": { },
          "push": [ ],
          "pc": "2145"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (3, ?PC(2082)); push result (?PC(2082)[3])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "address", "func": { "type": "pc", "value": "2082" }, "args": [ ] }, { "type": "address", "func": { "type": "pc", "value": "2082" }, "args": [{ "type": "int", "value": "3" } ] } ] },
          "npc": "2147",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "2082" }, "args": [{ "type": "int", "value": "3" } ] } ],
          "pc": "2146"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "2148",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "2147"
        },

        {
          "code": "Spawn",
          "explain": "pop local state ({:}), arg (3), and pc (2082: \"player\"), and spawn thread",
          "explain2": { "text": "pop local state (#+), arg (#+), and pc (2082: #+), and spawn thread", "args": [ { "type": "dict", "value": [] }, { "type": "int", "value": "3" }, { "type": "atom", "value": "player" } ] },
          "npc": "2149",
          "pop": "2",
          "push": [ ],
          "pc": "2148"
        },

        {
          "code": "Jump 2141",
          "explain": "set program counter to 2141",
          "explain2": { "text": "set program counter to 2141", "args": [] },
          "npc": "2141",
          "push": [ ],
          "pc": "2149"
        },

        {
          "code": "Cut(id)",
          "explain": "pop index (3) and value ({ 1, 2, 3, 4 }); assign value (4) to id; push new index (4) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to id; push new index (4) and True", "args": [ { "type": "int", "value": "3" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "2142",
          "local": { "id": { "type": "int", "value": "4" } },
          "pop": "1",
          "push": [ { "type": "int", "value": "4" }, { "type": "bool", "value": "True" } ],
          "pc": "2141"
        },

        {
          "code": "JumpCond False 2150",
          "explain": "pop value (True), compare to False, and jump to 2150 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 2150 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "2143",
          "pop": "1",
          "push": [ ],
          "pc": "2142"
        },

        {
          "code": "Push ?PC(2082)",
          "explain": "push constant ?PC(2082)",
          "explain2": { "text": "push constant ?PC(2082)", "args": [] },
          "npc": "2144",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "2082" }, "args": [ ] } ],
          "pc": "2143"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (4) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "id" } ] },
          "npc": "2145",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "2144"
        },

        {
          "code": "DelVar id",
          "explain": "delete method variable id",
          "explain2": { "text": "delete method variable id", "args": [] },
          "npc": "2146",
          "local": { },
          "push": [ ],
          "pc": "2145"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (4, ?PC(2082)); push result (?PC(2082)[4])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "address", "func": { "type": "pc", "value": "2082" }, "args": [ ] }, { "type": "address", "func": { "type": "pc", "value": "2082" }, "args": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "2147",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "2082" }, "args": [{ "type": "int", "value": "4" } ] } ],
          "pc": "2146"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "2148",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "2147"
        },

        {
          "code": "Spawn",
          "explain": "pop local state ({:}), arg (4), and pc (2082: \"player\"), and spawn thread",
          "explain2": { "text": "pop local state (#+), arg (#+), and pc (2082: #+), and spawn thread", "args": [ { "type": "dict", "value": [] }, { "type": "int", "value": "4" }, { "type": "atom", "value": "player" } ] },
          "npc": "2149",
          "pop": "2",
          "push": [ ],
          "pc": "2148"
        },

        {
          "code": "Jump 2141",
          "explain": "set program counter to 2141",
          "explain2": { "text": "set program counter to 2141", "args": [] },
          "npc": "2141",
          "push": [ ],
          "pc": "2149"
        },

        {
          "code": "Cut(id)",
          "explain": "pop index (4) and value ({ 1, 2, 3, 4 }); out of range -> push False",
          "explain2": { "text": "pop index (#+) and value (#+); out of range -> push False", "args": [ { "type": "int", "value": "4" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "2142",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "2141"
        },

        {
          "code": "JumpCond False 2150",
          "explain": "pop value (False), compare to False, and jump to 2150 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 2150 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "2150",
          "pop": "1",
          "push": [ ],
          "pc": "2142"
        },

        {
          "code": "DelVar id",
          "explain": "delete method variable id",
          "explain2": { "text": "delete method variable id", "args": [] },
          "npc": "2151",
          "push": [ ],
          "pc": "2150"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "2151",
          "mode": "terminated",
          "pop": "1",
          "push": [ { "type": "address" } ],
          "pc": "2151"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e61a": "1",
          "2540203e68a": "1",
          "2540203e6fa": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540203e61a",
          "fp": "1",
          "name": "player(2)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2540203e6fa",
          "fp": "1",
          "name": "player(4)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "4" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "4" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "5",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2540203e6fa",
        "fp": "1",
        "name": "player(4)",
        "entry": "2082",
        "pc": "2082",
        "sp": "1",
        "stack": [{ "type": "int", "value": "4" }],
        "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ },"sp": 0}
        ],
        "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "4" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Frame player(id)",
          "explain": "pop argument (4), assign to id, and run method \"player\"",
          "explain2": { "text": "pop argument (#+), assign to id, and run method #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "player" } ] },
          "npc": "2083",
          "fp": "1",
          "trace": [
{"pc": "2083","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0}
          ],
          "local": { "id": { "type": "int", "value": "4" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "2082"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "2084",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "2083"
        },

        {
          "code": "Push ?thegame",
          "explain": "push constant ?thegame",
          "explain2": { "text": "push constant ?thegame", "args": [] },
          "npc": "2085",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "2084"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?thegame, []); insert first value into the second; push result ([?thegame])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] } ] },
          "npc": "2086",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] } ],
          "pc": "2085"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (4) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "id" } ] },
          "npc": "2087",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "2086"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (4, [?thegame]); insert first value into the second; push result ([?thegame, 4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] } ] },
          "npc": "2088",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] } ],
          "pc": "2087"
        },

        {
          "code": "Apply PC(1817)",
          "explain": "pop an argument ([?thegame, 4]) and call method (1817: \"game_join\")",
          "explain2": { "text": "pop an argument (#+) and call method (1817: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "game_join" } ] },
          "npc": "1817",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1817","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] } ],
          "pc": "2088"
        },

        {
          "code": "Frame game_join(g, id)",
          "explain": "pop argument ([?thegame, 4]), assign to (g, id), and run method \"game_join\"",
          "explain2": { "text": "pop argument (#+), assign to (g, id), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "game_join" } ] },
          "npc": "1818",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] } ],
          "pc": "1817"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1819",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1818"
        },

        {
          "code": "Push \"lock\"",
          "explain": "push constant \"lock\"",
          "explain2": { "text": "push constant \"lock\"", "args": [] },
          "npc": "1820",
          "push": [ { "type": "atom", "value": "lock" } ],
          "pc": "1819"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"lock\", ?thegame); push result (?thegame[\"lock\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "lock" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "npc": "1821",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1820"
        },

        {
          "code": "Apply PC(954)",
          "explain": "pop an argument (?thegame[\"lock\"]) and call method (954: \"acquire\")",
          "explain2": { "text": "pop an argument (#+) and call method (954: #+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "acquire" } ] },
          "npc": "954",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1822","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "954","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 6}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "29138" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1821"
        },

        {
          "code": "Frame acquire(binsema)",
          "explain": "pop argument (?thegame[\"lock\"]), assign to binsema, and run method \"acquire\"",
          "explain2": { "text": "pop argument (#+), assign to binsema, and run method #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "acquire" } ] },
          "npc": "955",
          "local": { "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] } ],
          "pc": "954"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e61a": "1",
          "2540203e68a": "1",
          "2540203ea4a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540203e61a",
          "fp": "1",
          "name": "player(2)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2540203ea4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "955",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "29138" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1822","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "955","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "19",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2540203ea4a",
        "fp": "7",
        "name": "player(4)",
        "entry": "2082",
        "pc": "955",
        "sp": "7",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "29138" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1822","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "955","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "956",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1822","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "956","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "955"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "957",
          "readonly": "1",
          "push": [ ],
          "pc": "956"
        },

        {
          "code": "LoadVar binsema",
          "explain": "push value (?thegame[\"lock\"]) of variable \"binsema\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "binsema" } ] },
          "npc": "958",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "957"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"lock\"]) and push value (False)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "bool", "value": "False" } ] },
          "npc": "959",
          "pop": "1",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "958"
        },

        {
          "code": "1-ary not",
          "explain": "pop a value (False); logical not; push result (True)",
          "explain2": { "text": "pop a value (#+); logical not; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "960",
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "959"
        },

        {
          "code": "JumpCond False 962",
          "explain": "pop value (True), compare to False, and jump to 962 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 962 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "961",
          "pop": "1",
          "push": [ ],
          "pc": "960"
        },

        {
          "code": "Jump 965",
          "explain": "set program counter to 965",
          "explain2": { "text": "set program counter to 965", "args": [] },
          "npc": "965",
          "push": [ ],
          "pc": "961"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "966",
          "readonly": "0",
          "push": [ ],
          "pc": "965"
        },

        {
          "code": "LoadVar binsema",
          "explain": "push value (?thegame[\"lock\"]) of variable \"binsema\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "binsema" } ] },
          "npc": "967",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "966"
        },

        {
          "code": "DelVar binsema",
          "explain": "delete method variable binsema",
          "explain2": { "text": "delete method variable binsema", "args": [] },
          "npc": "968",
          "local": { },
          "push": [ ],
          "pc": "967"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "969",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "968"
        },

        {
          "code": "Store",
          "explain": "pop value (True) and address (?thegame[\"lock\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "True" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
          "npc": "970",
          "pop": "2",
          "push": [ ],
          "pc": "969"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "971",
          "atomic": "0",
          "push": [ ],
          "pc": "970"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "1822",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1822","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "971"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "1823",
          "pop": "1",
          "push": [ ],
          "pc": "1822"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1824",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1823"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1825",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1824"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1826",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1825"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1827",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1826"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1828",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1827"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1829",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1828"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e61a": "1",
          "2540203e68a": "1",
          "2540405a22a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540203e61a",
          "fp": "1",
          "name": "player(2)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2540405a22a",
          "fp": "4",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1829",
          "sp": "6",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1829","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "30",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2540405a22a",
        "fp": "4",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1829",
        "sp": "6",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1829","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"waiting\"]) and push value ([])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [] } ] },
          "npc": "1830",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1830","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1829"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1831",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1830"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (4) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "id" } ] },
          "npc": "1832",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "1831"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (4, []); insert first value into the second; push result ([4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1833",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1832"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values ([4], []); concatenate the lists; push result ([4])",
          "explain2": { "text": "pop 2 values (#+, #+); concatenate the lists; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1834",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1833"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e61a": "1",
          "2540203e68a": "1",
          "2547d06e0da": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540203e61a",
          "fp": "1",
          "name": "player(2)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547d06e0da",
          "fp": "4",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1834",
          "sp": "6",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1834","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Store", "var": "thegame[\"waiting\"]", "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "91",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2547d06e0da",
        "fp": "4",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1834",
        "sp": "6",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1834","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Store", "var": "thegame[\"waiting\"]", "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value ([4]) and address (?thegame[\"waiting\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
          "npc": "1835",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1835","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "1834"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1836",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1835"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1837",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1836"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1838",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1837"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e61a": "1",
          "2540203e68a": "1",
          "2547b04e21a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540203e61a",
          "fp": "1",
          "name": "player(2)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547b04e21a",
          "fp": "4",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1838",
          "sp": "5",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1838","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "189",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2547b04e21a",
        "fp": "4",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1838",
        "sp": "5",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1838","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1839",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1839","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1838"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1840",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1839"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1841",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1840"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (0, 0); check if both values are the same; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "1842",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1841"
        },

        {
          "code": "JumpCond False 1851",
          "explain": "pop value (True), compare to False, and jump to 1851 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1851 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1843",
          "pop": "1",
          "push": [ ],
          "pc": "1842"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1844",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1843"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1845",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1844"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team2\", ?thegame); push result (?thegame[\"team2\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "npc": "1846",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ],
          "pc": "1845"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e61a": "1",
          "2540203e68a": "1",
          "2540203eb6a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540203e61a",
          "fp": "1",
          "name": "player(2)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2540203eb6a",
          "fp": "4",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1846",
          "sp": "5",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1846","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team2\"]" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "228",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2540203eb6a",
        "fp": "4",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1846",
        "sp": "5",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1846","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team2\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team2\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1847",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1847","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1846"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1848",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1847"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1849",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1848"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (0, 0); check if both values are the same; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "1850",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1849"
        },

        {
          "code": "Jump 1852",
          "explain": "set program counter to 1852",
          "explain2": { "text": "set program counter to 1852", "args": [] },
          "npc": "1852",
          "push": [ ],
          "pc": "1850"
        },

        {
          "code": "JumpCond False 1858",
          "explain": "pop value (True), compare to False, and jump to 1858 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1858 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1853",
          "pop": "1",
          "push": [ ],
          "pc": "1852"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1854",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1853"
        },

        {
          "code": "Push \"active_game\"",
          "explain": "push constant \"active_game\"",
          "explain2": { "text": "push constant \"active_game\"", "args": [] },
          "npc": "1855",
          "push": [ { "type": "atom", "value": "active_game" } ],
          "pc": "1854"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"active_game\", ?thegame); push result (?thegame[\"active_game\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "active_game" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ] },
          "npc": "1856",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ],
          "pc": "1855"
        },

        {
          "code": "Apply PC(1067)",
          "explain": "pop an argument (?thegame[\"active_game\"]) and call method (1067: \"notify\")",
          "explain2": { "text": "pop an argument (#+) and call method (1067: #+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "atom", "value": "notify" } ] },
          "npc": "1067",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1857","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1067","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 6}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "29698" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ],
          "pc": "1856"
        },

        {
          "code": "Frame notify(c)",
          "explain": "pop argument (?thegame[\"active_game\"]), assign to c, and run method \"notify\"",
          "explain2": { "text": "pop argument (#+), assign to c, and run method #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "atom", "value": "notify" } ] },
          "npc": "1068",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] } ],
          "pc": "1067"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e61a": "1",
          "2540203e68a": "1",
          "2547d06e44a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540203e61a",
          "fp": "1",
          "name": "player(2)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547d06e44a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1068",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "29698" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1857","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1068","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "277",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2547d06e44a",
        "fp": "7",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1068",
        "sp": "7",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "29698" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1857","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1068","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "1069",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1857","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1069","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "1068"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"active_game\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1070",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ],
          "pc": "1069"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"active_game\"]) and push value ({:})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "dict", "value": [] } ] },
          "npc": "1071",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1070"
        },

        {
          "code": "Push PC(541)",
          "explain": "push program counter constant 541 ()",
          "explain2": { "text": "push program counter constant 541 ()", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "1072",
          "push": [ { "type": "pc", "value": "541" } ],
          "pc": "1071"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1073",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1072"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([], PC(541)); push result (?PC(541)[[]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "pc", "value": "541" }, { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ] },
          "npc": "1074",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ],
          "pc": "1073"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([]) and call method (541: \"empty\")",
          "explain2": { "text": "pop an argument (#+) and call method (541: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "empty" } ] },
          "npc": "541",
          "fp": "11",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1857","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1075","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6},{"pc": "541","xpc": "541","method_name": { "type": "atom", "value": "empty" },
"method_arg": { "type": "list", "value": [] },
"method": "empty()","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 10}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "17186" }, { "type": "list", "value": [] } ],
          "pc": "1074"
        },

        {
          "code": "Frame empty()",
          "explain": "pop argument () and run method \"empty\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "542",
          "local": { },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "c" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } } ] } ],
          "pc": "541"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "543",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "542"
        },

        {
          "code": "StoreVar bg",
          "explain": "pop value ({:}) and store locally in variable \\\"bg\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"bg\"", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "544",
          "local": { "bg": { "type": "dict", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "543"
        },

        {
          "code": "ReturnOp(bg)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "1075",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1857","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1075","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6}
          ],
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },
          "pop": "3",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "544"
        },

        {
          "code": "2-ary !=",
          "explain": "pop 2 values ({:}, {:}); check if the values are unequal; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the values are unequal; push result (#+)", "args": [ { "type": "dict", "value": [] }, { "type": "dict", "value": [] }, { "type": "bool", "value": "False" } ] },
          "npc": "1076",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1075"
        },

        {
          "code": "JumpCond False 1093",
          "explain": "pop value (False), compare to False, and jump to 1093 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1093 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "1093",
          "pop": "1",
          "push": [ ],
          "pc": "1076"
        },

        {
          "code": "DelVar c",
          "explain": "delete method variable c",
          "explain2": { "text": "delete method variable c", "args": [] },
          "npc": "1094",
          "local": { },
          "push": [ ],
          "pc": "1093"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "1095",
          "atomic": "0",
          "push": [ ],
          "pc": "1094"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "1857",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1857","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "1095"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "1858",
          "pop": "1",
          "push": [ ],
          "pc": "1857"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1859",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1858"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1860",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1859"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1861",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1860"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e61a": "1",
          "2540203e68a": "1",
          "25474fe534a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540203e61a",
          "fp": "1",
          "name": "player(2)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "25474fe534a",
          "fp": "4",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1861",
          "sp": "5",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1861","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "419",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "25474fe534a",
        "fp": "4",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1861",
        "sp": "5",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1861","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1862",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1862","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1861"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1863",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1862"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1864",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1863"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1865",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1864"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team2\", ?thegame); push result (?thegame[\"team2\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "npc": "1866",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ],
          "pc": "1865"
        }

      ],
      "ctxbag": {
          "2540000f15a": "1",
          "2540203e5aa": "1",
          "2540203e61a": "1",
          "2540203e68a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540203e61a",
          "fp": "1",
          "name": "player(2)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2540000f15a",
          "fp": "4",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1866",
          "sp": "6",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1866","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team2\"]" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "488",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2540000f15a",
        "fp": "4",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1866",
        "sp": "6",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1866","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team2\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team2\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1867",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1867","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1866"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1868",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1867"
        },

        {
          "code": "2-ary !=",
          "explain": "pop 2 values (0, 0); check if the values are unequal; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the values are unequal; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "False" } ] },
          "npc": "1869",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1868"
        },

        {
          "code": "JumpCond True 1896",
          "explain": "pop value (False), compare to True, and jump to 1896 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1896 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "1870",
          "pop": "1",
          "push": [ ],
          "pc": "1869"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1871",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1870"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1872",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1871"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1873",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1872"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e61a": "1",
          "2540203e68a": "1",
          "2547b04e26a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540203e61a",
          "fp": "1",
          "name": "player(2)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547b04e26a",
          "fp": "4",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1873",
          "sp": "5",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1873","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "605",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2547b04e26a",
        "fp": "4",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1873",
        "sp": "5",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1873","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1874",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1874","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1873"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1875",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1874"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1876",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1875"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (0, 0); check if both values are the same; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "1877",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1876"
        },

        {
          "code": "JumpCond True 1896",
          "explain": "pop value (True), compare to True, and jump to 1896 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1896 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] },
          "npc": "1896",
          "pop": "1",
          "push": [ ],
          "pc": "1877"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "1897",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1896"
        },

        {
          "code": "JumpCond False 1910",
          "explain": "pop value (True), compare to False, and jump to 1910 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1910 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1898",
          "pop": "1",
          "push": [ ],
          "pc": "1897"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1899",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1898"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1900",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1899"
        },

        {
          "code": "Push \"players\"",
          "explain": "push constant \"players\"",
          "explain2": { "text": "push constant \"players\"", "args": [] },
          "npc": "1901",
          "push": [ { "type": "atom", "value": "players" } ],
          "pc": "1900"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"players\", ?thegame); push result (?thegame[\"players\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "players" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] },
          "npc": "1902",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1901"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?thegame[\"players\"], []); insert first value into the second; push result ([?thegame[\"players\"]])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] } ] },
          "npc": "1903",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] } ],
          "pc": "1902"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1904",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1903"
        },

        {
          "code": "Push \"lock\"",
          "explain": "push constant \"lock\"",
          "explain2": { "text": "push constant \"lock\"", "args": [] },
          "npc": "1905",
          "push": [ { "type": "atom", "value": "lock" } ],
          "pc": "1904"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"lock\", ?thegame); push result (?thegame[\"lock\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "lock" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "npc": "1906",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1905"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?thegame[\"lock\"], [?thegame[\"players\"]]); insert first value into the second; push result ([?thegame[\"players\"], ?thegame[\"lock\"]])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] } ] },
          "npc": "1907",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] } ],
          "pc": "1906"
        },

        {
          "code": "Apply PC(998)",
          "explain": "pop an argument ([?thegame[\"players\"], ?thegame[\"lock\"]]) and call method (998: \"wait\")",
          "explain2": { "text": "pop an argument (#+) and call method (998: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] }, { "type": "atom", "value": "wait" } ] },
          "npc": "998",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "998","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 6}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] } ],
          "pc": "1907"
        },

        {
          "code": "Frame wait(c, lk)",
          "explain": "pop argument ([?thegame[\"players\"], ?thegame[\"lock\"]]), assign to (c, lk), and run method \"wait\"",
          "explain2": { "text": "pop argument (#+), assign to (c, lk), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] }, { "type": "atom", "value": "wait" } ] },
          "npc": "999",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] } ],
          "pc": "998"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1000",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "999"
        },

        {
          "code": "StoreVar cnt",
          "explain": "pop value (0) and store locally in variable \\\"cnt\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"cnt\"", "args": [ { "type": "int", "value": "0" } ] },
          "npc": "1001",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1000"
        },

        {
          "code": "DelVar cnt",
          "explain": "delete method variable cnt",
          "explain2": { "text": "delete method variable cnt", "args": [] },
          "npc": "1002",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "push": [ ],
          "pc": "1001"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1003",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1002"
        },

        {
          "code": "Save",
          "explain": "pop a value and save context",
          "explain2": { "text": "pop a value and save context", "args": [] },
          "npc": "1004",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1003"
        },

        {
          "code": "Continue",
          "explain": "a no-op, must follow a Stop or Save operation",
          "explain2": { "text": "a no-op, must follow a Stop or Save operation", "args": [] },
          "npc": "1005",
          "push": [ ],
          "pc": "1004"
        },

        {
          "code": "StoreVar ((), ctx)",
          "explain": "pop value ([[], CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }])]) and store locally in variable \\\"((), ctx)\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"((), ctx)\"", "args": [ { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] },
          "npc": "1006",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1005"
        }

      ],
      "ctxbag": {
          "2540000f30a": "1",
          "2540203e5aa": "1",
          "2540203e61a": "1",
          "2540203e68a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540203e61a",
          "fp": "1",
          "name": "player(2)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2540000f30a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1006",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1006","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "655",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2540000f30a",
        "fp": "7",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1006",
        "sp": "7",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1006","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "1007",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1007","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "1006"
        },

        {
          "code": "Push PC(605)",
          "explain": "push constant PC(605)",
          "explain2": { "text": "push constant PC(605)", "args": [] },
          "npc": "1008",
          "push": [ { "type": "pc", "value": "605" } ],
          "pc": "1007"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1009",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1008"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"players\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1010",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1009"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"players\"]) and push value ({:})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "dict", "value": [] } ] },
          "npc": "1011",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1010"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({:}, []); insert first value into the second; push result ([{:}])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "dict", "value": [] } ] } ] },
          "npc": "1012",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [] } ] } ],
          "pc": "1011"
        },

        {
          "code": "LoadVar ctx",
          "explain": "push value (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }])) of variable \"ctx\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "atom", "value": "ctx" } ] },
          "npc": "1013",
          "push": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ],
          "pc": "1012"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]), [{:}]); insert first value into the second; push result ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }])])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "list", "value": [{ "type": "dict", "value": [] } ] }, { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] },
          "npc": "1014",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1013"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }])], PC(605)); push result (?PC(605)[[{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }])]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "pc", "value": "605" }, { "type": "address", "func": { "type": "pc", "value": "605" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ] },
          "npc": "1015",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "605" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ],
          "pc": "1014"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }])]) and call method (605: \"multiplicity\")",
          "explain2": { "text": "pop an argument (#+) and call method (605: #+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "atom", "value": "multiplicity" } ] },
          "npc": "605",
          "fp": "10",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1016","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6},{"pc": "605","xpc": "605","method_name": { "type": "atom", "value": "multiplicity" },
"method_arg": { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] },
"method": "multiplicity({:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]))","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 9}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "16242" }, { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1015"
        },

        {
          "code": "Frame multiplicity(bg, elt)",
          "explain": "start of method multiplicity",
          "explain2": { "text": "start of method multiplicity", "args": [] },
          "npc": "1016",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1016","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "pop": "3",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "605"
        },

        {
          "code": "StoreVar cnt",
          "explain": "pop value (0) and store locally in variable \\\"cnt\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"cnt\"", "args": [ { "type": "int", "value": "0" } ] },
          "npc": "1017",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1016"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"players\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1018",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1017"
        },

        {
          "code": "Push PC(696)",
          "explain": "push constant PC(696)",
          "explain2": { "text": "push constant PC(696)", "args": [] },
          "npc": "1019",
          "push": [ { "type": "pc", "value": "696" } ],
          "pc": "1018"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1020",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1019"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"players\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1021",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1020"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"players\"]) and push value ({:})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "dict", "value": [] } ] },
          "npc": "1022",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1021"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({:}, []); insert first value into the second; push result ([{:}])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "dict", "value": [] } ] } ] },
          "npc": "1023",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [] } ] } ],
          "pc": "1022"
        },

        {
          "code": "LoadVar ctx",
          "explain": "push value (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }])) of variable \"ctx\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "atom", "value": "ctx" } ] },
          "npc": "1024",
          "push": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ],
          "pc": "1023"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]), [{:}]); insert first value into the second; push result ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }])])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "list", "value": [{ "type": "dict", "value": [] } ] }, { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] },
          "npc": "1025",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1024"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }])], PC(696)); push result (?PC(696)[[{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }])]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "pc", "value": "696" }, { "type": "address", "func": { "type": "pc", "value": "696" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ] },
          "npc": "1026",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "696" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ],
          "pc": "1025"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }])]) and call method (696: \"add\")",
          "explain2": { "text": "pop an argument (#+) and call method (696: #+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "atom", "value": "add" } ] },
          "npc": "696",
          "fp": "11",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1027","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6},{"pc": "696","xpc": "696","method_name": { "type": "atom", "value": "add" },
"method_arg": { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] },
"method": "add({:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]))","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 10}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "16418" }, { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1026"
        },

        {
          "code": "Frame add(bg, elt)",
          "explain": "start of method add",
          "explain2": { "text": "start of method add", "args": [] },
          "npc": "1027",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1027","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "696"
        },

        {
          "code": "Store",
          "explain": "pop value ({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }) and address (?thegame[\"players\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
          "npc": "1028",
          "pop": "2",
          "push": [ ],
          "pc": "1027"
        },

        {
          "code": "LoadVar lk",
          "explain": "push value (?thegame[\"lock\"]) of variable \"lk\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "lk" } ] },
          "npc": "1029",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1028"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "1030",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1029"
        },

        {
          "code": "Store",
          "explain": "pop value (False) and address (?thegame[\"lock\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "False" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
          "npc": "1031",
          "pop": "2",
          "push": [ ],
          "pc": "1030"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "1032",
          "atomic": "0",
          "push": [ ],
          "pc": "1031"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e61a": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540203e61a",
          "fp": "1",
          "name": "player(2)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "778",
      "tid": "3",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(2)",
      "context": {
        "tid": "3",
        "hvalue": "2540203e61a",
        "fp": "1",
        "name": "player(2)",
        "entry": "2082",
        "pc": "2082",
        "sp": "1",
        "stack": [{ "type": "int", "value": "2" }],
        "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
        ],
        "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Frame player(id)",
          "explain": "pop argument (2), assign to id, and run method \"player\"",
          "explain2": { "text": "pop argument (#+), assign to id, and run method #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "player" } ] },
          "npc": "2083",
          "fp": "1",
          "trace": [
{"pc": "2083","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "local": { "id": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "2082"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "2084",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "2083"
        },

        {
          "code": "Push ?thegame",
          "explain": "push constant ?thegame",
          "explain2": { "text": "push constant ?thegame", "args": [] },
          "npc": "2085",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "2084"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?thegame, []); insert first value into the second; push result ([?thegame])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] } ] },
          "npc": "2086",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] } ],
          "pc": "2085"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (2) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "id" } ] },
          "npc": "2087",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "2086"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, [?thegame]); insert first value into the second; push result ([?thegame, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] } ] },
          "npc": "2088",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "2087"
        },

        {
          "code": "Apply PC(1817)",
          "explain": "pop an argument ([?thegame, 2]) and call method (1817: \"game_join\")",
          "explain2": { "text": "pop an argument (#+) and call method (1817: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "game_join" } ] },
          "npc": "1817",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1817","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "2088"
        },

        {
          "code": "Frame game_join(g, id)",
          "explain": "pop argument ([?thegame, 2]), assign to (g, id), and run method \"game_join\"",
          "explain2": { "text": "pop argument (#+), assign to (g, id), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "game_join" } ] },
          "npc": "1818",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "1817"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1819",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1818"
        },

        {
          "code": "Push \"lock\"",
          "explain": "push constant \"lock\"",
          "explain2": { "text": "push constant \"lock\"", "args": [] },
          "npc": "1820",
          "push": [ { "type": "atom", "value": "lock" } ],
          "pc": "1819"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"lock\", ?thegame); push result (?thegame[\"lock\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "lock" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "npc": "1821",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1820"
        },

        {
          "code": "Apply PC(954)",
          "explain": "pop an argument (?thegame[\"lock\"]) and call method (954: \"acquire\")",
          "explain2": { "text": "pop an argument (#+) and call method (954: #+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "acquire" } ] },
          "npc": "954",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1822","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "954","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 6}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "29138" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1821"
        },

        {
          "code": "Frame acquire(binsema)",
          "explain": "pop argument (?thegame[\"lock\"]), assign to binsema, and run method \"acquire\"",
          "explain2": { "text": "pop argument (#+), assign to binsema, and run method #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "acquire" } ] },
          "npc": "955",
          "local": { "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "954"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2540203e8ea": "1",
          "2547902345a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540203e8ea",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "955",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "29138" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1822","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "955","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "883",
      "tid": "3",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(2)",
      "context": {
        "tid": "3",
        "hvalue": "2540203e8ea",
        "fp": "7",
        "name": "player(2)",
        "entry": "2082",
        "pc": "955",
        "sp": "7",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "29138" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1822","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "955","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "956",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1822","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "956","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "955"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "957",
          "readonly": "1",
          "push": [ ],
          "pc": "956"
        },

        {
          "code": "LoadVar binsema",
          "explain": "push value (?thegame[\"lock\"]) of variable \"binsema\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "binsema" } ] },
          "npc": "958",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "957"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"lock\"]) and push value (False)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "bool", "value": "False" } ] },
          "npc": "959",
          "pop": "1",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "958"
        },

        {
          "code": "1-ary not",
          "explain": "pop a value (False); logical not; push result (True)",
          "explain2": { "text": "pop a value (#+); logical not; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "960",
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "959"
        },

        {
          "code": "JumpCond False 962",
          "explain": "pop value (True), compare to False, and jump to 962 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 962 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "961",
          "pop": "1",
          "push": [ ],
          "pc": "960"
        },

        {
          "code": "Jump 965",
          "explain": "set program counter to 965",
          "explain2": { "text": "set program counter to 965", "args": [] },
          "npc": "965",
          "push": [ ],
          "pc": "961"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "966",
          "readonly": "0",
          "push": [ ],
          "pc": "965"
        },

        {
          "code": "LoadVar binsema",
          "explain": "push value (?thegame[\"lock\"]) of variable \"binsema\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "binsema" } ] },
          "npc": "967",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "966"
        },

        {
          "code": "DelVar binsema",
          "explain": "delete method variable binsema",
          "explain2": { "text": "delete method variable binsema", "args": [] },
          "npc": "968",
          "local": { },
          "push": [ ],
          "pc": "967"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "969",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "968"
        },

        {
          "code": "Store",
          "explain": "pop value (True) and address (?thegame[\"lock\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "True" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
          "npc": "970",
          "pop": "2",
          "push": [ ],
          "pc": "969"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "971",
          "atomic": "0",
          "push": [ ],
          "pc": "970"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "1822",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1822","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "971"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "1823",
          "pop": "1",
          "push": [ ],
          "pc": "1822"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1824",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1823"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1825",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1824"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1826",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1825"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1827",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1826"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1828",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1827"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1829",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1828"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2540405a18a": "1",
          "2547902345a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540405a18a",
          "fp": "4",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1829",
          "sp": "6",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1829","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "969",
      "tid": "3",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(2)",
      "context": {
        "tid": "3",
        "hvalue": "2540405a18a",
        "fp": "4",
        "name": "player(2)",
        "entry": "2082",
        "pc": "1829",
        "sp": "6",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1829","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"waiting\"]) and push value ([4])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1830",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1830","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1829"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1831",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1830"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (2) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "id" } ] },
          "npc": "1832",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1831"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, []); insert first value into the second; push result ([2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "1833",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "1832"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values ([2], [4]); concatenate the lists; push result ([4, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); concatenate the lists; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "2" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "1834",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } ],
          "pc": "1833"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e6da": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e6da",
          "fp": "4",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1834",
          "sp": "6",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1834","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "next": { "type": "Store", "var": "thegame[\"waiting\"]", "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "1153",
      "tid": "3",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(2)",
      "context": {
        "tid": "3",
        "hvalue": "2547b04e6da",
        "fp": "4",
        "name": "player(2)",
        "entry": "2082",
        "pc": "1834",
        "sp": "6",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1834","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
        ],
        "next": { "type": "Store", "var": "thegame[\"waiting\"]", "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value ([4, 2]) and address (?thegame[\"waiting\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
          "npc": "1835",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1835","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "1834"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1836",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1835"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1837",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1836"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1838",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1837"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902310a": "1",
          "2547902345a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547902310a",
          "fp": "4",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1838",
          "sp": "5",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1838","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "1228",
      "tid": "3",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "player(2)",
      "context": {
        "tid": "3",
        "hvalue": "2547902310a",
        "fp": "4",
        "name": "player(2)",
        "entry": "2082",
        "pc": "1838",
        "sp": "5",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1838","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1839",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1839","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1838"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1840",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1839"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1841",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1840"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (0, 0); check if both values are the same; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "1842",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1841"
        },

        {
          "code": "JumpCond False 1851",
          "explain": "pop value (True), compare to False, and jump to 1851 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1851 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1843",
          "pop": "1",
          "push": [ ],
          "pc": "1842"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1844",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1843"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1845",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1844"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team2\", ?thegame); push result (?thegame[\"team2\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "npc": "1846",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ],
          "pc": "1845"
        }

      ],
      "ctxbag": {
          "2540000f04a": "1",
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540000f04a",
          "fp": "4",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1846",
          "sp": "5",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1846","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team2\"]" },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "1440",
      "tid": "3",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "player(2)",
      "context": {
        "tid": "3",
        "hvalue": "2540000f04a",
        "fp": "4",
        "name": "player(2)",
        "entry": "2082",
        "pc": "1846",
        "sp": "5",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1846","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team2\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team2\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1847",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1847","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1846"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1848",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1847"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1849",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1848"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (0, 0); check if both values are the same; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "1850",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1849"
        },

        {
          "code": "Jump 1852",
          "explain": "set program counter to 1852",
          "explain2": { "text": "set program counter to 1852", "args": [] },
          "npc": "1852",
          "push": [ ],
          "pc": "1850"
        },

        {
          "code": "JumpCond False 1858",
          "explain": "pop value (True), compare to False, and jump to 1858 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1858 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1853",
          "pop": "1",
          "push": [ ],
          "pc": "1852"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1854",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1853"
        },

        {
          "code": "Push \"active_game\"",
          "explain": "push constant \"active_game\"",
          "explain2": { "text": "push constant \"active_game\"", "args": [] },
          "npc": "1855",
          "push": [ { "type": "atom", "value": "active_game" } ],
          "pc": "1854"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"active_game\", ?thegame); push result (?thegame[\"active_game\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "active_game" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ] },
          "npc": "1856",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ],
          "pc": "1855"
        },

        {
          "code": "Apply PC(1067)",
          "explain": "pop an argument (?thegame[\"active_game\"]) and call method (1067: \"notify\")",
          "explain2": { "text": "pop an argument (#+) and call method (1067: #+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "atom", "value": "notify" } ] },
          "npc": "1067",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1857","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1067","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 6}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "29698" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ],
          "pc": "1856"
        },

        {
          "code": "Frame notify(c)",
          "explain": "pop argument (?thegame[\"active_game\"]), assign to c, and run method \"notify\"",
          "explain2": { "text": "pop argument (#+), assign to c, and run method #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "atom", "value": "notify" } ] },
          "npc": "1068",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "1067"
        }

      ],
      "ctxbag": {
          "2540000f09a": "1",
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540000f09a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1068",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "29698" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1857","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1068","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "1564",
      "tid": "3",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "player(2)",
      "context": {
        "tid": "3",
        "hvalue": "2540000f09a",
        "fp": "7",
        "name": "player(2)",
        "entry": "2082",
        "pc": "1068",
        "sp": "7",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "29698" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1857","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1068","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "1069",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1857","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1069","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "1068"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"active_game\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1070",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ],
          "pc": "1069"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"active_game\"]) and push value ({:})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "dict", "value": [] } ] },
          "npc": "1071",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1070"
        },

        {
          "code": "Push PC(541)",
          "explain": "push program counter constant 541 ()",
          "explain2": { "text": "push program counter constant 541 ()", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "1072",
          "push": [ { "type": "pc", "value": "541" } ],
          "pc": "1071"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1073",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1072"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([], PC(541)); push result (?PC(541)[[]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "pc", "value": "541" }, { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ] },
          "npc": "1074",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ],
          "pc": "1073"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([]) and call method (541: \"empty\")",
          "explain2": { "text": "pop an argument (#+) and call method (541: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "empty" } ] },
          "npc": "541",
          "fp": "11",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1857","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1075","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6},{"pc": "541","xpc": "541","method_name": { "type": "atom", "value": "empty" },
"method_arg": { "type": "list", "value": [] },
"method": "empty()","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 10}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "17186" }, { "type": "list", "value": [] } ],
          "pc": "1074"
        },

        {
          "code": "Frame empty()",
          "explain": "pop argument () and run method \"empty\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "542",
          "local": { },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "c" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } } ] } ],
          "pc": "541"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "543",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "542"
        },

        {
          "code": "StoreVar bg",
          "explain": "pop value ({:}) and store locally in variable \\\"bg\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"bg\"", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "544",
          "local": { "bg": { "type": "dict", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "543"
        },

        {
          "code": "ReturnOp(bg)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "1075",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1857","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1075","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6}
          ],
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },
          "pop": "3",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "544"
        },

        {
          "code": "2-ary !=",
          "explain": "pop 2 values ({:}, {:}); check if the values are unequal; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the values are unequal; push result (#+)", "args": [ { "type": "dict", "value": [] }, { "type": "dict", "value": [] }, { "type": "bool", "value": "False" } ] },
          "npc": "1076",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1075"
        },

        {
          "code": "JumpCond False 1093",
          "explain": "pop value (False), compare to False, and jump to 1093 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1093 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "1093",
          "pop": "1",
          "push": [ ],
          "pc": "1076"
        },

        {
          "code": "DelVar c",
          "explain": "delete method variable c",
          "explain2": { "text": "delete method variable c", "args": [] },
          "npc": "1094",
          "local": { },
          "push": [ ],
          "pc": "1093"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "1095",
          "atomic": "0",
          "push": [ ],
          "pc": "1094"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "1857",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1857","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "1095"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "1858",
          "pop": "1",
          "push": [ ],
          "pc": "1857"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1859",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1858"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1860",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1859"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1861",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1860"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "25474fe539a": "1",
          "2547902345a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "25474fe539a",
          "fp": "4",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1861",
          "sp": "5",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1861","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "1796",
      "tid": "3",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "player(2)",
      "context": {
        "tid": "3",
        "hvalue": "25474fe539a",
        "fp": "4",
        "name": "player(2)",
        "entry": "2082",
        "pc": "1861",
        "sp": "5",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1861","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1862",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1862","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1861"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1863",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1862"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1864",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1863"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1865",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1864"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team2\", ?thegame); push result (?thegame[\"team2\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "npc": "1866",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ],
          "pc": "1865"
        }

      ],
      "ctxbag": {
          "2540000f1aa": "1",
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2540000f1aa",
          "fp": "4",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1866",
          "sp": "6",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1866","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team2\"]" },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "1872",
      "tid": "3",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "player(2)",
      "context": {
        "tid": "3",
        "hvalue": "2540000f1aa",
        "fp": "4",
        "name": "player(2)",
        "entry": "2082",
        "pc": "1866",
        "sp": "6",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1866","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team2\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team2\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1867",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1867","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1866"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1868",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1867"
        },

        {
          "code": "2-ary !=",
          "explain": "pop 2 values (0, 0); check if the values are unequal; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the values are unequal; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "False" } ] },
          "npc": "1869",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1868"
        },

        {
          "code": "JumpCond True 1896",
          "explain": "pop value (False), compare to True, and jump to 1896 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1896 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "1870",
          "pop": "1",
          "push": [ ],
          "pc": "1869"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1871",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1870"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1872",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1871"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1873",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1872"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e2ba": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e2ba",
          "fp": "4",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1873",
          "sp": "5",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1873","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "2175",
      "tid": "3",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "player(2)",
      "context": {
        "tid": "3",
        "hvalue": "2547b04e2ba",
        "fp": "4",
        "name": "player(2)",
        "entry": "2082",
        "pc": "1873",
        "sp": "5",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1873","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1874",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1874","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1873"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1875",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1874"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1876",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1875"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (0, 0); check if both values are the same; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "1877",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1876"
        },

        {
          "code": "JumpCond True 1896",
          "explain": "pop value (True), compare to True, and jump to 1896 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1896 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] },
          "npc": "1896",
          "pop": "1",
          "push": [ ],
          "pc": "1877"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "1897",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1896"
        },

        {
          "code": "JumpCond False 1910",
          "explain": "pop value (True), compare to False, and jump to 1910 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1910 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1898",
          "pop": "1",
          "push": [ ],
          "pc": "1897"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1899",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1898"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1900",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1899"
        },

        {
          "code": "Push \"players\"",
          "explain": "push constant \"players\"",
          "explain2": { "text": "push constant \"players\"", "args": [] },
          "npc": "1901",
          "push": [ { "type": "atom", "value": "players" } ],
          "pc": "1900"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"players\", ?thegame); push result (?thegame[\"players\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "players" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] },
          "npc": "1902",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1901"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?thegame[\"players\"], []); insert first value into the second; push result ([?thegame[\"players\"]])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] } ] },
          "npc": "1903",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] } ],
          "pc": "1902"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1904",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1903"
        },

        {
          "code": "Push \"lock\"",
          "explain": "push constant \"lock\"",
          "explain2": { "text": "push constant \"lock\"", "args": [] },
          "npc": "1905",
          "push": [ { "type": "atom", "value": "lock" } ],
          "pc": "1904"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"lock\", ?thegame); push result (?thegame[\"lock\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "lock" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "npc": "1906",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1905"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?thegame[\"lock\"], [?thegame[\"players\"]]); insert first value into the second; push result ([?thegame[\"players\"], ?thegame[\"lock\"]])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] } ] },
          "npc": "1907",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] } ],
          "pc": "1906"
        },

        {
          "code": "Apply PC(998)",
          "explain": "pop an argument ([?thegame[\"players\"], ?thegame[\"lock\"]]) and call method (998: \"wait\")",
          "explain2": { "text": "pop an argument (#+) and call method (998: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] }, { "type": "atom", "value": "wait" } ] },
          "npc": "998",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "998","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 6}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] } ],
          "pc": "1907"
        },

        {
          "code": "Frame wait(c, lk)",
          "explain": "pop argument ([?thegame[\"players\"], ?thegame[\"lock\"]]), assign to (c, lk), and run method \"wait\"",
          "explain2": { "text": "pop argument (#+), assign to (c, lk), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] }, { "type": "atom", "value": "wait" } ] },
          "npc": "999",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "998"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1000",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "999"
        },

        {
          "code": "StoreVar cnt",
          "explain": "pop value (0) and store locally in variable \\\"cnt\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"cnt\"", "args": [ { "type": "int", "value": "0" } ] },
          "npc": "1001",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1000"
        },

        {
          "code": "DelVar cnt",
          "explain": "delete method variable cnt",
          "explain2": { "text": "delete method variable cnt", "args": [] },
          "npc": "1002",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "push": [ ],
          "pc": "1001"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1003",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1002"
        },

        {
          "code": "Save",
          "explain": "pop a value and save context",
          "explain2": { "text": "pop a value and save context", "args": [] },
          "npc": "1004",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1003"
        },

        {
          "code": "Continue",
          "explain": "a no-op, must follow a Stop or Save operation",
          "explain2": { "text": "a no-op, must follow a Stop or Save operation", "args": [] },
          "npc": "1005",
          "push": [ ],
          "pc": "1004"
        },

        {
          "code": "StoreVar ((), ctx)",
          "explain": "pop value ([[], CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 2 },[],30514,{ \"g\": ?thegame, \"id\": 2 }])]) and store locally in variable \\\"((), ctx)\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"((), ctx)\"", "args": [ { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] },
          "npc": "1006",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1005"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "254770082aa": "1",
          "2547902345a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "254770082aa",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1006",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1006","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "2330",
      "tid": "3",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "player(2)",
      "context": {
        "tid": "3",
        "hvalue": "254770082aa",
        "fp": "7",
        "name": "player(2)",
        "entry": "2082",
        "pc": "1006",
        "sp": "7",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1006","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "1007",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1007","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "1006"
        },

        {
          "code": "Push PC(605)",
          "explain": "push constant PC(605)",
          "explain2": { "text": "push constant PC(605)", "args": [] },
          "npc": "1008",
          "push": [ { "type": "pc", "value": "605" } ],
          "pc": "1007"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1009",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1008"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"players\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1010",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1009"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"players\"]) and push value ({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ] },
          "npc": "1011",
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "1010"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, []); insert first value into the second; push result ([{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ] } ] },
          "npc": "1012",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ] } ],
          "pc": "1011"
        },

        {
          "code": "LoadVar ctx",
          "explain": "push value (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 2 },[],30514,{ \"g\": ?thegame, \"id\": 2 }])) of variable \"ctx\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "atom", "value": "ctx" } ] },
          "npc": "1013",
          "push": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ],
          "pc": "1012"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 2 },[],30514,{ \"g\": ?thegame, \"id\": 2 }]), [{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }]); insert first value into the second; push result ([{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 2 },[],30514,{ \"g\": ?thegame, \"id\": 2 }])])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ] }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] },
          "npc": "1014",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1013"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 2 },[],30514,{ \"g\": ?thegame, \"id\": 2 }])], PC(605)); push result (?PC(605)[[{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 2 },[],30514,{ \"g\": ?thegame, \"id\": 2 }])]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "pc", "value": "605" }, { "type": "address", "func": { "type": "pc", "value": "605" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ] },
          "npc": "1015",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "605" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ],
          "pc": "1014"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 2 },[],30514,{ \"g\": ?thegame, \"id\": 2 }])]) and call method (605: \"multiplicity\")",
          "explain2": { "text": "pop an argument (#+) and call method (605: #+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "atom", "value": "multiplicity" } ] },
          "npc": "605",
          "fp": "10",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1016","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6},{"pc": "605","xpc": "605","method_name": { "type": "atom", "value": "multiplicity" },
"method_arg": { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] },
"method": "multiplicity({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 2 },[],30514,{ \"g\": ?thegame, \"id\": 2 }]))","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 9}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "16242" }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1015"
        },

        {
          "code": "Frame multiplicity(bg, elt)",
          "explain": "start of method multiplicity",
          "explain2": { "text": "start of method multiplicity", "args": [] },
          "npc": "1016",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1016","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "pop": "3",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "605"
        },

        {
          "code": "StoreVar cnt",
          "explain": "pop value (0) and store locally in variable \\\"cnt\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"cnt\"", "args": [ { "type": "int", "value": "0" } ] },
          "npc": "1017",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1016"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"players\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1018",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1017"
        },

        {
          "code": "Push PC(696)",
          "explain": "push constant PC(696)",
          "explain2": { "text": "push constant PC(696)", "args": [] },
          "npc": "1019",
          "push": [ { "type": "pc", "value": "696" } ],
          "pc": "1018"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1020",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1019"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"players\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1021",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1020"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"players\"]) and push value ({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ] },
          "npc": "1022",
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "1021"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, []); insert first value into the second; push result ([{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ] } ] },
          "npc": "1023",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ] } ],
          "pc": "1022"
        },

        {
          "code": "LoadVar ctx",
          "explain": "push value (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 2 },[],30514,{ \"g\": ?thegame, \"id\": 2 }])) of variable \"ctx\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "atom", "value": "ctx" } ] },
          "npc": "1024",
          "push": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ],
          "pc": "1023"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 2 },[],30514,{ \"g\": ?thegame, \"id\": 2 }]), [{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }]); insert first value into the second; push result ([{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 2 },[],30514,{ \"g\": ?thegame, \"id\": 2 }])])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ] }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] },
          "npc": "1025",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1024"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 2 },[],30514,{ \"g\": ?thegame, \"id\": 2 }])], PC(696)); push result (?PC(696)[[{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 2 },[],30514,{ \"g\": ?thegame, \"id\": 2 }])]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "pc", "value": "696" }, { "type": "address", "func": { "type": "pc", "value": "696" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ] },
          "npc": "1026",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "696" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ],
          "pc": "1025"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 2 },[],30514,{ \"g\": ?thegame, \"id\": 2 }])]) and call method (696: \"add\")",
          "explain2": { "text": "pop an argument (#+) and call method (696: #+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "atom", "value": "add" } ] },
          "npc": "696",
          "fp": "11",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1027","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6},{"pc": "696","xpc": "696","method_name": { "type": "atom", "value": "add" },
"method_arg": { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] },
"method": "add({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 2 },[],30514,{ \"g\": ?thegame, \"id\": 2 }]))","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 10}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "16418" }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1026"
        },

        {
          "code": "Frame add(bg, elt)",
          "explain": "start of method add",
          "explain2": { "text": "start of method add", "args": [] },
          "npc": "1027",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1027","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "696"
        },

        {
          "code": "Store",
          "explain": "pop value ({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]): 1, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 2 },[],30514,{ \"g\": ?thegame, \"id\": 2 }]): 1 }) and address (?thegame[\"players\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
          "npc": "1028",
          "pop": "2",
          "push": [ ],
          "pc": "1027"
        },

        {
          "code": "LoadVar lk",
          "explain": "push value (?thegame[\"lock\"]) of variable \"lk\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "lk" } ] },
          "npc": "1029",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1028"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "1030",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1029"
        },

        {
          "code": "Store",
          "explain": "pop value (False) and address (?thegame[\"lock\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "False" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
          "npc": "1031",
          "pop": "2",
          "push": [ ],
          "pc": "1030"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "1032",
          "atomic": "0",
          "push": [ ],
          "pc": "1031"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002540203e50a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203e50a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1624",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "2474",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002540203e50a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1624",
        "sp": "1",
        "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
        "trace": [
{"pc": "1624","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
        ],
        "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Frame game_umpire(g)",
          "explain": "pop argument (?thegame), assign to g, and run method \"game_umpire\"",
          "explain2": { "text": "pop argument (#+), assign to g, and run method #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "game_umpire" } ] },
          "npc": "1625",
          "fp": "1",
          "trace": [
{"pc": "1625","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1624"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1626",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1625"
        },

        {
          "code": "Push \"lock\"",
          "explain": "push constant \"lock\"",
          "explain2": { "text": "push constant \"lock\"", "args": [] },
          "npc": "1627",
          "push": [ { "type": "atom", "value": "lock" } ],
          "pc": "1626"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"lock\", ?thegame); push result (?thegame[\"lock\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "lock" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "npc": "1628",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1627"
        },

        {
          "code": "Apply PC(954)",
          "explain": "pop an argument (?thegame[\"lock\"]) and call method (954: \"acquire\")",
          "explain2": { "text": "pop an argument (#+) and call method (954: #+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "acquire" } ] },
          "npc": "954",
          "fp": "4",
          "trace": [
{"pc": "1629","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "954","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "26050" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1628"
        },

        {
          "code": "Frame acquire(binsema)",
          "explain": "pop argument (?thegame[\"lock\"]), assign to binsema, and run method \"acquire\"",
          "explain2": { "text": "pop argument (#+), assign to binsema, and run method #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "acquire" } ] },
          "npc": "955",
          "local": { "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] } ],
          "pc": "954"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002540203eaaa": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203eaaa",
          "fp": "4",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "955",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "26050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
          "trace": [
{"pc": "1629","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "955","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "2646",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002540203eaaa",
        "fp": "4",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "955",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "26050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
        "trace": [
{"pc": "1629","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "955","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "956",
          "fp": "4",
          "trace": [
{"pc": "1629","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "956","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "955"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "957",
          "readonly": "1",
          "push": [ ],
          "pc": "956"
        },

        {
          "code": "LoadVar binsema",
          "explain": "push value (?thegame[\"lock\"]) of variable \"binsema\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "binsema" } ] },
          "npc": "958",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "957"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"lock\"]) and push value (False)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "bool", "value": "False" } ] },
          "npc": "959",
          "pop": "1",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "958"
        },

        {
          "code": "1-ary not",
          "explain": "pop a value (False); logical not; push result (True)",
          "explain2": { "text": "pop a value (#+); logical not; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "960",
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "959"
        },

        {
          "code": "JumpCond False 962",
          "explain": "pop value (True), compare to False, and jump to 962 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 962 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "961",
          "pop": "1",
          "push": [ ],
          "pc": "960"
        },

        {
          "code": "Jump 965",
          "explain": "set program counter to 965",
          "explain2": { "text": "set program counter to 965", "args": [] },
          "npc": "965",
          "push": [ ],
          "pc": "961"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "966",
          "readonly": "0",
          "push": [ ],
          "pc": "965"
        },

        {
          "code": "LoadVar binsema",
          "explain": "push value (?thegame[\"lock\"]) of variable \"binsema\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "binsema" } ] },
          "npc": "967",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "966"
        },

        {
          "code": "DelVar binsema",
          "explain": "delete method variable binsema",
          "explain2": { "text": "delete method variable binsema", "args": [] },
          "npc": "968",
          "local": { },
          "push": [ ],
          "pc": "967"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "969",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "968"
        },

        {
          "code": "Store",
          "explain": "pop value (True) and address (?thegame[\"lock\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "True" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
          "npc": "970",
          "pop": "2",
          "push": [ ],
          "pc": "969"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "971",
          "atomic": "0",
          "push": [ ],
          "pc": "970"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "1629",
          "fp": "1",
          "trace": [
{"pc": "1629","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "971"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "1630",
          "pop": "1",
          "push": [ ],
          "pc": "1629"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "1631",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1630"
        },

        {
          "code": "JumpCond False 1809",
          "explain": "pop value (True), compare to False, and jump to 1809 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1809 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1632",
          "pop": "1",
          "push": [ ],
          "pc": "1631"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1633",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1632"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1634",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1633"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1635",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1634"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002540405a27a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540405a27a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1635",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
          "trace": [
{"pc": "1635","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "2767",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002540405a27a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1635",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
        "trace": [
{"pc": "1635","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"waiting\"]) and push value ([4, 2])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "1636",
          "fp": "1",
          "trace": [
{"pc": "1636","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } ],
          "pc": "1635"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([4, 2]); compute the length of the list; push result (2)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "1637",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1636"
        },

        {
          "code": "Push 2",
          "explain": "push constant 2",
          "explain2": { "text": "push constant 2", "args": [] },
          "npc": "1638",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1637"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (2, 2); check if second value is less than the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "int", "value": "2" }, { "type": "bool", "value": "False" } ] },
          "npc": "1639",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1638"
        },

        {
          "code": "JumpCond True 1656",
          "explain": "pop value (False), compare to True, and jump to 1656 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1656 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "1640",
          "pop": "1",
          "push": [ ],
          "pc": "1639"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1641",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1640"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1642",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1641"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1643",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1642"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002540405af7a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540405af7a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1643",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "1643","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "2965",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002540405af7a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1643",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "1643","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1644",
          "fp": "1",
          "trace": [
{"pc": "1644","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1643"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1645",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1644"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1646",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1645"
        },

        {
          "code": "2-ary !=",
          "explain": "pop 2 values (0, 0); check if the values are unequal; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the values are unequal; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "False" } ] },
          "npc": "1647",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1646"
        },

        {
          "code": "JumpCond True 1656",
          "explain": "pop value (False), compare to True, and jump to 1656 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1656 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "1648",
          "pop": "1",
          "push": [ ],
          "pc": "1647"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1649",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1648"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1650",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1649"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team2\", ?thegame); push result (?thegame[\"team2\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "npc": "1651",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ],
          "pc": "1650"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "100025479023b7a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025479023b7a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1651",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
          "trace": [
{"pc": "1651","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"team2\"]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "3099",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "100025479023b7a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1651",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
        "trace": [
{"pc": "1651","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"team2\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team2\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1652",
          "fp": "1",
          "trace": [
{"pc": "1652","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1651"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1653",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1652"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1654",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1653"
        },

        {
          "code": "2-ary !=",
          "explain": "pop 2 values (0, 0); check if the values are unequal; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the values are unequal; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "False" } ] },
          "npc": "1655",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1654"
        },

        {
          "code": "Jump 1657",
          "explain": "set program counter to 1657",
          "explain2": { "text": "set program counter to 1657", "args": [] },
          "npc": "1657",
          "push": [ ],
          "pc": "1655"
        },

        {
          "code": "JumpCond False 1670",
          "explain": "pop value (False), compare to False, and jump to 1670 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1670 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "1670",
          "pop": "1",
          "push": [ ],
          "pc": "1657"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1671",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1670"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1672",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1671"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1673",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1672"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002540203fa8a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203fa8a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1673",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
          "trace": [
{"pc": "1673","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "3426",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002540203fa8a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1673",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
        "trace": [
{"pc": "1673","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"waiting\"]) and push value ([4, 2])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "1674",
          "fp": "1",
          "trace": [
{"pc": "1674","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } ],
          "pc": "1673"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([4, 2]); compute the length of the list; push result (2)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "1675",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1674"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1676",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1675"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1677",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1676"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1678",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1677"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002540203faba": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540203faba",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1678",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
          "trace": [
{"pc": "1678","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "3496",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002540203faba",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1678",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
        "trace": [
{"pc": "1678","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"waiting\"]) and push value ([4, 2])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "1679",
          "fp": "1",
          "trace": [
{"pc": "1679","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } ],
          "pc": "1678"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([4, 2]); compute the length of the list; push result (2)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "1680",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1679"
        },

        {
          "code": "Push 2",
          "explain": "push constant 2",
          "explain2": { "text": "push constant 2", "args": [] },
          "npc": "1681",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1680"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (2, 2); second value modulo the first; push result (0)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "int", "value": "2" }, { "type": "int", "value": "0" } ] },
          "npc": "1682",
          "pop": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1681"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values (0, 2); the second integer minus the first; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "2" }, { "type": "int", "value": "2" } ] },
          "npc": "1683",
          "pop": "1",
          "push": [ ],
          "pc": "1682"
        },

        {
          "code": "StoreVar pairedplayers",
          "explain": "pop value (2) and store locally in variable \\\"pairedplayers\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"pairedplayers\"", "args": [ { "type": "int", "value": "2" } ] },
          "npc": "1684",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "pairedplayers": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ ],
          "pc": "1683"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1685",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1684"
        },

        {
          "code": "StoreVar i",
          "explain": "pop value (0) and store locally in variable \\\"i\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"i\"", "args": [ { "type": "int", "value": "0" } ] },
          "npc": "1686",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ ],
          "pc": "1685"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (0) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "i" } ] },
          "npc": "1687",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1686"
        },

        {
          "code": "LoadVar pairedplayers",
          "explain": "push value (2) of variable \"pairedplayers\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "pairedplayers" } ] },
          "npc": "1688",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1687"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (2, 0); check if second value is less than the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "1689",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1688"
        },

        {
          "code": "JumpCond False 1772",
          "explain": "pop value (True), compare to False, and jump to 1772 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1772 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1690",
          "pop": "1",
          "push": [ ],
          "pc": "1689"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1691",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1690"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1692",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1691"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1693",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1692"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1694",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1693"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1695",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1694"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1696",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1695"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1697",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1696"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "100025474fe5f1a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025474fe5f1a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1697",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "list", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "1697","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "3779",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "100025474fe5f1a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1697",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "list", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "1697","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1698",
          "fp": "1",
          "trace": [
{"pc": "1698","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1697"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({}, []); insert first value into the second; push result ([{}])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "set", "value": [] } ] } ] },
          "npc": "1699",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "set", "value": [] } ] } ],
          "pc": "1698"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1700",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1699"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1701",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1700"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1702",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1701"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (0) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "i" } ] },
          "npc": "1703",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1702"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?thegame[\"waiting\"]); push result (?thegame[\"waiting\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "1704",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] } ],
          "pc": "1703"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "100025474fe5faa": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025474fe5faa",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1704",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "list", "value": [{ "type": "set", "value": [] } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] }],
          "trace": [
{"pc": "1704","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"waiting\"][0]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "3872",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "100025474fe5faa",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1704",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "list", "value": [{ "type": "set", "value": [] } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] }],
        "trace": [
{"pc": "1704","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"waiting\"][0]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"waiting\"][0]) and push value (4)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "1705",
          "fp": "1",
          "trace": [
{"pc": "1705","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "1704"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (4, [{}]); insert first value into the second; push result ([{}, 4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "list", "value": [{ "type": "set", "value": [] } ] }, { "type": "list", "value": [{ "type": "set", "value": [] }, { "type": "int", "value": "4" } ] } ] },
          "npc": "1706",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "set", "value": [] }, { "type": "int", "value": "4" } ] } ],
          "pc": "1705"
        },

        {
          "code": "Apply PC(1294)",
          "explain": "pop an argument ([{}, 4]) and call method (1294: \"add\")",
          "explain2": { "text": "pop an argument (#+) and call method (1294: #+)", "args": [ { "type": "list", "value": [{ "type": "set", "value": [] }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "add" } ] },
          "npc": "1294",
          "fp": "5",
          "trace": [
{"pc": "1707","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1294","xpc": "1294","method_name": { "type": "atom", "value": "add" },
"method_arg": { "type": "list", "value": [{ "type": "set", "value": [] }, { "type": "int", "value": "4" } ] },
"method": "add({}, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 4}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "27298" }, { "type": "list", "value": [{ "type": "set", "value": [] }, { "type": "int", "value": "4" } ] } ],
          "pc": "1706"
        },

        {
          "code": "Frame add(s, elt)",
          "explain": "pop argument ([{}, 4]), assign to (s, elt), and run method \"add\"",
          "explain2": { "text": "pop argument (#+), assign to (s, elt), and run method #+", "args": [ { "type": "list", "value": [{ "type": "set", "value": [] }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "add" } ] },
          "npc": "1295",
          "local": { "elt": { "type": "int", "value": "4" }, "s": { "type": "set", "value": [] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "i" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "pairedplayers" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "1294"
        },

        {
          "code": "DelVar result",
          "explain": "delete method variable result",
          "explain2": { "text": "delete method variable result", "args": [] },
          "npc": "1296",
          "push": [ ],
          "pc": "1295"
        },

        {
          "code": "LoadVar s",
          "explain": "push value ({}) of variable \"s\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "set", "value": [] }, { "type": "atom", "value": "s" } ] },
          "npc": "1297",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1296"
        },

        {
          "code": "DelVar s",
          "explain": "delete method variable s",
          "explain2": { "text": "delete method variable s", "args": [] },
          "npc": "1298",
          "local": { "elt": { "type": "int", "value": "4" } },
          "push": [ ],
          "pc": "1297"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "1299",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1298"
        },

        {
          "code": "LoadVar elt",
          "explain": "push value (4) of variable \"elt\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "elt" } ] },
          "npc": "1300",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "1299"
        },

        {
          "code": "DelVar elt",
          "explain": "delete method variable elt",
          "explain2": { "text": "delete method variable elt", "args": [] },
          "npc": "1301",
          "local": { },
          "push": [ ],
          "pc": "1300"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (4, {}); insert first value into the second; push result ({ 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1302",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1301"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 4 }, {}); union; push result ({ 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1303",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1302"
        },

        {
          "code": "StoreVar result",
          "explain": "pop value ({ 4 }) and store locally in variable \\\"result\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"result\"", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1304",
          "local": { "result": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1303"
        },

        {
          "code": "ReturnOp(result)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1707",
          "fp": "1",
          "trace": [
{"pc": "1707","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },
          "pop": "3",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1304"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "100025474fe607a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025474fe607a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1707",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] }],
          "trace": [
{"pc": "1707","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "thegame[\"team1\"]", "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "4206",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "100025474fe607a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1707",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] }],
        "trace": [
{"pc": "1707","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "thegame[\"team1\"]", "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value ({ 4 }) and address (?thegame[\"team1\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
          "npc": "1708",
          "fp": "1",
          "trace": [
{"pc": "1708","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "1707"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1709",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1708"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1710",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1709"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1711",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1710"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1712",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1711"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1713",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1712"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1714",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1713"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1715",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1714"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "1000254770093ca": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "1000254770093ca",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1715",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "list", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "1715","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "4325",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "1000254770093ca",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1715",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "list", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "1715","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({ 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1716",
          "fp": "1",
          "trace": [
{"pc": "1716","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1715"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({ 4 }, []); insert first value into the second; push result ([{ 4 }])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] } ] },
          "npc": "1717",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] } ],
          "pc": "1716"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1718",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1717"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1719",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1718"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1720",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1719"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (0) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "i" } ] },
          "npc": "1721",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1720"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "1722",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "1721"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 0); add the integers; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" } ] },
          "npc": "1723",
          "pop": "2",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "1722"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?thegame[\"waiting\"]); push result (?thegame[\"waiting\"][1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "1724",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "1" } ] } ],
          "pc": "1723"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002540405b44a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540405b44a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1724",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "1" } ] }],
          "trace": [
{"pc": "1724","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"waiting\"][1]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "4510",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002540405b44a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1724",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "1" } ] }],
        "trace": [
{"pc": "1724","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"waiting\"][1]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"waiting\"][1]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "1725",
          "fp": "1",
          "trace": [
{"pc": "1725","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1724"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, [{ 4 }]); insert first value into the second; push result ([{ 4 }, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] } ] },
          "npc": "1726",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "1725"
        },

        {
          "code": "Apply PC(1294)",
          "explain": "pop an argument ([{ 4 }, 2]) and call method (1294: \"add\")",
          "explain2": { "text": "pop an argument (#+) and call method (1294: #+)", "args": [ { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "add" } ] },
          "npc": "1294",
          "fp": "5",
          "trace": [
{"pc": "1727","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1294","xpc": "1294","method_name": { "type": "atom", "value": "add" },
"method_arg": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] },
"method": "add({ 4 }, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 4}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "27618" }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "1726"
        },

        {
          "code": "Frame add(s, elt)",
          "explain": "pop argument ([{ 4 }, 2]), assign to (s, elt), and run method \"add\"",
          "explain2": { "text": "pop argument (#+), assign to (s, elt), and run method #+", "args": [ { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "add" } ] },
          "npc": "1295",
          "local": { "elt": { "type": "int", "value": "2" }, "s": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "i" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "pairedplayers" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "1294"
        },

        {
          "code": "DelVar result",
          "explain": "delete method variable result",
          "explain2": { "text": "delete method variable result", "args": [] },
          "npc": "1296",
          "push": [ ],
          "pc": "1295"
        },

        {
          "code": "LoadVar s",
          "explain": "push value ({ 4 }) of variable \"s\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "atom", "value": "s" } ] },
          "npc": "1297",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1296"
        },

        {
          "code": "DelVar s",
          "explain": "delete method variable s",
          "explain2": { "text": "delete method variable s", "args": [] },
          "npc": "1298",
          "local": { "elt": { "type": "int", "value": "2" } },
          "push": [ ],
          "pc": "1297"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "1299",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1298"
        },

        {
          "code": "LoadVar elt",
          "explain": "push value (2) of variable \"elt\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "elt" } ] },
          "npc": "1300",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1299"
        },

        {
          "code": "DelVar elt",
          "explain": "delete method variable elt",
          "explain2": { "text": "delete method variable elt", "args": [] },
          "npc": "1301",
          "local": { },
          "push": [ ],
          "pc": "1300"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "1302",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "1301"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 2 }, { 4 }); union; push result ({ 2, 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "1303",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "1302"
        },

        {
          "code": "StoreVar result",
          "explain": "pop value ({ 2, 4 }) and store locally in variable \\\"result\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"result\"", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "1304",
          "local": { "result": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1303"
        },

        {
          "code": "ReturnOp(result)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "1727",
          "fp": "1",
          "trace": [
{"pc": "1727","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },
          "pop": "3",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "1304"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002540001007a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540001007a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1727",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }],
          "trace": [
{"pc": "1727","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "thegame[\"team1\"]", "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "4607",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002540001007a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1727",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }],
        "trace": [
{"pc": "1727","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "thegame[\"team1\"]", "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value ({ 2, 4 }) and address (?thegame[\"team1\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
          "npc": "1728",
          "fp": "1",
          "trace": [
{"pc": "1728","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "1727"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1729",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1728"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1730",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1729"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team2\", ?thegame); push result (?thegame[\"team2\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "npc": "1731",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ],
          "pc": "1730"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1732",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1731"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1733",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1732"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1734",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1733"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team2\", ?thegame); push result (?thegame[\"team2\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "npc": "1735",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ],
          "pc": "1734"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002547d06fb9a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002547d06fb9a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1735",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "list", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
          "trace": [
{"pc": "1735","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"team2\"]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "4747",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002547d06fb9a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1735",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "list", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
        "trace": [
{"pc": "1735","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"team2\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team2\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1736",
          "fp": "1",
          "trace": [
{"pc": "1736","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1735"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({}, []); insert first value into the second; push result ([{}])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "set", "value": [] } ] } ] },
          "npc": "1737",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "set", "value": [] } ] } ],
          "pc": "1736"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1738",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1737"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1739",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1738"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1740",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1739"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (0) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "i" } ] },
          "npc": "1741",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1740"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?thegame[\"waiting\"]); push result (?thegame[\"waiting\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "1742",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] } ],
          "pc": "1741"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "100025477009d7a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025477009d7a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1742",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "list", "value": [{ "type": "set", "value": [] } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] }],
          "trace": [
{"pc": "1742","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"waiting\"][0]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "4960",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "100025477009d7a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1742",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "list", "value": [{ "type": "set", "value": [] } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] }],
        "trace": [
{"pc": "1742","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"waiting\"][0]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"waiting\"][0]) and push value (4)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "1743",
          "fp": "1",
          "trace": [
{"pc": "1743","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "1742"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (4, [{}]); insert first value into the second; push result ([{}, 4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "list", "value": [{ "type": "set", "value": [] } ] }, { "type": "list", "value": [{ "type": "set", "value": [] }, { "type": "int", "value": "4" } ] } ] },
          "npc": "1744",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "set", "value": [] }, { "type": "int", "value": "4" } ] } ],
          "pc": "1743"
        },

        {
          "code": "Apply PC(1294)",
          "explain": "pop an argument ([{}, 4]) and call method (1294: \"add\")",
          "explain2": { "text": "pop an argument (#+) and call method (1294: #+)", "args": [ { "type": "list", "value": [{ "type": "set", "value": [] }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "add" } ] },
          "npc": "1294",
          "fp": "5",
          "trace": [
{"pc": "1745","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1294","xpc": "1294","method_name": { "type": "atom", "value": "add" },
"method_arg": { "type": "list", "value": [{ "type": "set", "value": [] }, { "type": "int", "value": "4" } ] },
"method": "add({}, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 4}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "27906" }, { "type": "list", "value": [{ "type": "set", "value": [] }, { "type": "int", "value": "4" } ] } ],
          "pc": "1744"
        },

        {
          "code": "Frame add(s, elt)",
          "explain": "pop argument ([{}, 4]), assign to (s, elt), and run method \"add\"",
          "explain2": { "text": "pop argument (#+), assign to (s, elt), and run method #+", "args": [ { "type": "list", "value": [{ "type": "set", "value": [] }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "add" } ] },
          "npc": "1295",
          "local": { "elt": { "type": "int", "value": "4" }, "s": { "type": "set", "value": [] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "i" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "pairedplayers" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "1294"
        },

        {
          "code": "DelVar result",
          "explain": "delete method variable result",
          "explain2": { "text": "delete method variable result", "args": [] },
          "npc": "1296",
          "push": [ ],
          "pc": "1295"
        },

        {
          "code": "LoadVar s",
          "explain": "push value ({}) of variable \"s\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "set", "value": [] }, { "type": "atom", "value": "s" } ] },
          "npc": "1297",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1296"
        },

        {
          "code": "DelVar s",
          "explain": "delete method variable s",
          "explain2": { "text": "delete method variable s", "args": [] },
          "npc": "1298",
          "local": { "elt": { "type": "int", "value": "4" } },
          "push": [ ],
          "pc": "1297"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "1299",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1298"
        },

        {
          "code": "LoadVar elt",
          "explain": "push value (4) of variable \"elt\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "elt" } ] },
          "npc": "1300",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "1299"
        },

        {
          "code": "DelVar elt",
          "explain": "delete method variable elt",
          "explain2": { "text": "delete method variable elt", "args": [] },
          "npc": "1301",
          "local": { },
          "push": [ ],
          "pc": "1300"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (4, {}); insert first value into the second; push result ({ 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1302",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1301"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 4 }, {}); union; push result ({ 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1303",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1302"
        },

        {
          "code": "StoreVar result",
          "explain": "pop value ({ 4 }) and store locally in variable \\\"result\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"result\"", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1304",
          "local": { "result": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1303"
        },

        {
          "code": "ReturnOp(result)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1745",
          "fp": "1",
          "trace": [
{"pc": "1745","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },
          "pop": "3",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1304"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "100025477009f0a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025477009f0a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1745",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] }],
          "trace": [
{"pc": "1745","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "thegame[\"team2\"]", "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "5284",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "100025477009f0a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1745",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] }],
        "trace": [
{"pc": "1745","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "thegame[\"team2\"]", "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value ({ 4 }) and address (?thegame[\"team2\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
          "npc": "1746",
          "fp": "1",
          "trace": [
{"pc": "1746","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "1745"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1747",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1746"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1748",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1747"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team2\", ?thegame); push result (?thegame[\"team2\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "npc": "1749",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ],
          "pc": "1748"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1750",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1749"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1751",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1750"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1752",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1751"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team2\", ?thegame); push result (?thegame[\"team2\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "npc": "1753",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ],
          "pc": "1752"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002547902484a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002547902484a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1753",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "list", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
          "trace": [
{"pc": "1753","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"team2\"]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "5356",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002547902484a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1753",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "list", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
        "trace": [
{"pc": "1753","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"team2\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team2\"]) and push value ({ 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1754",
          "fp": "1",
          "trace": [
{"pc": "1754","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1753"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({ 4 }, []); insert first value into the second; push result ([{ 4 }])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] } ] },
          "npc": "1755",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] } ],
          "pc": "1754"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1756",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1755"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1757",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1756"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1758",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1757"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (0) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "i" } ] },
          "npc": "1759",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1758"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "1760",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "1759"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 0); add the integers; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" } ] },
          "npc": "1761",
          "pop": "2",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "1760"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?thegame[\"waiting\"]); push result (?thegame[\"waiting\"][1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "1762",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "1" } ] } ],
          "pc": "1761"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002547700a4ca": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002547700a4ca",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1762",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "1" } ] }],
          "trace": [
{"pc": "1762","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"waiting\"][1]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "5598",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002547700a4ca",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1762",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "1" } ] }],
        "trace": [
{"pc": "1762","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"waiting\"][1]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"waiting\"][1]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "1763",
          "fp": "1",
          "trace": [
{"pc": "1763","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1762"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, [{ 4 }]); insert first value into the second; push result ([{ 4 }, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] } ] },
          "npc": "1764",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "1763"
        },

        {
          "code": "Apply PC(1294)",
          "explain": "pop an argument ([{ 4 }, 2]) and call method (1294: \"add\")",
          "explain2": { "text": "pop an argument (#+) and call method (1294: #+)", "args": [ { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "add" } ] },
          "npc": "1294",
          "fp": "5",
          "trace": [
{"pc": "1765","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1294","xpc": "1294","method_name": { "type": "atom", "value": "add" },
"method_arg": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] },
"method": "add({ 4 }, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 4}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "28226" }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "1764"
        },

        {
          "code": "Frame add(s, elt)",
          "explain": "pop argument ([{ 4 }, 2]), assign to (s, elt), and run method \"add\"",
          "explain2": { "text": "pop argument (#+), assign to (s, elt), and run method #+", "args": [ { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "add" } ] },
          "npc": "1295",
          "local": { "elt": { "type": "int", "value": "2" }, "s": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "i" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "pairedplayers" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "1294"
        },

        {
          "code": "DelVar result",
          "explain": "delete method variable result",
          "explain2": { "text": "delete method variable result", "args": [] },
          "npc": "1296",
          "push": [ ],
          "pc": "1295"
        },

        {
          "code": "LoadVar s",
          "explain": "push value ({ 4 }) of variable \"s\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "atom", "value": "s" } ] },
          "npc": "1297",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1296"
        },

        {
          "code": "DelVar s",
          "explain": "delete method variable s",
          "explain2": { "text": "delete method variable s", "args": [] },
          "npc": "1298",
          "local": { "elt": { "type": "int", "value": "2" } },
          "push": [ ],
          "pc": "1297"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "1299",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1298"
        },

        {
          "code": "LoadVar elt",
          "explain": "push value (2) of variable \"elt\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "elt" } ] },
          "npc": "1300",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1299"
        },

        {
          "code": "DelVar elt",
          "explain": "delete method variable elt",
          "explain2": { "text": "delete method variable elt", "args": [] },
          "npc": "1301",
          "local": { },
          "push": [ ],
          "pc": "1300"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "1302",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "1301"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 2 }, { 4 }); union; push result ({ 2, 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "1303",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "1302"
        },

        {
          "code": "StoreVar result",
          "explain": "pop value ({ 2, 4 }) and store locally in variable \\\"result\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"result\"", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "1304",
          "local": { "result": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1303"
        },

        {
          "code": "ReturnOp(result)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "1765",
          "fp": "1",
          "trace": [
{"pc": "1765","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },
          "pop": "3",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "1304"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002540001073a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540001073a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1765",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }],
          "trace": [
{"pc": "1765","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "thegame[\"team2\"]", "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "5804",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002540001073a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1765",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }],
        "trace": [
{"pc": "1765","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "thegame[\"team2\"]", "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value ({ 2, 4 }) and address (?thegame[\"team2\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
          "npc": "1766",
          "fp": "1",
          "trace": [
{"pc": "1766","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "1765"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (0) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "i" } ] },
          "npc": "1767",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1766"
        },

        {
          "code": "DelVar i",
          "explain": "delete method variable i",
          "explain2": { "text": "delete method variable i", "args": [] },
          "npc": "1768",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "pairedplayers": { "type": "int", "value": "2" } },
          "push": [ ],
          "pc": "1767"
        },

        {
          "code": "Push 2",
          "explain": "push constant 2",
          "explain2": { "text": "push constant 2", "args": [] },
          "npc": "1769",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1768"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (2, 0); add the integers; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "int", "value": "0" }, { "type": "int", "value": "2" } ] },
          "npc": "1770",
          "pop": "2",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1769"
        },

        {
          "code": "StoreVar i",
          "explain": "pop value (2) and store locally in variable \\\"i\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"i\"", "args": [ { "type": "int", "value": "2" } ] },
          "npc": "1771",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "i": { "type": "int", "value": "2" }, "pairedplayers": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ ],
          "pc": "1770"
        },

        {
          "code": "Jump 1686",
          "explain": "set program counter to 1686",
          "explain2": { "text": "set program counter to 1686", "args": [] },
          "npc": "1686",
          "push": [ ],
          "pc": "1771"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (2) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "i" } ] },
          "npc": "1687",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1686"
        },

        {
          "code": "LoadVar pairedplayers",
          "explain": "push value (2) of variable \"pairedplayers\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "pairedplayers" } ] },
          "npc": "1688",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1687"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (2, 2); check if second value is less than the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "int", "value": "2" }, { "type": "bool", "value": "False" } ] },
          "npc": "1689",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1688"
        },

        {
          "code": "JumpCond False 1772",
          "explain": "pop value (False), compare to False, and jump to 1772 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1772 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "1772",
          "pop": "1",
          "push": [ ],
          "pc": "1689"
        },

        {
          "code": "DelVar i",
          "explain": "delete method variable i",
          "explain2": { "text": "delete method variable i", "args": [] },
          "npc": "1773",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "pairedplayers": { "type": "int", "value": "2" } },
          "push": [ ],
          "pc": "1772"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1774",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1773"
        },

        {
          "code": "StoreVar j",
          "explain": "pop value (0) and store locally in variable \\\"j\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"j\"", "args": [ { "type": "int", "value": "0" } ] },
          "npc": "1775",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "j": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ ],
          "pc": "1774"
        },

        {
          "code": "LoadVar j",
          "explain": "push value (0) of variable \"j\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "j" } ] },
          "npc": "1776",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1775"
        },

        {
          "code": "LoadVar pairedplayers",
          "explain": "push value (2) of variable \"pairedplayers\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "pairedplayers" } ] },
          "npc": "1777",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1776"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (2, 0); check if second value is less than the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "1778",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1777"
        },

        {
          "code": "JumpCond False 1791",
          "explain": "pop value (True), compare to False, and jump to 1791 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1791 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1779",
          "pop": "1",
          "push": [ ],
          "pc": "1778"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1780",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1779"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1781",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1780"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1782",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1781"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1783",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1782"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?thegame[\"waiting\"]); push result (?thegame[\"waiting\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "1784",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] } ],
          "pc": "1783"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002540204062a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540204062a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1784",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] }],
          "trace": [
{"pc": "1784","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "j": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Del" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "5992",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002540204062a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1784",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] }],
        "trace": [
{"pc": "1784","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "j": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Del" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Del",
          "explain": "pop an address and delete the shared variable at the address",
          "explain2": { "text": "pop an address and delete the shared variable at the address", "args": [] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "2" } ] } } ] } },
          "npc": "1785",
          "fp": "1",
          "trace": [
{"pc": "1785","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "j": { "type": "int", "value": "0" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ ],
          "pc": "1784"
        },

        {
          "code": "LoadVar j",
          "explain": "push value (0) of variable \"j\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "j" } ] },
          "npc": "1786",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1785"
        },

        {
          "code": "DelVar j",
          "explain": "delete method variable j",
          "explain2": { "text": "delete method variable j", "args": [] },
          "npc": "1787",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "pairedplayers": { "type": "int", "value": "2" } },
          "push": [ ],
          "pc": "1786"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "1788",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "1787"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 0); add the integers; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" } ] },
          "npc": "1789",
          "pop": "2",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "1788"
        },

        {
          "code": "StoreVar j",
          "explain": "pop value (1) and store locally in variable \\\"j\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"j\"", "args": [ { "type": "int", "value": "1" } ] },
          "npc": "1790",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "j": { "type": "int", "value": "1" }, "pairedplayers": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ ],
          "pc": "1789"
        },

        {
          "code": "Jump 1775",
          "explain": "set program counter to 1775",
          "explain2": { "text": "set program counter to 1775", "args": [] },
          "npc": "1775",
          "push": [ ],
          "pc": "1790"
        },

        {
          "code": "LoadVar j",
          "explain": "push value (1) of variable \"j\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "j" } ] },
          "npc": "1776",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "1775"
        },

        {
          "code": "LoadVar pairedplayers",
          "explain": "push value (2) of variable \"pairedplayers\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "pairedplayers" } ] },
          "npc": "1777",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1776"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (2, 1); check if second value is less than the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "bool", "value": "True" } ] },
          "npc": "1778",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1777"
        },

        {
          "code": "JumpCond False 1791",
          "explain": "pop value (True), compare to False, and jump to 1791 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1791 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1779",
          "pop": "1",
          "push": [ ],
          "pc": "1778"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1780",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1779"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1781",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1780"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1782",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1781"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1783",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1782"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?thegame[\"waiting\"]); push result (?thegame[\"waiting\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "1784",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] } ],
          "pc": "1783"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "100025474fe724a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025474fe724a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1784",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] }],
          "trace": [
{"pc": "1784","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "j": { "type": "int", "value": "1" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Del" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "6136",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "2" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "100025474fe724a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1784",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" }, { "type": "int", "value": "0" } ] }],
        "trace": [
{"pc": "1784","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "j": { "type": "int", "value": "1" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Del" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Del",
          "explain": "pop an address and delete the shared variable at the address",
          "explain2": { "text": "pop an address and delete the shared variable at the address", "args": [] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
          "npc": "1785",
          "fp": "1",
          "trace": [
{"pc": "1785","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "j": { "type": "int", "value": "1" }, "pairedplayers": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ ],
          "pc": "1784"
        },

        {
          "code": "LoadVar j",
          "explain": "push value (1) of variable \"j\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "j" } ] },
          "npc": "1786",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "1785"
        },

        {
          "code": "DelVar j",
          "explain": "delete method variable j",
          "explain2": { "text": "delete method variable j", "args": [] },
          "npc": "1787",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "pairedplayers": { "type": "int", "value": "2" } },
          "push": [ ],
          "pc": "1786"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "1788",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "1787"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 1); add the integers; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] },
          "npc": "1789",
          "pop": "2",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1788"
        },

        {
          "code": "StoreVar j",
          "explain": "pop value (2) and store locally in variable \\\"j\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"j\"", "args": [ { "type": "int", "value": "2" } ] },
          "npc": "1790",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "j": { "type": "int", "value": "2" }, "pairedplayers": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ ],
          "pc": "1789"
        },

        {
          "code": "Jump 1775",
          "explain": "set program counter to 1775",
          "explain2": { "text": "set program counter to 1775", "args": [] },
          "npc": "1775",
          "push": [ ],
          "pc": "1790"
        },

        {
          "code": "LoadVar j",
          "explain": "push value (2) of variable \"j\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "j" } ] },
          "npc": "1776",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1775"
        },

        {
          "code": "LoadVar pairedplayers",
          "explain": "push value (2) of variable \"pairedplayers\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "pairedplayers" } ] },
          "npc": "1777",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1776"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (2, 2); check if second value is less than the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "int", "value": "2" }, { "type": "bool", "value": "False" } ] },
          "npc": "1778",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1777"
        },

        {
          "code": "JumpCond False 1791",
          "explain": "pop value (False), compare to False, and jump to 1791 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1791 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "1791",
          "pop": "1",
          "push": [ ],
          "pc": "1778"
        },

        {
          "code": "DelVar j",
          "explain": "delete method variable j",
          "explain2": { "text": "delete method variable j", "args": [] },
          "npc": "1792",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "pairedplayers": { "type": "int", "value": "2" } },
          "push": [ ],
          "pc": "1791"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1793",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1792"
        },

        {
          "code": "Push \"game_headcount\"",
          "explain": "push constant \"game_headcount\"",
          "explain2": { "text": "push constant \"game_headcount\"", "args": [] },
          "npc": "1794",
          "push": [ { "type": "atom", "value": "game_headcount" } ],
          "pc": "1793"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"game_headcount\", ?thegame); push result (?thegame[\"game_headcount\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "game_headcount" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "game_headcount" } ] } ] },
          "npc": "1795",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "game_headcount" } ] } ],
          "pc": "1794"
        },

        {
          "code": "LoadVar pairedplayers",
          "explain": "push value (2) of variable \"pairedplayers\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "pairedplayers" } ] },
          "npc": "1796",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1795"
        },

        {
          "code": "DelVar pairedplayers",
          "explain": "delete method variable pairedplayers",
          "explain2": { "text": "delete method variable pairedplayers", "args": [] },
          "npc": "1797",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "push": [ ],
          "pc": "1796"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "100025400010c6a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025400010c6a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1797",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "game_headcount" } ] }, { "type": "int", "value": "2" }],
          "trace": [
{"pc": "1797","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "thegame[\"game_headcount\"]", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "6298",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "100025400010c6a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1797",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "game_headcount" } ] }, { "type": "int", "value": "2" }],
        "trace": [
{"pc": "1797","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "thegame[\"game_headcount\"]", "value": { "type": "int", "value": "2" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value (2) and address (?thegame[\"game_headcount\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "game_headcount" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
          "npc": "1798",
          "fp": "1",
          "trace": [
{"pc": "1798","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "1797"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1799",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1798"
        },

        {
          "code": "Push \"exited\"",
          "explain": "push constant \"exited\"",
          "explain2": { "text": "push constant \"exited\"", "args": [] },
          "npc": "1800",
          "push": [ { "type": "atom", "value": "exited" } ],
          "pc": "1799"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"exited\", ?thegame); push result (?thegame[\"exited\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "exited" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] } ] },
          "npc": "1801",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] } ],
          "pc": "1800"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1802",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1801"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002547b05140a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002547b05140a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1802",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] }, { "type": "list", "value": [] }],
          "trace": [
{"pc": "1802","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "thegame[\"exited\"]", "value": { "type": "list", "value": [] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "6315",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002547b05140a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1802",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] }, { "type": "list", "value": [] }],
        "trace": [
{"pc": "1802","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "thegame[\"exited\"]", "value": { "type": "list", "value": [] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value ([]) and address (?thegame[\"exited\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "list", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] } ] },
          "npc": "1803",
          "fp": "1",
          "trace": [
{"pc": "1803","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "1802"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1804",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1803"
        },

        {
          "code": "Push \"players\"",
          "explain": "push constant \"players\"",
          "explain2": { "text": "push constant \"players\"", "args": [] },
          "npc": "1805",
          "push": [ { "type": "atom", "value": "players" } ],
          "pc": "1804"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"players\", ?thegame); push result (?thegame[\"players\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "players" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] },
          "npc": "1806",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1805"
        },

        {
          "code": "Apply PC(1097)",
          "explain": "pop an argument (?thegame[\"players\"]) and call method (1097: \"notifyAll\")",
          "explain2": { "text": "pop an argument (#+) and call method (1097: #+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "atom", "value": "notifyAll" } ] },
          "npc": "1097",
          "fp": "4",
          "trace": [
{"pc": "1807","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1097","xpc": "1097","method_name": { "type": "atom", "value": "notifyAll" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] },
"method": "notifyAll(?thegame[\"players\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "28898" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1806"
        },

        {
          "code": "Frame notifyAll(c)",
          "explain": "pop argument (?thegame[\"players\"]), assign to c, and run method \"notifyAll\"",
          "explain2": { "text": "pop argument (#+), assign to c, and run method #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "atom", "value": "notifyAll" } ] },
          "npc": "1098",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] } ],
          "pc": "1097"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002540405c7aa": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540405c7aa",
          "fp": "4",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1098",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "28898" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
          "trace": [
{"pc": "1807","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1098","xpc": "1097","method_name": { "type": "atom", "value": "notifyAll" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] },
"method": "notifyAll(?thegame[\"players\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } },"sp": 3}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "6476",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002540405c7aa",
        "fp": "4",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1098",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "28898" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
        "trace": [
{"pc": "1807","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1098","xpc": "1097","method_name": { "type": "atom", "value": "notifyAll" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] },
"method": "notifyAll(?thegame[\"players\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } },"sp": 3}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "1099",
          "fp": "4",
          "trace": [
{"pc": "1807","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1099","xpc": "1097","method_name": { "type": "atom", "value": "notifyAll" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] },
"method": "notifyAll(?thegame[\"players\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } },"sp": 3}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "1098"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"players\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1100",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1099"
        },

        {
          "code": "DelVar c",
          "explain": "delete method variable c",
          "explain2": { "text": "delete method variable c", "args": [] },
          "npc": "1101",
          "local": { },
          "push": [ ],
          "pc": "1100"
        },

        {
          "code": "Push PC(541)",
          "explain": "push program counter constant 541 ()",
          "explain2": { "text": "push program counter constant 541 ()", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "1102",
          "push": [ { "type": "pc", "value": "541" } ],
          "pc": "1101"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1103",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1102"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([], PC(541)); push result (?PC(541)[[]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "pc", "value": "541" }, { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ] },
          "npc": "1104",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ],
          "pc": "1103"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([]) and call method (541: \"empty\")",
          "explain2": { "text": "pop an argument (#+) and call method (541: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "empty" } ] },
          "npc": "541",
          "fp": "8",
          "trace": [
{"pc": "1807","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1105","xpc": "1097","method_name": { "type": "atom", "value": "notifyAll" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] },
"method": "notifyAll(?thegame[\"players\"])","calltype": "normal","vars":{ },"sp": 3},{"pc": "541","xpc": "541","method_name": { "type": "atom", "value": "empty" },
"method_arg": { "type": "list", "value": [] },
"method": "empty()","calltype": "normal","vars":{ },"sp": 7}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "17666" }, { "type": "list", "value": [] } ],
          "pc": "1104"
        },

        {
          "code": "Frame empty()",
          "explain": "pop argument () and run method \"empty\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "542",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "541"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "543",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "542"
        },

        {
          "code": "StoreVar bg",
          "explain": "pop value ({:}) and store locally in variable \\\"bg\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"bg\"", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "544",
          "local": { "bg": { "type": "dict", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "543"
        },

        {
          "code": "ReturnOp(bg)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "1105",
          "fp": "4",
          "trace": [
{"pc": "1807","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1105","xpc": "1097","method_name": { "type": "atom", "value": "notifyAll" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] },
"method": "notifyAll(?thegame[\"players\"])","calltype": "normal","vars":{ },"sp": 3}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "544"
        },

        {
          "code": "Store",
          "explain": "pop value ({:}) and address (?thegame[\"players\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
          "npc": "1106",
          "pop": "2",
          "push": [ ],
          "pc": "1105"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "1107",
          "atomic": "0",
          "push": [ ],
          "pc": "1106"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "1807",
          "fp": "1",
          "trace": [
{"pc": "1807","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "1107"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "1808",
          "pop": "1",
          "push": [ ],
          "pc": "1807"
        },

        {
          "code": "Jump 1630",
          "explain": "set program counter to 1630",
          "explain2": { "text": "set program counter to 1630", "args": [] },
          "npc": "1630",
          "push": [ ],
          "pc": "1808"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "1631",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1630"
        },

        {
          "code": "JumpCond False 1809",
          "explain": "pop value (True), compare to False, and jump to 1809 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1809 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1632",
          "pop": "1",
          "push": [ ],
          "pc": "1631"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1633",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1632"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1634",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1633"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1635",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1634"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002540405a27a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002540405a27a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1635",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
          "trace": [
{"pc": "1635","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "6647",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002540405a27a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1635",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
        "trace": [
{"pc": "1635","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"waiting\"]) and push value ([])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [] } ] },
          "npc": "1636",
          "fp": "1",
          "trace": [
{"pc": "1636","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1635"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([]); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1637",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1636"
        },

        {
          "code": "Push 2",
          "explain": "push constant 2",
          "explain2": { "text": "push constant 2", "args": [] },
          "npc": "1638",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1637"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (2, 0); check if second value is less than the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "1639",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1638"
        },

        {
          "code": "JumpCond True 1656",
          "explain": "pop value (True), compare to True, and jump to 1656 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1656 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] },
          "npc": "1656",
          "pop": "1",
          "push": [ ],
          "pc": "1639"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "1657",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1656"
        },

        {
          "code": "JumpCond False 1670",
          "explain": "pop value (True), compare to False, and jump to 1670 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1670 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1658",
          "pop": "1",
          "push": [ ],
          "pc": "1657"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1659",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1658"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1660",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1659"
        },

        {
          "code": "Push \"active_game\"",
          "explain": "push constant \"active_game\"",
          "explain2": { "text": "push constant \"active_game\"", "args": [] },
          "npc": "1661",
          "push": [ { "type": "atom", "value": "active_game" } ],
          "pc": "1660"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"active_game\", ?thegame); push result (?thegame[\"active_game\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "active_game" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ] },
          "npc": "1662",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ],
          "pc": "1661"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?thegame[\"active_game\"], []); insert first value into the second; push result ([?thegame[\"active_game\"]])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ] } ] },
          "npc": "1663",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ] } ],
          "pc": "1662"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1664",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1663"
        },

        {
          "code": "Push \"lock\"",
          "explain": "push constant \"lock\"",
          "explain2": { "text": "push constant \"lock\"", "args": [] },
          "npc": "1665",
          "push": [ { "type": "atom", "value": "lock" } ],
          "pc": "1664"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"lock\", ?thegame); push result (?thegame[\"lock\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "lock" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "npc": "1666",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1665"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?thegame[\"lock\"], [?thegame[\"active_game\"]]); insert first value into the second; push result ([?thegame[\"active_game\"], ?thegame[\"lock\"]])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] } ] },
          "npc": "1667",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] } ],
          "pc": "1666"
        },

        {
          "code": "Apply PC(998)",
          "explain": "pop an argument ([?thegame[\"active_game\"], ?thegame[\"lock\"]]) and call method (998: \"wait\")",
          "explain2": { "text": "pop an argument (#+) and call method (998: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] }, { "type": "atom", "value": "wait" } ] },
          "npc": "998",
          "fp": "4",
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "998","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "26674" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] } ],
          "pc": "1667"
        },

        {
          "code": "Frame wait(c, lk)",
          "explain": "pop argument ([?thegame[\"active_game\"], ?thegame[\"lock\"]]), assign to (c, lk), and run method \"wait\"",
          "explain2": { "text": "pop argument (#+), assign to (c, lk), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] }, { "type": "atom", "value": "wait" } ] },
          "npc": "999",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] } ],
          "pc": "998"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1000",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "999"
        },

        {
          "code": "StoreVar cnt",
          "explain": "pop value (0) and store locally in variable \\\"cnt\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"cnt\"", "args": [ { "type": "int", "value": "0" } ] },
          "npc": "1001",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1000"
        },

        {
          "code": "DelVar cnt",
          "explain": "delete method variable cnt",
          "explain2": { "text": "delete method variable cnt", "args": [] },
          "npc": "1002",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "push": [ ],
          "pc": "1001"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1003",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1002"
        },

        {
          "code": "Save",
          "explain": "pop a value and save context",
          "explain2": { "text": "pop a value and save context", "args": [] },
          "npc": "1004",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] } ],
          "pc": "1003"
        },

        {
          "code": "Continue",
          "explain": "a no-op, must follow a Stop or Save operation",
          "explain2": { "text": "a no-op, must follow a Stop or Save operation", "args": [] },
          "npc": "1005",
          "push": [ ],
          "pc": "1004"
        },

        {
          "code": "StoreVar ((), ctx)",
          "explain": "pop value ([[], CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"active_game\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=1,sp=4,STACK[{:},[],26674,{ \"g\": ?thegame }])]) and store locally in variable \\\"((), ctx)\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"((), ctx)\"", "args": [ { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] } ] },
          "npc": "1006",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1005"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "10002547d06e2ca": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10002547d06e2ca",
          "fp": "4",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1006",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "26674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1006","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "6699",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10002547d06e2ca",
        "fp": "4",
        "name": "game_umpire(?thegame)",
        "entry": "1624",
        "pc": "1006",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "26674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
        "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1006","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "1007",
          "fp": "4",
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1007","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "1006"
        },

        {
          "code": "Push PC(605)",
          "explain": "push constant PC(605)",
          "explain2": { "text": "push constant PC(605)", "args": [] },
          "npc": "1008",
          "push": [ { "type": "pc", "value": "605" } ],
          "pc": "1007"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1009",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1008"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"active_game\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1010",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ],
          "pc": "1009"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"active_game\"]) and push value ({:})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "dict", "value": [] } ] },
          "npc": "1011",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1010"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({:}, []); insert first value into the second; push result ([{:}])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "dict", "value": [] } ] } ] },
          "npc": "1012",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [] } ] } ],
          "pc": "1011"
        },

        {
          "code": "LoadVar ctx",
          "explain": "push value (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"active_game\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=1,sp=4,STACK[{:},[],26674,{ \"g\": ?thegame }])) of variable \"ctx\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, { "type": "atom", "value": "ctx" } ] },
          "npc": "1013",
          "push": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ],
          "pc": "1012"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"active_game\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=1,sp=4,STACK[{:},[],26674,{ \"g\": ?thegame }]), [{:}]); insert first value into the second; push result ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"active_game\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=1,sp=4,STACK[{:},[],26674,{ \"g\": ?thegame }])])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, { "type": "list", "value": [{ "type": "dict", "value": [] } ] }, { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] } ] },
          "npc": "1014",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] } ],
          "pc": "1013"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"active_game\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=1,sp=4,STACK[{:},[],26674,{ \"g\": ?thegame }])], PC(605)); push result (?PC(605)[[{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"active_game\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=1,sp=4,STACK[{:},[],26674,{ \"g\": ?thegame }])]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] }, { "type": "pc", "value": "605" }, { "type": "address", "func": { "type": "pc", "value": "605" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] } ] } ] },
          "npc": "1015",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "605" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] } ] } ],
          "pc": "1014"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"active_game\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=1,sp=4,STACK[{:},[],26674,{ \"g\": ?thegame }])]) and call method (605: \"multiplicity\")",
          "explain2": { "text": "pop an argument (#+) and call method (605: #+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] }, { "type": "atom", "value": "multiplicity" } ] },
          "npc": "605",
          "fp": "7",
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1016","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3},{"pc": "605","xpc": "605","method_name": { "type": "atom", "value": "multiplicity" },
"method_arg": { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] },
"method": "multiplicity({:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"active_game\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=1,sp=4,STACK[{:},[],26674,{ \"g\": ?thegame }]))","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "16242" }, { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] } ],
          "pc": "1015"
        },

        {
          "code": "Frame multiplicity(bg, elt)",
          "explain": "start of method multiplicity",
          "explain2": { "text": "start of method multiplicity", "args": [] },
          "npc": "1016",
          "fp": "4",
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1016","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "pop": "3",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "605"
        },

        {
          "code": "StoreVar cnt",
          "explain": "pop value (0) and store locally in variable \\\"cnt\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"cnt\"", "args": [ { "type": "int", "value": "0" } ] },
          "npc": "1017",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1016"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"active_game\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1018",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ],
          "pc": "1017"
        },

        {
          "code": "Push PC(696)",
          "explain": "push constant PC(696)",
          "explain2": { "text": "push constant PC(696)", "args": [] },
          "npc": "1019",
          "push": [ { "type": "pc", "value": "696" } ],
          "pc": "1018"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1020",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1019"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"active_game\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1021",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ],
          "pc": "1020"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"active_game\"]) and push value ({:})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "dict", "value": [] } ] },
          "npc": "1022",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1021"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({:}, []); insert first value into the second; push result ([{:}])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "dict", "value": [] } ] } ] },
          "npc": "1023",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [] } ] } ],
          "pc": "1022"
        },

        {
          "code": "LoadVar ctx",
          "explain": "push value (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"active_game\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=1,sp=4,STACK[{:},[],26674,{ \"g\": ?thegame }])) of variable \"ctx\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, { "type": "atom", "value": "ctx" } ] },
          "npc": "1024",
          "push": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ],
          "pc": "1023"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"active_game\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=1,sp=4,STACK[{:},[],26674,{ \"g\": ?thegame }]), [{:}]); insert first value into the second; push result ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"active_game\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=1,sp=4,STACK[{:},[],26674,{ \"g\": ?thegame }])])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, { "type": "list", "value": [{ "type": "dict", "value": [] } ] }, { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] } ] },
          "npc": "1025",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] } ],
          "pc": "1024"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"active_game\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=1,sp=4,STACK[{:},[],26674,{ \"g\": ?thegame }])], PC(696)); push result (?PC(696)[[{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"active_game\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=1,sp=4,STACK[{:},[],26674,{ \"g\": ?thegame }])]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] }, { "type": "pc", "value": "696" }, { "type": "address", "func": { "type": "pc", "value": "696" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] } ] } ] },
          "npc": "1026",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "696" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] } ] } ],
          "pc": "1025"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"active_game\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=1,sp=4,STACK[{:},[],26674,{ \"g\": ?thegame }])]) and call method (696: \"add\")",
          "explain2": { "text": "pop an argument (#+) and call method (696: #+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] }, { "type": "atom", "value": "add" } ] },
          "npc": "696",
          "fp": "8",
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1027","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3},{"pc": "696","xpc": "696","method_name": { "type": "atom", "value": "add" },
"method_arg": { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] },
"method": "add({:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"active_game\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=1,sp=4,STACK[{:},[],26674,{ \"g\": ?thegame }]))","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 7}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "16418" }, { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } } ] } ],
          "pc": "1026"
        },

        {
          "code": "Frame add(bg, elt)",
          "explain": "start of method add",
          "explain2": { "text": "start of method add", "args": [] },
          "npc": "1027",
          "fp": "4",
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1027","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "696"
        },

        {
          "code": "Store",
          "explain": "pop value ({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"active_game\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=1,sp=4,STACK[{:},[],26674,{ \"g\": ?thegame }]): 1 }) and address (?thegame[\"active_game\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
          "npc": "1028",
          "pop": "2",
          "push": [ ],
          "pc": "1027"
        },

        {
          "code": "LoadVar lk",
          "explain": "push value (?thegame[\"lock\"]) of variable \"lk\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "lk" } ] },
          "npc": "1029",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1028"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "1030",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1029"
        },

        {
          "code": "Store",
          "explain": "pop value (False) and address (?thegame[\"lock\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "False" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
          "npc": "1031",
          "pop": "2",
          "push": [ ],
          "pc": "1030"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "1032",
          "atomic": "0",
          "push": [ ],
          "pc": "1031"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547902345a": "1",
          "2547b04e55a": "1",
          "100025474fe52ba": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025474fe52ba",
          "fp": "4",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1032",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "26674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547902345a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "6904",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2547902345a",
        "fp": "7",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1032",
        "sp": "7",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "1033",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1033","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "1032"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "1034",
          "readonly": "1",
          "push": [ ],
          "pc": "1033"
        },

        {
          "code": "LoadVar lk",
          "explain": "push value (?thegame[\"lock\"]) of variable \"lk\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "lk" } ] },
          "npc": "1035",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1034"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"lock\"]) and push value (False)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "bool", "value": "False" } ] },
          "npc": "1036",
          "pop": "1",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1035"
        },

        {
          "code": "1-ary not",
          "explain": "pop a value (False); logical not; push result (True)",
          "explain2": { "text": "pop a value (#+); logical not; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "1037",
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1036"
        },

        {
          "code": "JumpCond False 1050",
          "explain": "pop value (True), compare to False, and jump to 1050 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1050 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1038",
          "pop": "1",
          "push": [ ],
          "pc": "1037"
        },

        {
          "code": "Push PC(605)",
          "explain": "push constant PC(605)",
          "explain2": { "text": "push constant PC(605)", "args": [] },
          "npc": "1039",
          "push": [ { "type": "pc", "value": "605" } ],
          "pc": "1038"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1040",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1039"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"players\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1041",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1040"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"players\"]) and push value ({:})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "dict", "value": [] } ] },
          "npc": "1042",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1041"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({:}, []); insert first value into the second; push result ([{:}])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "dict", "value": [] } ] } ] },
          "npc": "1043",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [] } ] } ],
          "pc": "1042"
        },

        {
          "code": "LoadVar ctx",
          "explain": "push value (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }])) of variable \"ctx\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "atom", "value": "ctx" } ] },
          "npc": "1044",
          "push": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ],
          "pc": "1043"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]), [{:}]); insert first value into the second; push result ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }])])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "list", "value": [{ "type": "dict", "value": [] } ] }, { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] },
          "npc": "1045",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1044"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }])], PC(605)); push result (?PC(605)[[{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }])]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "pc", "value": "605" }, { "type": "address", "func": { "type": "pc", "value": "605" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ] },
          "npc": "1046",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "605" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ],
          "pc": "1045"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }])]) and call method (605: \"multiplicity\")",
          "explain2": { "text": "pop an argument (#+) and call method (605: #+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "atom", "value": "multiplicity" } ] },
          "npc": "605",
          "fp": "10",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1047","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6},{"pc": "605","xpc": "605","method_name": { "type": "atom", "value": "multiplicity" },
"method_arg": { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] },
"method": "multiplicity({:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],33410,{ \"id\": 4 },[],30514,{ \"g\": ?thegame, \"id\": 4 }]))","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 9}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "16738" }, { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1046"
        },

        {
          "code": "Frame multiplicity(bg, elt)",
          "explain": "start of method multiplicity",
          "explain2": { "text": "start of method multiplicity", "args": [] },
          "npc": "1047",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1047","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "pop": "3",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "605"
        },

        {
          "code": "LoadVar cnt",
          "explain": "push value (0) of variable \"cnt\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "cnt" } ] },
          "npc": "1048",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1047"
        },

        {
          "code": "2-ary <=",
          "explain": "pop 2 values (0, 0); check if second value is less than or equal to the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than or equal to the first; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "1049",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1048"
        },

        {
          "code": "Jump 1051",
          "explain": "set program counter to 1051",
          "explain2": { "text": "set program counter to 1051", "args": [] },
          "npc": "1051",
          "push": [ ],
          "pc": "1049"
        },

        {
          "code": "JumpCond False 1056",
          "explain": "pop value (True), compare to False, and jump to 1056 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1056 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1052",
          "pop": "1",
          "push": [ ],
          "pc": "1051"
        },

        {
          "code": "DelVar c",
          "explain": "delete method variable c",
          "explain2": { "text": "delete method variable c", "args": [] },
          "npc": "1053",
          "local": { "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "push": [ ],
          "pc": "1052"
        },

        {
          "code": "DelVar cnt",
          "explain": "delete method variable cnt",
          "explain2": { "text": "delete method variable cnt", "args": [] },
          "npc": "1054",
          "local": { "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "push": [ ],
          "pc": "1053"
        },

        {
          "code": "DelVar ctx",
          "explain": "delete method variable ctx",
          "explain2": { "text": "delete method variable ctx", "args": [] },
          "npc": "1055",
          "local": { "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "push": [ ],
          "pc": "1054"
        },

        {
          "code": "Jump 1059",
          "explain": "set program counter to 1059",
          "explain2": { "text": "set program counter to 1059", "args": [] },
          "npc": "1059",
          "push": [ ],
          "pc": "1055"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "1060",
          "readonly": "0",
          "push": [ ],
          "pc": "1059"
        },

        {
          "code": "LoadVar lk",
          "explain": "push value (?thegame[\"lock\"]) of variable \"lk\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "lk" } ] },
          "npc": "1061",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1060"
        },

        {
          "code": "DelVar lk",
          "explain": "delete method variable lk",
          "explain2": { "text": "delete method variable lk", "args": [] },
          "npc": "1062",
          "local": { },
          "push": [ ],
          "pc": "1061"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "1063",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1062"
        },

        {
          "code": "Store",
          "explain": "pop value (True) and address (?thegame[\"lock\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "True" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
          "npc": "1064",
          "pop": "2",
          "push": [ ],
          "pc": "1063"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "1065",
          "atomic": "0",
          "push": [ ],
          "pc": "1064"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "1908",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "1065"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "1909",
          "pop": "1",
          "push": [ ],
          "pc": "1908"
        },

        {
          "code": "Jump 1858",
          "explain": "set program counter to 1858",
          "explain2": { "text": "set program counter to 1858", "args": [] },
          "npc": "1858",
          "push": [ ],
          "pc": "1909"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1859",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1858"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1860",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1859"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1861",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1860"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "25474fe534a": "1",
          "2547b04e55a": "1",
          "100025474fe52ba": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025474fe52ba",
          "fp": "4",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1032",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "26674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "25474fe534a",
          "fp": "4",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1861",
          "sp": "5",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1861","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "6959",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "25474fe534a",
        "fp": "4",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1861",
        "sp": "5",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1861","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({ 2, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "1862",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1862","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "1861"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({ 2, 4 }); compute cardinality; push result (2)",
          "explain2": { "text": "pop a value (#+); compute cardinality; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "1863",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1862"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1864",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1863"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1865",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1864"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team2\", ?thegame); push result (?thegame[\"team2\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "npc": "1866",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ],
          "pc": "1865"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "25474fe7ffa": "1",
          "2547b04e55a": "1",
          "100025474fe52ba": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025474fe52ba",
          "fp": "4",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1032",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "26674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "25474fe7ffa",
          "fp": "4",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1866",
          "sp": "6",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1866","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team2\"]" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "7048",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "25474fe7ffa",
        "fp": "4",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1866",
        "sp": "6",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1866","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team2\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team2\"]) and push value ({ 2, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "1867",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1867","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "1866"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({ 2, 4 }); compute cardinality; push result (2)",
          "explain2": { "text": "pop a value (#+); compute cardinality; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "1868",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1867"
        },

        {
          "code": "2-ary !=",
          "explain": "pop 2 values (2, 2); check if the values are unequal; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the values are unequal; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "int", "value": "2" }, { "type": "bool", "value": "False" } ] },
          "npc": "1869",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1868"
        },

        {
          "code": "JumpCond True 1896",
          "explain": "pop value (False), compare to True, and jump to 1896 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1896 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "1870",
          "pop": "1",
          "push": [ ],
          "pc": "1869"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1871",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1870"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1872",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1871"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1873",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1872"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547b04e26a": "1",
          "2547b04e55a": "1",
          "100025474fe52ba": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025474fe52ba",
          "fp": "4",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1032",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "26674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547b04e26a",
          "fp": "4",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1873",
          "sp": "5",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1873","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "7259",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2547b04e26a",
        "fp": "4",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1873",
        "sp": "5",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1873","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({ 2, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "1874",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1874","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "1873"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({ 2, 4 }); compute cardinality; push result (2)",
          "explain2": { "text": "pop a value (#+); compute cardinality; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "1875",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1874"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1876",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1875"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (0, 2); check if both values are the same; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "2" }, { "type": "bool", "value": "False" } ] },
          "npc": "1877",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1876"
        },

        {
          "code": "JumpCond True 1896",
          "explain": "pop value (False), compare to True, and jump to 1896 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1896 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "1878",
          "pop": "1",
          "push": [ ],
          "pc": "1877"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (4) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "id" } ] },
          "npc": "1879",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "1878"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1880",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1879"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1881",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1880"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1882",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1881"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547b04e55a": "1",
          "2547d07115a": "1",
          "100025474fe52ba": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025474fe52ba",
          "fp": "4",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1032",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "26674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547d07115a",
          "fp": "4",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1882",
          "sp": "6",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "int", "value": "4" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1882","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "7359",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2547d07115a",
        "fp": "4",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1882",
        "sp": "6",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "int", "value": "4" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1882","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({ 2, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "1883",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1883","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "1882"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 2, 4 }, 4); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "4" }, { "type": "bool", "value": "True" } ] },
          "npc": "1884",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1883"
        },

        {
          "code": "1-ary not",
          "explain": "pop a value (True); logical not; push result (False)",
          "explain2": { "text": "pop a value (#+); logical not; push result (#+)", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1885",
          "pop": "1",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1884"
        },

        {
          "code": "JumpCond False 1894",
          "explain": "pop value (False), compare to False, and jump to 1894 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1894 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "1894",
          "pop": "1",
          "push": [ ],
          "pc": "1885"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "1895",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1894"
        },

        {
          "code": "Jump 1897",
          "explain": "set program counter to 1897",
          "explain2": { "text": "set program counter to 1897", "args": [] },
          "npc": "1897",
          "push": [ ],
          "pc": "1895"
        },

        {
          "code": "JumpCond False 1910",
          "explain": "pop value (False), compare to False, and jump to 1910 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1910 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "1910",
          "pop": "1",
          "push": [ ],
          "pc": "1897"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1911",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1910"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1912",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1911"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1913",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1912"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1914",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1913"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "25474fe879a": "1",
          "2547b04e55a": "1",
          "100025474fe52ba": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025474fe52ba",
          "fp": "4",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1032",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "26674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "25474fe879a",
          "fp": "4",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1914",
          "sp": "6",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1914","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "7545",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "25474fe879a",
        "fp": "4",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1914",
        "sp": "6",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1914","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({ 2, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "1915",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1915","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "1914"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({ 2, 4 }, []); insert first value into the second; push result ([{ 2, 4 }])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } ] },
          "npc": "1916",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } ],
          "pc": "1915"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1917",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1916"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1918",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1917"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team2\", ?thegame); push result (?thegame[\"team2\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "npc": "1919",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ],
          "pc": "1918"
        }

      ],
      "ctxbag": {
          "2540001209a": "1",
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547b04e55a": "1",
          "100025474fe52ba": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025474fe52ba",
          "fp": "4",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1032",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "26674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2540001209a",
          "fp": "4",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1919",
          "sp": "6",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1919","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team2\"]" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "7607",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2540001209a",
        "fp": "4",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1919",
        "sp": "6",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1919","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team2\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team2\"]) and push value ({ 2, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "1920",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1920","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "1919"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({ 2, 4 }, [{ 2, 4 }]); insert first value into the second; push result ([{ 2, 4 }, { 2, 4 }])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] }, { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } ] },
          "npc": "1921",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } ],
          "pc": "1920"
        },

        {
          "code": "StoreVar teams",
          "explain": "pop value ([{ 2, 4 }, { 2, 4 }]) and store locally in variable \\\"teams\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"teams\"", "args": [ { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } ] },
          "npc": "1922",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1921"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1923",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1922"
        },

        {
          "code": "Push \"exited\"",
          "explain": "push constant \"exited\"",
          "explain2": { "text": "push constant \"exited\"", "args": [] },
          "npc": "1924",
          "push": [ { "type": "atom", "value": "exited" } ],
          "pc": "1923"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"exited\", ?thegame); push result (?thegame[\"exited\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "exited" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] } ] },
          "npc": "1925",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] } ],
          "pc": "1924"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1926",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1925"
        },

        {
          "code": "Push \"exited\"",
          "explain": "push constant \"exited\"",
          "explain2": { "text": "push constant \"exited\"", "args": [] },
          "npc": "1927",
          "push": [ { "type": "atom", "value": "exited" } ],
          "pc": "1926"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"exited\", ?thegame); push result (?thegame[\"exited\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "exited" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] } ] },
          "npc": "1928",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] } ],
          "pc": "1927"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "25474fe903a": "1",
          "2547b04e55a": "1",
          "100025474fe52ba": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025474fe52ba",
          "fp": "4",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1032",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "26674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "25474fe903a",
          "fp": "4",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1928",
          "sp": "6",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1928","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"exited\"]" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "7767",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "25474fe903a",
        "fp": "4",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1928",
        "sp": "6",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1928","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"exited\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"exited\"]) and push value ([])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] }, { "type": "list", "value": [] } ] },
          "npc": "1929",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1929","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1928"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1930",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1929"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (4) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "id" } ] },
          "npc": "1931",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "1930"
        },

        {
          "code": "DelVar id",
          "explain": "delete method variable id",
          "explain2": { "text": "delete method variable id", "args": [] },
          "npc": "1932",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },
          "push": [ ],
          "pc": "1931"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (4, []); insert first value into the second; push result ([4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1933",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1932"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values ([4], []); concatenate the lists; push result ([4])",
          "explain2": { "text": "pop 2 values (#+, #+); concatenate the lists; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1934",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1933"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547b04e55a": "1",
          "2547d071d9a": "1",
          "100025474fe52ba": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025474fe52ba",
          "fp": "4",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1032",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "26674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547d071d9a",
          "fp": "4",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1934",
          "sp": "6",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1934","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3}
          ],
          "next": { "type": "Store", "var": "thegame[\"exited\"]", "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "7945",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2547d071d9a",
        "fp": "4",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1934",
        "sp": "6",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1934","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3}
        ],
        "next": { "type": "Store", "var": "thegame[\"exited\"]", "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value ([4]) and address (?thegame[\"exited\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "exited" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
          "npc": "1935",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1935","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "1934"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1936",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1935"
        },

        {
          "code": "Push \"complete_game\"",
          "explain": "push constant \"complete_game\"",
          "explain2": { "text": "push constant \"complete_game\"", "args": [] },
          "npc": "1937",
          "push": [ { "type": "atom", "value": "complete_game" } ],
          "pc": "1936"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"complete_game\", ?thegame); push result (?thegame[\"complete_game\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "complete_game" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] } ] },
          "npc": "1938",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] } ],
          "pc": "1937"
        },

        {
          "code": "Apply PC(1097)",
          "explain": "pop an argument (?thegame[\"complete_game\"]) and call method (1097: \"notifyAll\")",
          "explain2": { "text": "pop an argument (#+) and call method (1097: #+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] }, { "type": "atom", "value": "notifyAll" } ] },
          "npc": "1097",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1939","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3},{"pc": "1097","xpc": "1097","method_name": { "type": "atom", "value": "notifyAll" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] },
"method": "notifyAll(?thegame[\"complete_game\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 6}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "31010" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] } ],
          "pc": "1938"
        },

        {
          "code": "Frame notifyAll(c)",
          "explain": "pop argument (?thegame[\"complete_game\"]), assign to c, and run method \"notifyAll\"",
          "explain2": { "text": "pop argument (#+), assign to c, and run method #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] }, { "type": "atom", "value": "notifyAll" } ] },
          "npc": "1098",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "teams" }, "value": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } } ] } ],
          "pc": "1097"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2540405db5a": "1",
          "2547b04e55a": "1",
          "100025474fe52ba": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025474fe52ba",
          "fp": "4",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1032",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "26674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2540405db5a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "1098",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "31010" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "teams" }, "value": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1939","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3},{"pc": "1098","xpc": "1097","method_name": { "type": "atom", "value": "notifyAll" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] },
"method": "notifyAll(?thegame[\"complete_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "8032",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2540405db5a",
        "fp": "7",
        "name": "player(4)",
        "entry": "2082",
        "pc": "1098",
        "sp": "7",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "31010" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "teams" }, "value": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1939","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3},{"pc": "1098","xpc": "1097","method_name": { "type": "atom", "value": "notifyAll" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] },
"method": "notifyAll(?thegame[\"complete_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] } },"sp": 6}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "1099",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1939","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3},{"pc": "1099","xpc": "1097","method_name": { "type": "atom", "value": "notifyAll" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] },
"method": "notifyAll(?thegame[\"complete_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] } },"sp": 6}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "1098"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"complete_game\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1100",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] } ],
          "pc": "1099"
        },

        {
          "code": "DelVar c",
          "explain": "delete method variable c",
          "explain2": { "text": "delete method variable c", "args": [] },
          "npc": "1101",
          "local": { },
          "push": [ ],
          "pc": "1100"
        },

        {
          "code": "Push PC(541)",
          "explain": "push program counter constant 541 ()",
          "explain2": { "text": "push program counter constant 541 ()", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "1102",
          "push": [ { "type": "pc", "value": "541" } ],
          "pc": "1101"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1103",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1102"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([], PC(541)); push result (?PC(541)[[]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "pc", "value": "541" }, { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ] },
          "npc": "1104",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ],
          "pc": "1103"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([]) and call method (541: \"empty\")",
          "explain2": { "text": "pop an argument (#+) and call method (541: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "empty" } ] },
          "npc": "541",
          "fp": "11",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1939","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3},{"pc": "1105","xpc": "1097","method_name": { "type": "atom", "value": "notifyAll" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] },
"method": "notifyAll(?thegame[\"complete_game\"])","calltype": "normal","vars":{ },"sp": 6},{"pc": "541","xpc": "541","method_name": { "type": "atom", "value": "empty" },
"method_arg": { "type": "list", "value": [] },
"method": "empty()","calltype": "normal","vars":{ },"sp": 10}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "17666" }, { "type": "list", "value": [] } ],
          "pc": "1104"
        },

        {
          "code": "Frame empty()",
          "explain": "pop argument () and run method \"empty\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "542",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "541"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "543",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "542"
        },

        {
          "code": "StoreVar bg",
          "explain": "pop value ({:}) and store locally in variable \\\"bg\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"bg\"", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "544",
          "local": { "bg": { "type": "dict", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "543"
        },

        {
          "code": "ReturnOp(bg)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "1105",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1939","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3},{"pc": "1105","xpc": "1097","method_name": { "type": "atom", "value": "notifyAll" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] },
"method": "notifyAll(?thegame[\"complete_game\"])","calltype": "normal","vars":{ },"sp": 6}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "544"
        },

        {
          "code": "Store",
          "explain": "pop value ({:}) and address (?thegame[\"complete_game\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "complete_game" } ] } ] },
          "npc": "1106",
          "pop": "2",
          "push": [ ],
          "pc": "1105"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "1107",
          "atomic": "0",
          "push": [ ],
          "pc": "1106"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "1939",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1939","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "1107"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "1940",
          "pop": "1",
          "push": [ ],
          "pc": "1939"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1941",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1940"
        },

        {
          "code": "DelVar g",
          "explain": "delete method variable g",
          "explain2": { "text": "delete method variable g", "args": [] },
          "npc": "1942",
          "local": { "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },
          "push": [ ],
          "pc": "1941"
        },

        {
          "code": "Push \"lock\"",
          "explain": "push constant \"lock\"",
          "explain2": { "text": "push constant \"lock\"", "args": [] },
          "npc": "1943",
          "push": [ { "type": "atom", "value": "lock" } ],
          "pc": "1942"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"lock\", ?thegame); push result (?thegame[\"lock\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "lock" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "npc": "1944",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1943"
        },

        {
          "code": "Apply PC(973)",
          "explain": "pop an argument (?thegame[\"lock\"]) and call method (973: \"release\")",
          "explain2": { "text": "pop an argument (#+) and call method (973: #+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "release" } ] },
          "npc": "973",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1945","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3},{"pc": "973","xpc": "973","method_name": { "type": "atom", "value": "release" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "release(?thegame[\"lock\"])","calltype": "normal","vars":{ "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 6}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "31106" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1944"
        },

        {
          "code": "Frame release(binsema)",
          "explain": "pop argument (?thegame[\"lock\"]), assign to binsema, and run method \"release\"",
          "explain2": { "text": "pop argument (#+), assign to binsema, and run method #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "release" } ] },
          "npc": "974",
          "local": { "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "teams" }, "value": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } } ] } ],
          "pc": "973"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547b04e55a": "1",
          "2547d07219a": "1",
          "100025474fe52ba": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025474fe52ba",
          "fp": "4",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1032",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "26674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547d07219a",
          "fp": "7",
          "name": "player(4)",
          "entry": "2082",
          "pc": "974",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "31106" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "teams" }, "value": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1945","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3},{"pc": "974","xpc": "973","method_name": { "type": "atom", "value": "release" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "release(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "8192",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "2547d07219a",
        "fp": "7",
        "name": "player(4)",
        "entry": "2082",
        "pc": "974",
        "sp": "7",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "31106" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "teams" }, "value": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } } ] }],
        "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1945","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3},{"pc": "974","xpc": "973","method_name": { "type": "atom", "value": "release" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "release(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "975",
          "fp": "7",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1945","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3},{"pc": "975","xpc": "973","method_name": { "type": "atom", "value": "release" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "release(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "974"
        },

        {
          "code": "AtomicInc(lazy)",
          "explain": "increment atomic counter from 1 to 2: remains atomic",
          "explain2": { "text": "increment atomic counter from 1 to 2: remains atomic", "args": [ ] },
          "npc": "976",
          "atomic": "2",
          "push": [ ],
          "pc": "975"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "977",
          "readonly": "1",
          "push": [ ],
          "pc": "976"
        },

        {
          "code": "LoadVar binsema",
          "explain": "push value (?thegame[\"lock\"]) of variable \"binsema\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "binsema" } ] },
          "npc": "978",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "977"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"lock\"]) and push value (True)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "bool", "value": "True" } ] },
          "npc": "979",
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "978"
        },

        {
          "code": "Assert",
          "explain": "pop a value (True); do not raise exception",
          "explain2": { "text": "pop a value (True); do not raise exception", "args": [ ] },
          "npc": "980",
          "pop": "1",
          "push": [ ],
          "pc": "979"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "981",
          "readonly": "0",
          "push": [ ],
          "pc": "980"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 2 to 1: remains atomic",
          "explain2": { "text": "decrement atomic counter from 2 to 1: remains atomic", "args": [ ] },
          "npc": "982",
          "atomic": "1",
          "push": [ ],
          "pc": "981"
        },

        {
          "code": "LoadVar binsema",
          "explain": "push value (?thegame[\"lock\"]) of variable \"binsema\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "binsema" } ] },
          "npc": "983",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "982"
        },

        {
          "code": "DelVar binsema",
          "explain": "delete method variable binsema",
          "explain2": { "text": "delete method variable binsema", "args": [] },
          "npc": "984",
          "local": { },
          "push": [ ],
          "pc": "983"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "985",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "984"
        },

        {
          "code": "Store",
          "explain": "pop value (False) and address (?thegame[\"lock\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "False" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "complete_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "exited" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "game_headcount" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
          "npc": "986",
          "pop": "2",
          "push": [ ],
          "pc": "985"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "987",
          "atomic": "0",
          "push": [ ],
          "pc": "986"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "1945",
          "fp": "4",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1945","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },"sp": 3}
          ],
          "local": { "teams": { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "987"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "1946",
          "pop": "1",
          "push": [ ],
          "pc": "1945"
        },

        {
          "code": "ReturnOp(teams)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } ] },
          "npc": "2089",
          "fp": "1",
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0}
          ],
          "local": { "id": { "type": "int", "value": "4" } },
          "pop": "3",
          "push": [ { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } ],
          "pc": "1946"
        },

        {
          "code": "StoreVar (team1, team2)",
          "explain": "pop value ([{ 2, 4 }, { 2, 4 }]) and store locally in variable \\\"(team1, team2)\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"(team1, team2)\"", "args": [ { "type": "list", "value": [{ "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] } ] },
          "npc": "2090",
          "local": { "id": { "type": "int", "value": "4" }, "team1": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, "team2": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "2089"
        },

        {
          "code": "AtomicInc(lazy)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "2091",
          "atomic": "1",
          "push": [ ],
          "pc": "2090"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "2092",
          "readonly": "1",
          "push": [ ],
          "pc": "2091"
        },

        {
          "code": "LoadVar team1",
          "explain": "push value ({ 2, 4 }) of variable \"team1\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "team1" } ] },
          "npc": "2093",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "2092"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({ 2, 4 }); compute cardinality; push result (2)",
          "explain2": { "text": "pop a value (#+); compute cardinality; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "2094",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "2093"
        },

        {
          "code": "LoadVar team2",
          "explain": "push value ({ 2, 4 }) of variable \"team2\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "team2" } ] },
          "npc": "2095",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "2094"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({ 2, 4 }); compute cardinality; push result (2)",
          "explain2": { "text": "pop a value (#+); compute cardinality; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "2096",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "2095"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (2, 2); check if both values are the same; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "int", "value": "2" }, { "type": "bool", "value": "True" } ] },
          "npc": "2097",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "2096"
        },

        {
          "code": "Assert",
          "explain": "pop a value (True); do not raise exception",
          "explain2": { "text": "pop a value (True); do not raise exception", "args": [ ] },
          "npc": "2098",
          "pop": "1",
          "push": [ ],
          "pc": "2097"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "2099",
          "readonly": "0",
          "push": [ ],
          "pc": "2098"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "2100",
          "atomic": "0",
          "push": [ ],
          "pc": "2099"
        },

        {
          "code": "AtomicInc(lazy)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "2101",
          "atomic": "1",
          "push": [ ],
          "pc": "2100"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "2102",
          "readonly": "1",
          "push": [ ],
          "pc": "2101"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (4) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "id" } ] },
          "npc": "2103",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "2102"
        },

        {
          "code": "LoadVar team1",
          "explain": "push value ({ 2, 4 }) of variable \"team1\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "team1" } ] },
          "npc": "2104",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "2103"
        },

        {
          "code": "LoadVar team2",
          "explain": "push value ({ 2, 4 }) of variable \"team2\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "team2" } ] },
          "npc": "2105",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "2104"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 2, 4 }, { 2, 4 }); union; push result ({ 2, 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "2106",
          "pop": "1",
          "push": [ ],
          "pc": "2105"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 2, 4 }, 4); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "4" }, { "type": "bool", "value": "True" } ] },
          "npc": "2107",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "2106"
        },

        {
          "code": "Assert",
          "explain": "pop a value (True); do not raise exception",
          "explain2": { "text": "pop a value (True); do not raise exception", "args": [ ] },
          "npc": "2108",
          "pop": "1",
          "push": [ ],
          "pc": "2107"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "2109",
          "readonly": "0",
          "push": [ ],
          "pc": "2108"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "2110",
          "atomic": "0",
          "push": [ ],
          "pc": "2109"
        },

        {
          "code": "AtomicInc(lazy)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "2111",
          "atomic": "1",
          "push": [ ],
          "pc": "2110"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "2112",
          "readonly": "1",
          "push": [ ],
          "pc": "2111"
        },

        {
          "code": "LoadVar team1",
          "explain": "push value ({ 2, 4 }) of variable \"team1\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "team1" } ] },
          "npc": "2113",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "2112"
        },

        {
          "code": "DelVar team1",
          "explain": "delete method variable team1",
          "explain2": { "text": "delete method variable team1", "args": [] },
          "npc": "2114",
          "local": { "id": { "type": "int", "value": "4" }, "team2": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } },
          "push": [ ],
          "pc": "2113"
        },

        {
          "code": "LoadVar team2",
          "explain": "push value ({ 2, 4 }) of variable \"team2\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "team2" } ] },
          "npc": "2115",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "2114"
        },

        {
          "code": "DelVar team2",
          "explain": "delete method variable team2",
          "explain2": { "text": "delete method variable team2", "args": [] },
          "npc": "2116",
          "local": { "id": { "type": "int", "value": "4" } },
          "push": [ ],
          "pc": "2115"
        },

        {
          "code": "2-ary &",
          "explain": "pop 2 values ({ 2, 4 }, { 2, 4 }); intersect the sets; push result ({ 2, 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); intersect the sets; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "2117",
          "pop": "1",
          "push": [ ],
          "pc": "2116"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({ 2, 4 }); compute cardinality; push result (2)",
          "explain2": { "text": "pop a value (#+); compute cardinality; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "2118",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "2117"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "2119",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "2118"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (0, 2); check if both values are the same; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "2" }, { "type": "bool", "value": "False" } ] },
          "npc": "2120",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "2119"
        },

        {
          "code": "Assert",
          "explain": "pop a value (False) and raise exception",
          "explain2": { "text": "pop a value (False) and raise exception", "args": [ ] },
          "npc": "2120",
          "failure": "Harmony assertion failed",
          "mode": "failed",
          "pop": "1",
          "push": [ ],
          "pc": "2120"
        }

      ],
      "ctxbag": {
          "2540203e5aa": "1",
          "2540203e68a": "1",
          "2547700ca9a": "1",
          "2547b04e55a": "1",
          "100025474fe52ba": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2540203e72a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "2151",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "2151","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100025474fe52ba",
          "fp": "4",
          "name": "game_umpire(?thegame)",
          "entry": "1624",
          "pc": "1032",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "26674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
          "trace": [
{"pc": "1668","xpc": "1624","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"active_game\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"eternal": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "4" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "2540203e5aa",
          "fp": "1",
          "name": "player(1)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "2547b04e55a",
          "fp": "7",
          "name": "player(2)",
          "entry": "2082",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "33410" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "30514" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "2" } } ] }],
          "trace": [
{"pc": "2089","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ "id": { "type": "int", "value": "2" } },"sp": 0},{"pc": "1908","xpc": "1817","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "2" } ] },
"method": "game_join(?thegame, 2)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "2" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "2540203e68a",
          "fp": "1",
          "name": "player(3)",
          "entry": "2082",
          "pc": "2082",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "2082","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "2547700ca9a",
          "fp": "1",
          "name": "player(4)",
          "entry": "2082",
          "pc": "2120",
          "sp": "1",
          "stack": [{ "type": "dict", "value": [] }],
          "trace": [
{"pc": "2120","xpc": "2082","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0}
          ],
          "failure": "Harmony assertion failed",
          "this": { "type": "dict", "value": [] },
          "atomic": "1",
          "readonly": "1",
          "mode": "failed"
        }
      ]
    }

  ]
}
