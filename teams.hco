{
  "nstates": 39177,
  "issue": "Safety violation",
  "hvm": {
    "modules": {
        "bag": {
            "file": "/Users/katherineheatzig/Library/Python/3.12/lib/python/site-packages/harmony_model_checker/modules/bag.hny",
            "lines": [
                "def empty() returns bg:",
                "    bg = {:}",
                "",
                "def fromSet(s) returns bg:",
                "    bg = { elt:1 for elt in s }",
                "",
                "def fromList(a) returns bg:",
                "    bg = {:}",
                "    for v in a:",
                "        if v in bg:",
                "            bg[v] += 1",
                "        else:",
                "            bg[v] = 1",
                "",
                "builtin multiplicity \"bag$multiplicity\"",
                "def multiplicity(bg, elt) returns count:",
                "    if elt in bg:",
                "        count = bg[elt]",
                "    else:",
                "        count = 0",
                "",
                "builtin size \"bag$size\"",
                "def size(bg) returns count:",
                "    count = 0",
                "    for _:c in bg:",
                "        count += c",
                "",
                "builtin bmin \"bag$bmin\"",
                "def bmin(bg) returns count:",
                "    assert bg != {:}",
                "    count = min(keys(bg))",
                "",
                "builtin bmax \"bag$bmax\"",
                "def bmax(bg) returns count:",
                "    assert bg != {:}",
                "    count = max(keys(bg))",
                "",
                "def bchoose(bg) returns elt:",
                "    elt = choose(keys(bg))",
                "",
                "builtin add \"bag$add\"",
                "def add(bg, elt) returns result:",
                "    result = bg",
                "    if elt in result:",
                "        result[elt] += 1",
                "    else:",
                "        result[elt] = 1",
                "",
                "builtin remove \"bag$remove\"",
                "def remove(bg, elt) returns result:",
                "    result = bg",
                "    if elt in result:",
                "        assert result[elt] > 0",
                "        result[elt] -= 1",
                "        if result[elt] == 0:",
                "            del result[elt]",
                "",
                "# Return set of all subbags of bg of size k",
                "def combinations(bg, k) returns result:",
                "    if k == 0:",
                "        result = { {:} }",
                "    else:",
                "        let n = size(bg):",
                "            if k > n:",
                "                result = {}",
                "            elif k == n:",
                "                result = { bg }",
                "            else:",
                "                let hd = bmin(bg) let tl = remove(bg, hd):",
                "                    result = { add(x, hd) for x in combinations(tl, k - 1) }",
                "                                | combinations(tl, k)"
              ],
            "identifiers": {
                "tl": "local-const",
                "fromSet": "constant",
                "x": "local-const",
                "empty": "constant",
                "multiplicity": "constant",
                "size": "constant",
                "n": "local-const",
                "k": "local-const",
                "hd": "local-const",
                "a": "local-const",
                "bmax": "constant",
                "add": "constant",
                "c": "local-const",
                "combinations": "constant",
                "elt": "local-const",
                "this": "local-var",
                "remove": "constant",
                "v": "local-const",
                "s": "local-const",
                "___": "___",
                "fromList": "constant",
                "bchoose": "constant",
                "bmin": "constant",
                "bg": "local-const"
              }
          },
        "game": {
            "file": "game.hny",
            "lines": [
                "from synch import *",
                "",
                "",
                "def Game() returns game:",
                "    game = { .waiting: [], .team1: {}, .team2: {}, .lock: Lock(), ",
                "            .active_game: Condition(), .players: Condition()}",
                "",
                "def game_umpire(g):",
                "    acquire(?g->lock)",
                "    while True:",
                "        ",
                "        # If there's an active game, wait for it to finish",
                "        while (len(g->waiting) < 2) or (len(g->team1) != 0) or (len(g->team2) != 0):",
                "            wait(?g->active_game, ?g->lock)",
                "       ",
                "       #let gives me an error here on the next line",
                "        let number_to_pair = len(g->waiting) - (len(g->waiting) % 2):",
                "",
                "            g -> team1 = []",
                "            g -> team2 = []",
                "",
                "",
                "            for i in range(0, number_to_pair, 2):",
                "                if i < number_to_pair:",
                "                    g->team1.append(g->waiting[i])",
                "                if (i + 1) < number_to_pair:",
                "                    g->team2.append(g->waiting[i + 1])",
                "",
                "            # Create a new waiting list excluding the players who have been paired",
                "            #harmony gives me errors ",
                "            let new_waiting = []:",
                "                for i in range(number_to_pair, len(g->waiting)):",
                "                    new_waiting.append(g->waiting[i])",
                "",
                "                g->waiting = new_waiting",
                "",
                "        # Signal players to start the game",
                "        notifyAll(?g->players)",
                "    release(?g->lock)",
                "",
                "",
                "def game_join(g, id):",
                "    acquire(?g->lock)",
                "    # Add player to waiting list",
                "    g->waiting = g->waiting + [id,]",
                "",
                "    # If teams are empty (game complete), signal umpire to make new teams",
                "    if (len(g->team1) == 0) and (len(g->team2) == 0):",
                "        notify(?g->active_game)",
                "    ",
                "    # Wait for the game to start, don't enter unless one team has no players, team sizes uneven,",
                "    # or player is not on either team yet",
                "    while (len(g->team1) == 0) or (len(g->team1) != len(g->team2)) or ((id not in g->team1) and (id not in g->team2)):",
                "        wait(?g->players, ?g->lock)",
                "",
                "    # Return tuple of teams (no return statement)?",
                "    teams = (g->team1, g->team2)",
                "",
                "    release(?g->lock)",
                "",
                "def game_leave(g, id):",
                "    acquire(?g->lock)",
                "    ",
                "    # Remove player from team",
                "    if id in g->team1:",
                "        del g->team1[id]",
                "    elif id in g->team2:",
                "        del g->team2[id]",
                "    ",
                "    # If teams are empty (game complete), signal umpire to make new teams",
                "    if (len(g->team1) == 0) and (len(g->team2) == 0):",
                "        notify(?g->active_game)",
                "",
                "    release(?g->lock)"
              ],
            "identifiers": {
                "g": "local-const",
                "held": "imported",
                "get": "imported",
                "release": "imported",
                "new_waiting": "local-const",
                "Game": "constant",
                "acquired": "imported",
                "tas": "imported",
                "i": "local-const",
                "atomic_load": "imported",
                "id": "local-const",
                "synch": "module",
                "BinSema": "imported",
                "cas": "imported",
                "Semaphore": "imported",
                "this": "local-var",
                "Lock": "imported",
                "wait": "imported",
                "game_umpire": "constant",
                "atomic_store": "imported",
                "V": "imported",
                "P": "imported",
                "game_leave": "constant",
                "game_join": "constant",
                "notifyAll": "imported",
                "put": "imported",
                "Queue": "imported",
                "___": "___",
                "number_to_pair": "local-const",
                "Condition": "imported",
                "notify": "imported",
                "acquire": "imported"
              }
          },
        "__main__": {
            "file": "teams.hny",
            "lines": [
                "from game import *",
                "",
                "const NPLAYERS = 6",
                "",
                "thegame = Game()",
                "",
                "def player(id):",
                "    # Attempt to join a game",
                "    let (team1, team2) = game_join(?thegame, id):",
                "        # Assert the player is in one of the teams",
                "        assert id in (team1 | team2)",
                "",
                "        # Assert that teams are of equal size or within one player difference",
                "        assert abs(len(team1) - len(team2)) <= 1",
                "        ",
                "        # Assert the teams are disjoint",
                "        assert (len(team1 & team2) == 0)",
                "        ",
                "        # Assert no player is duplicated within the same team",
                "        # assert (len(g->team1 | g->team2) == len(g->team1) + len(g->team2))",
                "",
                "    # game plays  ",
                "",
                "    # Player leaves the game",
                "    game_leave(?thegame, id)",
                "  ",
                "spawn eternal game_umpire(?thegame)",
                "",
                "for id in {1 .. NPLAYERS}:",
                "    spawn player(id)"
              ],
            "identifiers": {
                "team2": "local-const",
                "game": "module",
                "Game": "imported",
                "player": "constant",
                "id": "local-const",
                "this": "local-var",
                "thegame": "global",
                "game_umpire": "imported",
                "NPLAYERS": "constant",
                "game_leave": "imported",
                "game_join": "imported",
                "team1": "local-const",
                "___": "___"
              }
          },
        "synch": {
            "file": "/Users/katherineheatzig/Library/Python/3.12/lib/python/site-packages/harmony_model_checker/modules/synch.hny",
            "lines": [
                "import list",
                "import bag",
                "",
                "def atomic_load(p) returns current:",
                "    atomically current = !p",
                "",
                "def atomic_store(p, v):",
                "    atomically !p = v",
                "",
                "def tas(lk) returns oldvalue:",
                "    atomically:",
                "        oldvalue = !lk",
                "        !lk = True",
                "",
                "def cas(p, old, new) returns success:",
                "    atomically:",
                "        success = !p == old",
                "        if success:",
                "            !p = new",
                "",
                "def BinSema(initial) returns sema:",
                "    assert initial in { False, True }",
                "    sema = initial",
                "",
                "def Lock() returns result:",
                "    result = BinSema(False)",
                "",
                "def acquired(binsema) returns result:",
                "    result = !binsema",
                "    ",
                "def held(binsema) returns result:",
                "    result = !binsema",
                "",
                "def acquire(binsema):",
                "    atomically when not !binsema:",
                "        !binsema = True",
                "",
                "def release(binsema):",
                "    atomically:",
                "        assert !binsema",
                "        !binsema = False",
                "",
                "def Condition() returns result:",
                "    result = bag.empty()",
                "",
                "def wait(c, lk):",
                "    var cnt = 0",
                "    let (), ctx = save():",
                "        atomically:",
                "            cnt = bag.multiplicity(!c, ctx)",
                "            !c = bag.add(!c, ctx)",
                "            !lk = False",
                "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):",
                "            !lk = True",
                "",
                "def notify(c):",
                "    atomically if !c != bag.empty():",
                "        !c = bag.remove(!c, bag.bchoose(!c))",
                "",
                "def notifyAll(c):",
                "    atomically !c = bag.empty()",
                "",
                "def Semaphore(cnt) returns result:",
                "    result = cnt",
                "",
                "def P(sema):",
                "    atomically when !sema > 0:",
                "        !sema -= 1",
                "",
                "def V(sema):",
                "    atomically !sema += 1",
                "    ",
                "def Queue() returns result:",
                "    result = []",
                "",
                "def get(q) returns result:",
                "    atomically when !q != []:",
                "        result = list.head(!q)",
                "        !q = list.tail(!q)",
                "",
                "def put(q, item):",
                "    atomically !q = list.append(!q, item)"
              ],
            "identifiers": {
                "held": "constant",
                "get": "constant",
                "initial": "local-const",
                "release": "constant",
                "bag": "module",
                "cnt": "local-const",
                "acquired": "constant",
                "tas": "constant",
                "atomic_load": "constant",
                "BinSema": "constant",
                "c": "local-const",
                "cas": "constant",
                "Semaphore": "constant",
                "this": "local-var",
                "v": "local-const",
                "Lock": "constant",
                "list": "module",
                "lk": "local-const",
                "wait": "constant",
                "binsema": "local-const",
                "p": "local-const",
                "q": "local-const",
                "atomic_store": "constant",
                "V": "constant",
                "new": "local-const",
                "P": "constant",
                "notifyAll": "constant",
                "put": "constant",
                "Queue": "constant",
                "___": "___",
                "old": "local-const",
                "Condition": "constant",
                "sema": "local-const",
                "item": "local-const",
                "notify": "constant",
                "ctx": "local-const",
                "acquire": "constant"
              }
          },
        "list": {
            "file": "/Users/katherineheatzig/Library/Python/3.12/lib/python/site-packages/harmony_model_checker/modules/list.hny",
            "lines": [
                "# return s[b:e]",
                "def subseq(s, b, e) returns result:",
                "    result = [ s[x] for x in {b..e-1} ]",
                "",
                "def append(s, e) returns result:",
                "    result = s + [e,]",
                "",
                "def head(s) returns result:",
                "    result = s[0]",
                "",
                "builtin tail \"list$tail\"",
                "def tail(s) returns result:",
                "    result = subseq(s, 1, len(s))",
                "",
                "# sum of a list or set",
                "def sum(a) returns accu:",
                "    accu = 0",
                "    for v in a:",
                "        accu += v",
                "",
                "# convert list (or values of a dict) to a set",
                "def set(a) returns result:",
                "    result = { v for v in a }",
                "",
                "# convert set into a (sorted) list",
                "def list(a) returns result:",
                "    result = [ v for v in a ]",
                "",
                "# convert values of a dictionary into a list",
                "def values(d) returns result:",
                "    result = [ v for _:v in d ]",
                "",
                "# like Python .items()",
                "def items(d) returns result:",
                "    result = [ (k, v) for k:v in d ]",
                "",
                "# quicksort of a list",
                "def qsort(a) returns sorted:",
                "    if a == []:",
                "        sorted = []",
                "    else:",
                "        let (pivot, rest) = head(a), tail(a)",
                "        let lower = [ v for v in rest where v < pivot ]",
                "        let higher = [ v for v in rest where v >= pivot ]:",
                "            sorted = qsort(lower) + [pivot,] + qsort(higher)",
                "",
                "# like Python sorted()",
                "def sorted(d) returns result:",
                "    result = qsort(list(d))",
                "",
                "# like Python reversed()",
                "def reversed(d) returns result:",
                "    let n = len(d):",
                "        result = [ d[n-i] for i in { 1..n } ]",
                "",
                "# like Python index()",
                "def index(d, e) returns i:",
                "    i = 0",
                "    while d[i] != e:",
                "        i += 1",
                "",
                "# like Python startswith (only defined for strings)",
                "def startswith(d, prefix) returns result:",
                "    result = (len(prefix) <= len(d)) and all(d[i] == prefix[i] for i in { 0 .. len(prefix) - 1 })",
                "",
                "# left fold.  Compute f(f(f(z, d[0]), d[1]), d[2] ...)",
                "def foldl(d, f, z) returns result:",
                "    result = z",
                "    for e in d:",
                "        result = f(result, e)",
                "",
                "# right fold.  Compute f(d[0], f(d[1], ..., f(d[n-1], z)))",
                "def foldr(d, f, z) returns result:",
                "    result = z if len d == 0 else f(d[0], foldr(tail(d), f, z))",
                "",
                "# Python functools reduce operator",
                "def reduce(f, d, z) returns result:",
                "    result = foldl(d, f, z)",
                "",
                "# Return a permutation of set s",
                "def permuted(s) returns perm:",
                "    perm = []",
                "    var c = s",
                "    while c != {}:",
                "        let e = choose c:",
                "            perm += [ e, ]",
                "            c -= { e }",
                "",
                "# Return a list of elements satisfying the condition",
                "def filter(cond, s) returns t:",
                "    t = [ e for e in s where cond(e) ]",
                "",
                "# Return a list of elements mapped by f",
                "def map(f, s) returns t:",
                "    t = [ f(e) for e in s ]"
              ],
            "identifiers": {
                "f": "local-const",
                "z": "local-const",
                "filter": "constant",
                "d": "local-const",
                "head": "constant",
                "x": "local-const",
                "set": "constant",
                "n": "local-const",
                "higher": "local-const",
                "i": "local-const",
                "startswith": "constant",
                "foldl": "constant",
                "values": "constant",
                "k": "local-const",
                "reversed": "constant",
                "e": "local-const",
                "map": "constant",
                "qsort": "constant",
                "pivot": "local-const",
                "a": "local-const",
                "c": "local-var",
                "rest": "local-const",
                "b": "local-const",
                "permuted": "constant",
                "this": "local-var",
                "v": "local-const",
                "list": "constant",
                "prefix": "local-const",
                "subseq": "constant",
                "cond": "local-const",
                "s": "local-const",
                "lower": "local-const",
                "reduce": "constant",
                "tail": "constant",
                "___": "___",
                "sum": "constant",
                "items": "constant",
                "foldr": "constant",
                "sorted": "constant",
                "index": "constant",
                "append": "constant"
              }
          }
      },
    "labels": {
        "__end__": 1671
      },
    "pretty": [
        [
            "Frame __init__()",
            "start of method __init__"
          ],
        [
            "Jump 54",
            "jump over method definition: set program counter to 54"
          ],
        [
            "Frame subseq(s, b, e)",
            "start of method subseq"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu3",
            "initialize accumulator for list comprehension: pop a value and store in $accu3"
          ],
        [
            "LoadVar b",
            "push the value of b"
          ],
        [
            "DelVar b",
            "delete method variable b"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary ..",
            "pop 2 values and push the result of applying .."
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(x)",
            "get next element and assign to x; push False or True depending on success"
          ],
        [
            "JumpCond False 26",
            "check if loop is done: pop a value and jump to 26 if the value is False"
          ],
        [
            "LoadVar $accu3",
            "load accumulator: push the value of $accu3"
          ],
        [
            "DelVar $accu3",
            "delete method variable $accu3"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "LoadVar x",
            "push the value of x"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu3",
            "update accumulator: pop a value and store in $accu3"
          ],
        [
            "Jump 14",
            "set program counter to 14"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "LoadVar $accu3",
            "load final accumulator result: push the value of $accu3"
          ],
        [
            "DelVar $accu3",
            "delete method variable $accu3"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 54",
            "jump over method definition: set program counter to 54"
          ],
        [
            "Frame append(s, e)",
            "start of method append"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 54",
            "jump over method definition: set program counter to 54"
          ],
        [
            "Frame head(s)",
            "start of method head"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Push PC(57)",
            "push constant PC(57)"
          ],
        [
            "Builtin(list$tail)",
            "top of stack is a built-in operation called list$tail"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame tail(s)",
            "start of method tail"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(2)",
            "call method PC(2)"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame sum(a)",
            "start of method sum"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "StoreVar accu",
            "pop a value and store in accu"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "DelVar a",
            "delete method variable a"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(v)",
            "get next element and assign to v; push False or True depending on success"
          ],
        [
            "JumpCond False 87",
            "check if loop is done: pop a value and jump to 87 if the value is False"
          ],
        [
            "LoadVar accu",
            "push the value of accu"
          ],
        [
            "DelVar accu",
            "delete method variable accu"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar accu",
            "pop a value and store in accu"
          ],
        [
            "Jump 78",
            "set program counter to 78"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "ReturnOp(accu)",
            "restore caller method state and push accu"
          ],
        [
            "DelVar accu",
            "delete method variable accu"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame set(a)",
            "start of method set"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push {}",
            "initialize accumulator for set comprehension: push constant {}"
          ],
        [
            "StoreVar $accu72",
            "initialize accumulator for set comprehension: pop a value and store in $accu72"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "DelVar a",
            "delete method variable a"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(v)",
            "get next element and assign to v; push False or True depending on success"
          ],
        [
            "JumpCond False 107",
            "check if loop is done: pop a value and jump to 107 if the value is False"
          ],
        [
            "LoadVar $accu72",
            "load accumulator: push the value of $accu72"
          ],
        [
            "DelVar $accu72",
            "delete method variable $accu72"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar $accu72",
            "update accumulator: pop a value and store in $accu72"
          ],
        [
            "Jump 98",
            "set program counter to 98"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "LoadVar $accu72",
            "load final accumulator result: push the value of $accu72"
          ],
        [
            "DelVar $accu72",
            "delete method variable $accu72"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame list(a)",
            "start of method list"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu88",
            "initialize accumulator for list comprehension: pop a value and store in $accu88"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "DelVar a",
            "delete method variable a"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(v)",
            "get next element and assign to v; push False or True depending on success"
          ],
        [
            "JumpCond False 129",
            "check if loop is done: pop a value and jump to 129 if the value is False"
          ],
        [
            "LoadVar $accu88",
            "load accumulator: push the value of $accu88"
          ],
        [
            "DelVar $accu88",
            "delete method variable $accu88"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu88",
            "update accumulator: pop a value and store in $accu88"
          ],
        [
            "Jump 120",
            "set program counter to 120"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "LoadVar $accu88",
            "load final accumulator result: push the value of $accu88"
          ],
        [
            "DelVar $accu88",
            "delete method variable $accu88"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame values(d)",
            "start of method values"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu104",
            "initialize accumulator for list comprehension: pop a value and store in $accu104"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(_, v)",
            "get next element and assign to _:v; push False or True depending on success"
          ],
        [
            "DelVar _",
            "delete method variable _"
          ],
        [
            "JumpCond False 152",
            "check if loop is done: pop a value and jump to 152 if the value is False"
          ],
        [
            "LoadVar $accu104",
            "load accumulator: push the value of $accu104"
          ],
        [
            "DelVar $accu104",
            "delete method variable $accu104"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu104",
            "update accumulator: pop a value and store in $accu104"
          ],
        [
            "Jump 142",
            "set program counter to 142"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "LoadVar $accu104",
            "load final accumulator result: push the value of $accu104"
          ],
        [
            "DelVar $accu104",
            "delete method variable $accu104"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame items(d)",
            "start of method items"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu120",
            "initialize accumulator for list comprehension: pop a value and store in $accu120"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(k, v)",
            "get next element and assign to k:v; push False or True depending on success"
          ],
        [
            "JumpCond False 179",
            "check if loop is done: pop a value and jump to 179 if the value is False"
          ],
        [
            "LoadVar $accu120",
            "load accumulator: push the value of $accu120"
          ],
        [
            "DelVar $accu120",
            "delete method variable $accu120"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu120",
            "update accumulator: pop a value and store in $accu120"
          ],
        [
            "Jump 165",
            "set program counter to 165"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "LoadVar $accu120",
            "load final accumulator result: push the value of $accu120"
          ],
        [
            "DelVar $accu120",
            "delete method variable $accu120"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame qsort(a)",
            "start of method qsort"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 195",
            "pop a value and jump to 195 if the value is False"
          ],
        [
            "DelVar a",
            "delete method variable a"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "StoreVar sorted",
            "pop a value and store in sorted"
          ],
        [
            "Jump 261",
            "set program counter to 261"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "Apply PC(45)",
            "call method PC(45)"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "DelVar a",
            "delete method variable a"
          ],
        [
            "Apply PC(57)",
            "call method PC(57)"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar (pivot, rest)",
            "pop a value and store in (pivot, rest)"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu155",
            "initialize accumulator for list comprehension: pop a value and store in $accu155"
          ],
        [
            "LoadVar rest",
            "push the value of rest"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "Cut(v)",
            "get next element and assign to v; push False or True depending on success"
          ],
        [
            "JumpCond False 222",
            "check if loop is done: pop a value and jump to 222 if the value is False"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "LoadVar pivot",
            "push the value of pivot"
          ],
        [
            "2-ary <",
            "pop 2 values and push the result of applying <"
          ],
        [
            "JumpCond False 208",
            "pop a value and jump to 208 if the value is False"
          ],
        [
            "LoadVar $accu155",
            "load accumulator: push the value of $accu155"
          ],
        [
            "DelVar $accu155",
            "delete method variable $accu155"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu155",
            "update accumulator: pop a value and store in $accu155"
          ],
        [
            "Jump 208",
            "set program counter to 208"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "LoadVar $accu155",
            "load final accumulator result: push the value of $accu155"
          ],
        [
            "DelVar $accu155",
            "delete method variable $accu155"
          ],
        [
            "StoreVar lower",
            "pop a value and store in lower"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu172",
            "initialize accumulator for list comprehension: pop a value and store in $accu172"
          ],
        [
            "LoadVar rest",
            "push the value of rest"
          ],
        [
            "DelVar rest",
            "delete method variable rest"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "Cut(v)",
            "get next element and assign to v; push False or True depending on success"
          ],
        [
            "JumpCond False 245",
            "check if loop is done: pop a value and jump to 245 if the value is False"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "LoadVar pivot",
            "push the value of pivot"
          ],
        [
            "2-ary >=",
            "pop 2 values and push the result of applying >="
          ],
        [
            "JumpCond False 231",
            "pop a value and jump to 231 if the value is False"
          ],
        [
            "LoadVar $accu172",
            "load accumulator: push the value of $accu172"
          ],
        [
            "DelVar $accu172",
            "delete method variable $accu172"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu172",
            "update accumulator: pop a value and store in $accu172"
          ],
        [
            "Jump 231",
            "set program counter to 231"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "LoadVar $accu172",
            "load final accumulator result: push the value of $accu172"
          ],
        [
            "DelVar $accu172",
            "delete method variable $accu172"
          ],
        [
            "StoreVar higher",
            "pop a value and store in higher"
          ],
        [
            "LoadVar lower",
            "push the value of lower"
          ],
        [
            "DelVar lower",
            "delete method variable lower"
          ],
        [
            "Apply PC(186)",
            "call method PC(186)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar pivot",
            "push the value of pivot"
          ],
        [
            "DelVar pivot",
            "delete method variable pivot"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar higher",
            "push the value of higher"
          ],
        [
            "DelVar higher",
            "delete method variable higher"
          ],
        [
            "Apply PC(186)",
            "call method PC(186)"
          ],
        [
            "3-ary +",
            "pop 3 values and push the result of applying +"
          ],
        [
            "StoreVar sorted",
            "pop a value and store in sorted"
          ],
        [
            "ReturnOp(sorted)",
            "restore caller method state and push sorted"
          ],
        [
            "DelVar sorted",
            "delete method variable sorted"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame sorted(d)",
            "start of method sorted"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Apply PC(113)",
            "call method PC(113)"
          ],
        [
            "Apply PC(186)",
            "call method PC(186)"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame reversed(d)",
            "start of method reversed"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "StoreVar n",
            "pop a value and store in n"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu211",
            "initialize accumulator for list comprehension: pop a value and store in $accu211"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "LoadVar n",
            "push the value of n"
          ],
        [
            "2-ary ..",
            "pop 2 values and push the result of applying .."
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(i)",
            "get next element and assign to i; push False or True depending on success"
          ],
        [
            "JumpCond False 298",
            "check if loop is done: pop a value and jump to 298 if the value is False"
          ],
        [
            "LoadVar $accu211",
            "load accumulator: push the value of $accu211"
          ],
        [
            "DelVar $accu211",
            "delete method variable $accu211"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "LoadVar n",
            "push the value of n"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu211",
            "update accumulator: pop a value and store in $accu211"
          ],
        [
            "Jump 284",
            "set program counter to 284"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "DelVar n",
            "delete method variable n"
          ],
        [
            "LoadVar $accu211",
            "load final accumulator result: push the value of $accu211"
          ],
        [
            "DelVar $accu211",
            "delete method variable $accu211"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame index(d, e)",
            "start of method index"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "StoreVar i",
            "pop a value and store in i"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond False 322",
            "pop a value and jump to 322 if the value is False"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar i",
            "pop a value and store in i"
          ],
        [
            "Jump 309",
            "set program counter to 309"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "ReturnOp(i)",
            "restore caller method state and push i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame startswith(d, prefix)",
            "start of method startswith"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar prefix",
            "push the value of prefix"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "2-ary <=",
            "pop 2 values and push the result of applying <="
          ],
        [
            "JumpCond False 368",
            "pop a value and jump to 368 if the value is False"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu257",
            "initialize accumulator for list comprehension: pop a value and store in $accu257"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "LoadVar prefix",
            "push the value of prefix"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary ..",
            "pop 2 values and push the result of applying .."
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(i)",
            "get next element and assign to i; push False or True depending on success"
          ],
        [
            "JumpCond False 361",
            "check if loop is done: pop a value and jump to 361 if the value is False"
          ],
        [
            "LoadVar $accu257",
            "load accumulator: push the value of $accu257"
          ],
        [
            "DelVar $accu257",
            "delete method variable $accu257"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "LoadVar prefix",
            "push the value of prefix"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu257",
            "update accumulator: pop a value and store in $accu257"
          ],
        [
            "Jump 344",
            "set program counter to 344"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "DelVar prefix",
            "delete method variable prefix"
          ],
        [
            "LoadVar $accu257",
            "load final accumulator result: push the value of $accu257"
          ],
        [
            "DelVar $accu257",
            "delete method variable $accu257"
          ],
        [
            "1-ary all",
            "pop 1 value and push the result of applying all"
          ],
        [
            "Jump 371",
            "set program counter to 371"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "DelVar prefix",
            "delete method variable prefix"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame foldl(d, f, z)",
            "start of method foldl"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar z",
            "push the value of z"
          ],
        [
            "DelVar z",
            "delete method variable z"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(e)",
            "get next element and assign to e; push False or True depending on success"
          ],
        [
            "JumpCond False 396",
            "check if loop is done: pop a value and jump to 396 if the value is False"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 382",
            "set program counter to 382"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame foldr(d, f, z)",
            "start of method foldr"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 412",
            "pop a value and jump to 412 if the value is False"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "LoadVar z",
            "push the value of z"
          ],
        [
            "DelVar z",
            "delete method variable z"
          ],
        [
            "Jump 434",
            "set program counter to 434"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Apply PC(57)",
            "call method PC(57)"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar z",
            "push the value of z"
          ],
        [
            "DelVar z",
            "delete method variable z"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(400)",
            "call method PC(400)"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame reduce(f, d, z)",
            "start of method reduce"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar z",
            "push the value of z"
          ],
        [
            "DelVar z",
            "delete method variable z"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(374)",
            "call method PC(374)"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame permuted(s)",
            "start of method permuted"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "StoreVar perm",
            "pop a value and store in perm"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "StoreVar c",
            "pop a value and store in c"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond False 482",
            "pop a value and jump to 482 if the value is False"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Choose",
            "pop a set value and push one of its elements"
          ],
        [
            "StoreVar e",
            "pop a value and store in e"
          ],
        [
            "LoadVar perm",
            "push the value of perm"
          ],
        [
            "DelVar perm",
            "delete method variable perm"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar perm",
            "pop a value and store in perm"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "StoreVar c",
            "pop a value and store in c"
          ],
        [
            "Jump 459",
            "set program counter to 459"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "ReturnOp(perm)",
            "restore caller method state and push perm"
          ],
        [
            "DelVar perm",
            "delete method variable perm"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame filter(cond, s)",
            "start of method filter"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu377",
            "initialize accumulator for list comprehension: pop a value and store in $accu377"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "Cut(e)",
            "get next element and assign to e; push False or True depending on success"
          ],
        [
            "JumpCond False 507",
            "check if loop is done: pop a value and jump to 507 if the value is False"
          ],
        [
            "LoadVar cond",
            "push the value of cond"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "JumpCond False 492",
            "pop a value and jump to 492 if the value is False"
          ],
        [
            "LoadVar $accu377",
            "load accumulator: push the value of $accu377"
          ],
        [
            "DelVar $accu377",
            "delete method variable $accu377"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu377",
            "update accumulator: pop a value and store in $accu377"
          ],
        [
            "Jump 492",
            "set program counter to 492"
          ],
        [
            "DelVar cond",
            "delete method variable cond"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "LoadVar $accu377",
            "load final accumulator result: push the value of $accu377"
          ],
        [
            "DelVar $accu377",
            "delete method variable $accu377"
          ],
        [
            "StoreVar t",
            "pop a value and store in t"
          ],
        [
            "ReturnOp(t)",
            "restore caller method state and push t"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame map(f, s)",
            "start of method map"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu398",
            "initialize accumulator for list comprehension: pop a value and store in $accu398"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(e)",
            "get next element and assign to e; push False or True depending on success"
          ],
        [
            "JumpCond False 533",
            "check if loop is done: pop a value and jump to 533 if the value is False"
          ],
        [
            "LoadVar $accu398",
            "load accumulator: push the value of $accu398"
          ],
        [
            "DelVar $accu398",
            "delete method variable $accu398"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu398",
            "update accumulator: pop a value and store in $accu398"
          ],
        [
            "Jump 521",
            "set program counter to 521"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "LoadVar $accu398",
            "load final accumulator result: push the value of $accu398"
          ],
        [
            "DelVar $accu398",
            "delete method variable $accu398"
          ],
        [
            "StoreVar t",
            "pop a value and store in t"
          ],
        [
            "ReturnOp(t)",
            "restore caller method state and push t"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame empty()",
            "start of method empty"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "StoreVar bg",
            "pop a value and store in bg"
          ],
        [
            "ReturnOp(bg)",
            "restore caller method state and push bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame fromSet(s)",
            "start of method fromSet"
          ],
        [
            "Push {:}",
            "initialize accumulator for dict comprehension: push constant {:}"
          ],
        [
            "StoreVar $accu422",
            "initialize accumulator for dict comprehension: pop a value and store in $accu422"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(elt)",
            "get next element and assign to elt; push False or True depending on success"
          ],
        [
            "JumpCond False 563",
            "check if loop is done: pop a value and jump to 563 if the value is False"
          ],
        [
            "LoadVar $accu422",
            "load accumulator: push the value of $accu422"
          ],
        [
            "DelVar $accu422",
            "delete method variable $accu422"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "StoreVar $accu422",
            "update accumulator: pop a value and store in $accu422"
          ],
        [
            "Jump 553",
            "set program counter to 553"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "LoadVar $accu422",
            "load final accumulator result: push the value of $accu422"
          ],
        [
            "DelVar $accu422",
            "delete method variable $accu422"
          ],
        [
            "StoreVar bg",
            "pop a value and store in bg"
          ],
        [
            "ReturnOp(bg)",
            "restore caller method state and push bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "Jump 602",
            "jump over method definition: set program counter to 602"
          ],
        [
            "Frame fromList(a)",
            "start of method fromList"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "StoreVar bg",
            "pop a value and store in bg"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "DelVar a",
            "delete method variable a"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(v)",
            "get next element and assign to v; push False or True depending on success"
          ],
        [
            "JumpCond False 599",
            "check if loop is done: pop a value and jump to 599 if the value is False"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 592",
            "pop a value and jump to 592 if the value is False"
          ],
        [
            "Push ?bg",
            "push constant ?bg"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar [bg]",
            "pop a value and the address of a method variable and store the value at that address"
          ],
        [
            "Jump 576",
            "set program counter to 576"
          ],
        [
            "Push ?bg",
            "push constant ?bg"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "StoreVar [bg]",
            "pop a value and the address of a method variable and store the value at that address"
          ],
        [
            "Jump 576",
            "set program counter to 576"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "ReturnOp(bg)",
            "restore caller method state and push bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "Push PC(605)",
            "push constant PC(605)"
          ],
        [
            "Builtin(bag$multiplicity)",
            "top of stack is a built-in operation called bag$multiplicity"
          ],
        [
            "Jump 624",
            "jump over method definition: set program counter to 624"
          ],
        [
            "Frame multiplicity(bg, elt)",
            "start of method multiplicity"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 618",
            "pop a value and jump to 618 if the value is False"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "Jump 622",
            "set program counter to 622"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "ReturnOp(count)",
            "restore caller method state and push count"
          ],
        [
            "DelVar count",
            "delete method variable count"
          ],
        [
            "Push PC(627)",
            "push constant PC(627)"
          ],
        [
            "Builtin(bag$size)",
            "top of stack is a built-in operation called bag$size"
          ],
        [
            "Jump 646",
            "jump over method definition: set program counter to 646"
          ],
        [
            "Frame size(bg)",
            "start of method size"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(_, c)",
            "get next element and assign to _:c; push False or True depending on success"
          ],
        [
            "DelVar _",
            "delete method variable _"
          ],
        [
            "JumpCond False 643",
            "check if loop is done: pop a value and jump to 643 if the value is False"
          ],
        [
            "LoadVar count",
            "push the value of count"
          ],
        [
            "DelVar count",
            "delete method variable count"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "Jump 633",
            "set program counter to 633"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "ReturnOp(count)",
            "restore caller method state and push count"
          ],
        [
            "DelVar count",
            "delete method variable count"
          ],
        [
            "Push PC(649)",
            "push constant PC(649)"
          ],
        [
            "Builtin(bag$bmin)",
            "top of stack is a built-in operation called bag$bmin"
          ],
        [
            "Jump 665",
            "jump over method definition: set program counter to 665"
          ],
        [
            "Frame bmin(bg)",
            "start of method bmin"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "1-ary keys",
            "pop 1 value and push the result of applying keys"
          ],
        [
            "1-ary min",
            "pop 1 value and push the result of applying min"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "ReturnOp(count)",
            "restore caller method state and push count"
          ],
        [
            "DelVar count",
            "delete method variable count"
          ],
        [
            "Push PC(668)",
            "push constant PC(668)"
          ],
        [
            "Builtin(bag$bmax)",
            "top of stack is a built-in operation called bag$bmax"
          ],
        [
            "Jump 693",
            "jump over method definition: set program counter to 693"
          ],
        [
            "Frame bmax(bg)",
            "start of method bmax"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "1-ary keys",
            "pop 1 value and push the result of applying keys"
          ],
        [
            "1-ary max",
            "pop 1 value and push the result of applying max"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "ReturnOp(count)",
            "restore caller method state and push count"
          ],
        [
            "DelVar count",
            "delete method variable count"
          ],
        [
            "Jump 693",
            "jump over method definition: set program counter to 693"
          ],
        [
            "Frame bchoose(bg)",
            "start of method bchoose"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "1-ary keys",
            "pop 1 value and push the result of applying keys"
          ],
        [
            "Choose",
            "pop a set value and push one of its elements"
          ],
        [
            "StoreVar elt",
            "pop a value and store in elt"
          ],
        [
            "ReturnOp(elt)",
            "restore caller method state and push elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "Push PC(696)",
            "push constant PC(696)"
          ],
        [
            "Builtin(bag$add)",
            "top of stack is a built-in operation called bag$add"
          ],
        [
            "Jump 722",
            "jump over method definition: set program counter to 722"
          ],
        [
            "Frame add(bg, elt)",
            "start of method add"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 715",
            "pop a value and jump to 715 if the value is False"
          ],
        [
            "Push ?result",
            "push constant ?result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar [result]",
            "pop a value and the address of a method variable and store the value at that address"
          ],
        [
            "Jump 721",
            "set program counter to 721"
          ],
        [
            "Push ?result",
            "push constant ?result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "StoreVar [result]",
            "pop a value and the address of a method variable and store the value at that address"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Push PC(725)",
            "push constant PC(725)"
          ],
        [
            "Builtin(bag$remove)",
            "top of stack is a built-in operation called bag$remove"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame remove(bg, elt)",
            "start of method remove"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 765",
            "pop a value and jump to 765 if the value is False"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary >",
            "pop 2 values and push the result of applying >"
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Push ?result",
            "push constant ?result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "StoreVar [result]",
            "pop a value and the address of a method variable and store the value at that address"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 765",
            "pop a value and jump to 765 if the value is False"
          ],
        [
            "Push ?result",
            "push constant ?result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "DelVar [result]",
            "pop an address of a method variable and delete that variable"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame combinations(bg, k)",
            "start of method combinations"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 781",
            "pop a value and jump to 781 if the value is False"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 856",
            "set program counter to 856"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "Apply PC(627)",
            "call method PC(627)"
          ],
        [
            "StoreVar n",
            "pop a value and store in n"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "LoadVar n",
            "push the value of n"
          ],
        [
            "2-ary >",
            "pop 2 values and push the result of applying >"
          ],
        [
            "JumpCond False 794",
            "pop a value and jump to 794 if the value is False"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "DelVar n",
            "delete method variable n"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 856",
            "set program counter to 856"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "LoadVar n",
            "push the value of n"
          ],
        [
            "DelVar n",
            "delete method variable n"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 806",
            "pop a value and jump to 806 if the value is False"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 856",
            "set program counter to 856"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "Apply PC(649)",
            "call method PC(649)"
          ],
        [
            "StoreVar hd",
            "pop a value and store in hd"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar hd",
            "push the value of hd"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(725)",
            "call method PC(725)"
          ],
        [
            "StoreVar tl",
            "pop a value and store in tl"
          ],
        [
            "Push {}",
            "initialize accumulator for set comprehension: push constant {}"
          ],
        [
            "StoreVar $accu645",
            "initialize accumulator for set comprehension: pop a value and store in $accu645"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar tl",
            "push the value of tl"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(768)",
            "call method PC(768)"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(x)",
            "get next element and assign to x; push False or True depending on success"
          ],
        [
            "JumpCond False 842",
            "check if loop is done: pop a value and jump to 842 if the value is False"
          ],
        [
            "LoadVar $accu645",
            "load accumulator: push the value of $accu645"
          ],
        [
            "DelVar $accu645",
            "delete method variable $accu645"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar x",
            "push the value of x"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar hd",
            "push the value of hd"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(696)",
            "call method PC(696)"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar $accu645",
            "update accumulator: pop a value and store in $accu645"
          ],
        [
            "Jump 828",
            "set program counter to 828"
          ],
        [
            "DelVar hd",
            "delete method variable hd"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "LoadVar $accu645",
            "load final accumulator result: push the value of $accu645"
          ],
        [
            "DelVar $accu645",
            "delete method variable $accu645"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar tl",
            "push the value of tl"
          ],
        [
            "DelVar tl",
            "delete method variable tl"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(768)",
            "call method PC(768)"
          ],
        [
            "2-ary |",
            "pop 2 values and push the result of applying |"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame atomic_load(p)",
            "start of method atomic_load"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar p",
            "push the value of p"
          ],
        [
            "DelVar p",
            "delete method variable p"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar current",
            "pop a value and store in current"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(current)",
            "restore caller method state and push current"
          ],
        [
            "DelVar current",
            "delete method variable current"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame atomic_store(p, v)",
            "start of method atomic_store"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar p",
            "push the value of p"
          ],
        [
            "DelVar p",
            "delete method variable p"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame tas(lk)",
            "start of method tas"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar lk",
            "push the value of lk"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar oldvalue",
            "pop a value and store in oldvalue"
          ],
        [
            "LoadVar lk",
            "push the value of lk"
          ],
        [
            "DelVar lk",
            "delete method variable lk"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(oldvalue)",
            "restore caller method state and push oldvalue"
          ],
        [
            "DelVar oldvalue",
            "delete method variable oldvalue"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame cas(p, old, new)",
            "start of method cas"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar p",
            "push the value of p"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "LoadVar old",
            "push the value of old"
          ],
        [
            "DelVar old",
            "delete method variable old"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "StoreVar success",
            "pop a value and store in success"
          ],
        [
            "LoadVar success",
            "push the value of success"
          ],
        [
            "JumpCond False 906",
            "pop a value and jump to 906 if the value is False"
          ],
        [
            "LoadVar p",
            "push the value of p"
          ],
        [
            "DelVar p",
            "delete method variable p"
          ],
        [
            "LoadVar new",
            "push the value of new"
          ],
        [
            "DelVar new",
            "delete method variable new"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "DelVar new",
            "delete method variable new"
          ],
        [
            "DelVar p",
            "delete method variable p"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(success)",
            "restore caller method state and push success"
          ],
        [
            "DelVar success",
            "delete method variable success"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame BinSema(initial)",
            "start of method BinSema"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar initial",
            "push the value of initial"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "LoadVar initial",
            "push the value of initial"
          ],
        [
            "DelVar initial",
            "delete method variable initial"
          ],
        [
            "StoreVar sema",
            "pop a value and store in sema"
          ],
        [
            "ReturnOp(sema)",
            "restore caller method state and push sema"
          ],
        [
            "DelVar sema",
            "delete method variable sema"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame Lock()",
            "start of method Lock"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "Apply PC(912)",
            "call method PC(912)"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame acquired(binsema)",
            "start of method acquired"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar binsema",
            "push the value of binsema"
          ],
        [
            "DelVar binsema",
            "delete method variable binsema"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame held(binsema)",
            "start of method held"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar binsema",
            "push the value of binsema"
          ],
        [
            "DelVar binsema",
            "delete method variable binsema"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame acquire(binsema)",
            "start of method acquire"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar binsema",
            "push the value of binsema"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary not",
            "pop 1 value and push the result of applying not"
          ],
        [
            "JumpCond False 962",
            "pop a value and jump to 962 if the value is False"
          ],
        [
            "Jump 965",
            "set program counter to 965"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Jump 955",
            "set program counter to 955"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "LoadVar binsema",
            "push the value of binsema"
          ],
        [
            "DelVar binsema",
            "delete method variable binsema"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame release(binsema)",
            "start of method release"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar binsema",
            "push the value of binsema"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "LoadVar binsema",
            "push the value of binsema"
          ],
        [
            "DelVar binsema",
            "delete method variable binsema"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame Condition()",
            "start of method Condition"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push PC(541)",
            "push constant PC(541)"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame wait(c, lk)",
            "start of method wait"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "StoreVar cnt",
            "pop a value and store in cnt"
          ],
        [
            "DelVar cnt",
            "delete method variable cnt"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Save",
            "pop a value and save context"
          ],
        [
            "Continue",
            "a no-op, must follow a Stop or Save operation"
          ],
        [
            "StoreVar ((), ctx)",
            "pop a value and store in ((), ctx)"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "Push PC(605)",
            "push constant PC(605)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar ctx",
            "push the value of ctx"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar cnt",
            "pop a value and store in cnt"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Push PC(696)",
            "push constant PC(696)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar ctx",
            "push the value of ctx"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar lk",
            "push the value of lk"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar lk",
            "push the value of lk"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary not",
            "pop 1 value and push the result of applying not"
          ],
        [
            "JumpCond False 1050",
            "pop a value and jump to 1050 if the value is False"
          ],
        [
            "Push PC(605)",
            "push constant PC(605)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar ctx",
            "push the value of ctx"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "LoadVar cnt",
            "push the value of cnt"
          ],
        [
            "2-ary <=",
            "pop 2 values and push the result of applying <="
          ],
        [
            "Jump 1051",
            "set program counter to 1051"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "JumpCond False 1056",
            "pop a value and jump to 1056 if the value is False"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "DelVar cnt",
            "delete method variable cnt"
          ],
        [
            "DelVar ctx",
            "delete method variable ctx"
          ],
        [
            "Jump 1059",
            "set program counter to 1059"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Jump 1032",
            "set program counter to 1032"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "LoadVar lk",
            "push the value of lk"
          ],
        [
            "DelVar lk",
            "delete method variable lk"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame notify(c)",
            "start of method notify"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push PC(541)",
            "push constant PC(541)"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond False 1093",
            "pop a value and jump to 1093 if the value is False"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Push PC(725)",
            "push constant PC(725)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push PC(685)",
            "push constant PC(685)"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame notifyAll(c)",
            "start of method notifyAll"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "Push PC(541)",
            "push constant PC(541)"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame Semaphore(cnt)",
            "start of method Semaphore"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar cnt",
            "push the value of cnt"
          ],
        [
            "DelVar cnt",
            "delete method variable cnt"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame P(sema)",
            "start of method P"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar sema",
            "push the value of sema"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary >",
            "pop 2 values and push the result of applying >"
          ],
        [
            "JumpCond False 1125",
            "pop a value and jump to 1125 if the value is False"
          ],
        [
            "Jump 1128",
            "set program counter to 1128"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Jump 1117",
            "set program counter to 1117"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "LoadVar sema",
            "push the value of sema"
          ],
        [
            "DelVar sema",
            "delete method variable sema"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame V(sema)",
            "start of method V"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar sema",
            "push the value of sema"
          ],
        [
            "DelVar sema",
            "delete method variable sema"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame Queue()",
            "start of method Queue"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame get(q)",
            "start of method get"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar q",
            "push the value of q"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond False 1167",
            "pop a value and jump to 1167 if the value is False"
          ],
        [
            "Jump 1170",
            "set program counter to 1170"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Jump 1158",
            "set program counter to 1158"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "Push PC(45)",
            "push constant PC(45)"
          ],
        [
            "LoadVar q",
            "push the value of q"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "LoadVar q",
            "push the value of q"
          ],
        [
            "Push PC(57)",
            "push constant PC(57)"
          ],
        [
            "LoadVar q",
            "push the value of q"
          ],
        [
            "DelVar q",
            "delete method variable q"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame put(q, item)",
            "start of method put"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar q",
            "push the value of q"
          ],
        [
            "Push PC(33)",
            "push constant PC(33)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar q",
            "push the value of q"
          ],
        [
            "DelVar q",
            "delete method variable q"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar item",
            "push the value of item"
          ],
        [
            "DelVar item",
            "delete method variable item"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame Game()",
            "start of method Game"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Apply PC(931)",
            "call method PC(931)"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "Push \"active_game\"",
            "push constant \"active_game\""
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Apply PC(989)",
            "call method PC(989)"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "Push \"players\"",
            "push constant \"players\""
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Apply PC(989)",
            "call method PC(989)"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "StoreVar game",
            "pop a value and store in game"
          ],
        [
            "ReturnOp(game)",
            "restore caller method state and push game"
          ],
        [
            "DelVar game",
            "delete method variable game"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame game_umpire(g)",
            "start of method game_umpire"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(954)",
            "call method PC(954)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "JumpCond False 1405",
            "pop a value and jump to 1405 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 2",
            "push constant 2"
          ],
        [
            "2-ary <",
            "pop 2 values and push the result of applying <"
          ],
        [
            "JumpCond True 1265",
            "pop a value and jump to 1265 if the value is True"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond True 1265",
            "pop a value and jump to 1265 if the value is True"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "Jump 1266",
            "set program counter to 1266"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "JumpCond False 1279",
            "pop a value and jump to 1279 if the value is False"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"active_game\"",
            "push constant \"active_game\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(998)",
            "call method PC(998)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "Jump 1241",
            "set program counter to 1241"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 2",
            "push constant 2"
          ],
        [
            "2-ary %",
            "pop 2 values and push the result of applying %"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "StoreVar number_to_pair",
            "pop a value and store in number_to_pair"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Push ?game$range",
            "push constant ?game$range"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar number_to_pair",
            "push the value of number_to_pair"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push 2",
            "push constant 2"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(i)",
            "get next element and assign to i; push False or True depending on success"
          ],
        [
            "JumpCond False 1359",
            "check if loop is done: pop a value and jump to 1359 if the value is False"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "LoadVar number_to_pair",
            "push the value of number_to_pair"
          ],
        [
            "2-ary <",
            "pop 2 values and push the result of applying <"
          ],
        [
            "JumpCond False 1334",
            "pop a value and jump to 1334 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push \"append\"",
            "push constant \"append\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "LoadVar number_to_pair",
            "push the value of number_to_pair"
          ],
        [
            "2-ary <",
            "pop 2 values and push the result of applying <"
          ],
        [
            "JumpCond False 1357",
            "pop a value and jump to 1357 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push \"append\"",
            "push constant \"append\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "Jump 1314",
            "set program counter to 1314"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "StoreVar new_waiting",
            "pop a value and store in new_waiting"
          ],
        [
            "Push ?game$range",
            "push constant ?game$range"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar number_to_pair",
            "push the value of number_to_pair"
          ],
        [
            "DelVar number_to_pair",
            "delete method variable number_to_pair"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(i)",
            "get next element and assign to i; push False or True depending on success"
          ],
        [
            "JumpCond False 1392",
            "check if loop is done: pop a value and jump to 1392 if the value is False"
          ],
        [
            "LoadVar new_waiting",
            "push the value of new_waiting"
          ],
        [
            "Push \"append\"",
            "push constant \"append\""
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "Jump 1376",
            "set program counter to 1376"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar new_waiting",
            "push the value of new_waiting"
          ],
        [
            "DelVar new_waiting",
            "delete method variable new_waiting"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"players\"",
            "push constant \"players\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(1097)",
            "call method PC(1097)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "Jump 1239",
            "set program counter to 1239"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "DelVar g",
            "delete method variable g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(973)",
            "call method PC(973)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame game_join(g, id)",
            "start of method game_join"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(954)",
            "call method PC(954)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"waiting\"",
            "push constant \"waiting\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 1447",
            "pop a value and jump to 1447 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "Jump 1448",
            "set program counter to 1448"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "JumpCond False 1454",
            "pop a value and jump to 1454 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"active_game\"",
            "push constant \"active_game\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(1067)",
            "call method PC(1067)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond True 1492",
            "pop a value and jump to 1492 if the value is True"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond True 1492",
            "pop a value and jump to 1492 if the value is True"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "1-ary not",
            "pop 1 value and push the result of applying not"
          ],
        [
            "JumpCond False 1490",
            "pop a value and jump to 1490 if the value is False"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "1-ary not",
            "pop 1 value and push the result of applying not"
          ],
        [
            "Jump 1493",
            "set program counter to 1493"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "Jump 1493",
            "set program counter to 1493"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "JumpCond False 1506",
            "pop a value and jump to 1506 if the value is False"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"players\"",
            "push constant \"players\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(998)",
            "call method PC(998)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "Jump 1454",
            "set program counter to 1454"
          ],
        [
            "DelVar id",
            "delete method variable id"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Store game$teams",
            "pop a value and store it in shared variable teams"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "DelVar g",
            "delete method variable g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(973)",
            "call method PC(973)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 1593",
            "jump over method definition: set program counter to 1593"
          ],
        [
            "Frame game_leave(g, id)",
            "start of method game_leave"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(954)",
            "call method PC(954)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 1548",
            "pop a value and jump to 1548 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "DelVar id",
            "delete method variable id"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Del",
            "pop an address and delete the shared variable at the address"
          ],
        [
            "Jump 1562",
            "set program counter to 1562"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 1562",
            "pop a value and jump to 1562 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "DelVar id",
            "delete method variable id"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Del",
            "pop an address and delete the shared variable at the address"
          ],
        [
            "DelVar id",
            "delete method variable id"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team1\"",
            "push constant \"team1\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 1579",
            "pop a value and jump to 1579 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"team2\"",
            "push constant \"team2\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "Jump 1580",
            "set program counter to 1580"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "JumpCond False 1586",
            "pop a value and jump to 1586 if the value is False"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "Push \"active_game\"",
            "push constant \"active_game\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(1067)",
            "call method PC(1067)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "LoadVar g",
            "push the value of g"
          ],
        [
            "DelVar g",
            "delete method variable g"
          ],
        [
            "Push \"lock\"",
            "push constant \"lock\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Apply PC(973)",
            "call method PC(973)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Apply PC(1206)",
            "call method PC(1206)"
          ],
        [
            "Store thegame",
            "pop a value and store it in shared variable thegame"
          ],
        [
            "Jump 1650",
            "jump over method definition: set program counter to 1650"
          ],
        [
            "Frame player(id)",
            "start of method player"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push ?thegame",
            "push constant ?thegame"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(1413)",
            "call method PC(1413)"
          ],
        [
            "StoreVar (team1, team2)",
            "pop a value and store in (team1, team2)"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "LoadVar team1",
            "push the value of team1"
          ],
        [
            "LoadVar team2",
            "push the value of team2"
          ],
        [
            "2-ary |",
            "pop 2 values and push the result of applying |"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar team1",
            "push the value of team1"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "LoadVar team2",
            "push the value of team2"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "1-ary abs",
            "pop 1 value and push the result of applying abs"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary <=",
            "pop 2 values and push the result of applying <="
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar team1",
            "push the value of team1"
          ],
        [
            "DelVar team1",
            "delete method variable team1"
          ],
        [
            "LoadVar team2",
            "push the value of team2"
          ],
        [
            "DelVar team2",
            "delete method variable team2"
          ],
        [
            "2-ary &",
            "pop 2 values and push the result of applying &"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push ?thegame",
            "push constant ?thegame"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "DelVar id",
            "delete method variable id"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(1527)",
            "call method PC(1527)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Push ?PC(1233)",
            "push constant ?PC(1233)"
          ],
        [
            "Push ?thegame",
            "push constant ?thegame"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "Spawn",
            "pop thread-local state, argument, and pc and spawn a new thread"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "Push 6",
            "push constant 6"
          ],
        [
            "2-ary ..",
            "pop 2 values and push the result of applying .."
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(id)",
            "get next element and assign to id; push False or True depending on success"
          ],
        [
            "JumpCond False 1668",
            "check if loop is done: pop a value and jump to 1668 if the value is False"
          ],
        [
            "Push ?PC(1597)",
            "push constant ?PC(1597)"
          ],
        [
            "LoadVar id",
            "push the value of id"
          ],
        [
            "DelVar id",
            "delete method variable id"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "Spawn",
            "pop thread-local state, argument, and pc and spawn a new thread"
          ],
        [
            "Jump 1659",
            "set program counter to 1659"
          ],
        [
            "DelVar id",
            "delete method variable id"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ]
      ],
    "locs": [
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                1,
                1,
                30,
                26
              ],
            "line": 1,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "list",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                35
              ],
            "line": 2,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                35
              ],
            "line": 2,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 31,
            "column": 31
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 31,
            "column": 31
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 36,
            "column": 34
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 36,
            "column": 31
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 37
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "list",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                35
              ],
            "line": 2,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "list",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                32
              ],
            "line": 5,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                32
              ],
            "line": 5,
            "endcolumn": 32,
            "column": 1
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 20,
            "column": 19
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 20,
            "column": 19
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "list",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                32
              ],
            "line": 5,
            "endcolumn": 32,
            "column": 1
          },
        {
            "module": "list",
            "endline": 8,
            "stmt": [
                8,
                1,
                8,
                27
              ],
            "line": 8,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 8,
            "stmt": [
                8,
                1,
                8,
                27
              ],
            "line": 8,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "list",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 17,
            "column": 14
          },
        {
            "module": "list",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 17,
            "column": 14
          },
        {
            "module": "list",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 8,
            "stmt": [
                8,
                1,
                8,
                27
              ],
            "line": 8,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "list",
            "endline": 11,
            "stmt": [
                11,
                1,
                11,
                24
              ],
            "line": 11,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "list",
            "endline": 11,
            "stmt": [
                11,
                1,
                11,
                24
              ],
            "line": 11,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "list",
            "endline": 12,
            "stmt": [
                12,
                1,
                12,
                27
              ],
            "line": 12,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 12,
            "stmt": [
                12,
                1,
                12,
                27
              ],
            "line": 12,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 32,
            "column": 21
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 32,
            "column": 21
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 32,
            "column": 21
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 32,
            "column": 21
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 31,
            "column": 31
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 31,
            "column": 31
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 32,
            "column": 27
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 32,
            "column": 21
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 33,
            "column": 14
          },
        {
            "module": "list",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                33
              ],
            "line": 13,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 12,
            "stmt": [
                12,
                1,
                12,
                27
              ],
            "line": 12,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "list",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                24
              ],
            "line": 16,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                24
              ],
            "line": 16,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "list",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                12
              ],
            "line": 17,
            "endcolumn": 12,
            "column": 12
          },
        {
            "module": "list",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                12
              ],
            "line": 17,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "list",
            "endline": 18,
            "stmt": [
                18,
                5,
                18,
                14
              ],
            "line": 18,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 18,
            "stmt": [
                18,
                5,
                18,
                14
              ],
            "line": 18,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 18,
            "stmt": [
                18,
                5,
                18,
                14
              ],
            "line": 18,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 18,
            "stmt": [
                18,
                5,
                18,
                14
              ],
            "line": 18,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 18,
            "stmt": [
                18,
                5,
                18,
                14
              ],
            "line": 18,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 19,
            "stmt": [
                19,
                9,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 17,
            "column": 9
          },
        {
            "module": "list",
            "endline": 19,
            "stmt": [
                19,
                9,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 17,
            "column": 9
          },
        {
            "module": "list",
            "endline": 19,
            "stmt": [
                19,
                9,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "list",
            "endline": 19,
            "stmt": [
                19,
                9,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "list",
            "endline": 19,
            "stmt": [
                19,
                9,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 17,
            "column": 9
          },
        {
            "module": "list",
            "endline": 19,
            "stmt": [
                19,
                9,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 15,
            "column": 9
          },
        {
            "module": "list",
            "endline": 18,
            "stmt": [
                18,
                5,
                18,
                14
              ],
            "line": 18,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                24
              ],
            "line": 16,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "list",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                24
              ],
            "line": 16,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "list",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                24
              ],
            "line": 16,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "list",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                26
              ],
            "line": 22,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                26
              ],
            "line": 22,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                29
              ],
            "line": 23,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                26
              ],
            "line": 22,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "list",
            "endline": 26,
            "stmt": [
                26,
                1,
                26,
                27
              ],
            "line": 26,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 26,
            "stmt": [
                26,
                1,
                26,
                27
              ],
            "line": 26,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "list",
            "endline": 27,
            "stmt": [
                27,
                5,
                27,
                29
              ],
            "line": 27,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 26,
            "stmt": [
                26,
                1,
                26,
                27
              ],
            "line": 26,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "list",
            "endline": 30,
            "stmt": [
                30,
                1,
                30,
                29
              ],
            "line": 30,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 30,
            "stmt": [
                30,
                1,
                30,
                29
              ],
            "line": 30,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "list",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                31
              ],
            "line": 31,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 30,
            "stmt": [
                30,
                1,
                30,
                29
              ],
            "line": 30,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "list",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                28
              ],
            "line": 34,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                28
              ],
            "line": 34,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "list",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                36
              ],
            "line": 35,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                28
              ],
            "line": 34,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "list",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "list",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                15
              ],
            "line": 39,
            "endcolumn": 8,
            "column": 8
          },
        {
            "module": "list",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                15
              ],
            "line": 39,
            "endcolumn": 14,
            "column": 13
          },
        {
            "module": "list",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                15
              ],
            "line": 39,
            "endcolumn": 14,
            "column": 8
          },
        {
            "module": "list",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                15
              ],
            "line": 39,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "list",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                19
              ],
            "line": 40,
            "endcolumn": 19,
            "column": 18
          },
        {
            "module": "list",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                19
              ],
            "line": 40,
            "endcolumn": 19,
            "column": 18
          },
        {
            "module": "list",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                19
              ],
            "line": 40,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "list",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                15
              ],
            "line": 39,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 44,
            "column": 29
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 35,
            "column": 29
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 44,
            "column": 29
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 43,
            "column": 43
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 43,
            "column": 43
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 44,
            "column": 38
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 44,
            "column": 29
          },
        {
            "module": "list",
            "endline": 42,
            "stmt": [
                42,
                9,
                42,
                53
              ],
            "line": 42,
            "endcolumn": 27,
            "column": 9
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 37,
            "column": 34
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 45,
            "column": 45
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 49
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 45
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 49
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "list",
            "endline": 43,
            "stmt": [
                43,
                9,
                43,
                64
              ],
            "line": 43,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 38,
            "column": 35
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 38,
            "column": 35
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 51
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 46
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 51
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "list",
            "endline": 44,
            "stmt": [
                44,
                9,
                44,
                57
              ],
            "line": 44,
            "endcolumn": 20,
            "column": 9
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 32,
            "column": 28
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 32,
            "column": 28
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 33,
            "column": 22
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 43,
            "column": 38
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 42,
            "column": 38
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 42,
            "column": 38
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 43,
            "column": 38
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 59,
            "column": 54
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 59,
            "column": 54
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 60,
            "column": 48
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 60,
            "column": 22
          },
        {
            "module": "list",
            "endline": 45,
            "stmt": [
                45,
                13,
                45,
                60
              ],
            "line": 45,
            "endcolumn": 20,
            "column": 13
          },
        {
            "module": "list",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "list",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "list",
            "endline": 48,
            "stmt": [
                48,
                1,
                48,
                29
              ],
            "line": 48,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 48,
            "stmt": [
                48,
                1,
                48,
                29
              ],
            "line": 48,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "list",
            "endline": 49,
            "stmt": [
                49,
                5,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "list",
            "endline": 49,
            "stmt": [
                49,
                5,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "list",
            "endline": 49,
            "stmt": [
                49,
                5,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "list",
            "endline": 49,
            "stmt": [
                49,
                5,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "list",
            "endline": 49,
            "stmt": [
                49,
                5,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 27,
            "column": 14
          },
        {
            "module": "list",
            "endline": 49,
            "stmt": [
                49,
                5,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 48,
            "stmt": [
                48,
                1,
                48,
                29
              ],
            "line": 48,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "list",
            "endline": 52,
            "stmt": [
                52,
                1,
                52,
                31
              ],
            "line": 52,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 52,
            "stmt": [
                52,
                1,
                52,
                31
              ],
            "line": 52,
            "endcolumn": 31,
            "column": 1
          },
        {
            "module": "list",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                18
              ],
            "line": 53,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "list",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                18
              ],
            "line": 53,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "list",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                18
              ],
            "line": 53,
            "endcolumn": 18,
            "column": 13
          },
        {
            "module": "list",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                18
              ],
            "line": 53,
            "endcolumn": 11,
            "column": 5
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 38,
            "column": 38
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 41,
            "column": 41
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 41,
            "column": 38
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 22
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 25,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 25,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 43
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "list",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                45
              ],
            "line": 54,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "list",
            "endline": 52,
            "stmt": [
                52,
                1,
                52,
                31
              ],
            "line": 52,
            "endcolumn": 31,
            "column": 1
          },
        {
            "module": "list",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                26
              ],
            "line": 57,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                26
              ],
            "line": 57,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "list",
            "endline": 58,
            "stmt": [
                58,
                5,
                58,
                9
              ],
            "line": 58,
            "endcolumn": 9,
            "column": 9
          },
        {
            "module": "list",
            "endline": 58,
            "stmt": [
                58,
                5,
                58,
                9
              ],
            "line": 58,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                20
              ],
            "line": 59,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                20
              ],
            "line": 59,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "list",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                20
              ],
            "line": 59,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "list",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                20
              ],
            "line": 59,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "list",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                20
              ],
            "line": 59,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "list",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                20
              ],
            "line": 59,
            "endcolumn": 19,
            "column": 11
          },
        {
            "module": "list",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                20
              ],
            "line": 59,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "list",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "list",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "list",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "list",
            "endline": 60,
            "stmt": [
                60,
                9,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "list",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                20
              ],
            "line": 59,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "list",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                26
              ],
            "line": 57,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "list",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                26
              ],
            "line": 57,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "list",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                26
              ],
            "line": 57,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "list",
            "endline": 57,
            "stmt": [
                57,
                1,
                57,
                26
              ],
            "line": 57,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "list",
            "endline": 63,
            "stmt": [
                63,
                1,
                63,
                41
              ],
            "line": 63,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 63,
            "stmt": [
                63,
                1,
                63,
                41
              ],
            "line": 63,
            "endcolumn": 41,
            "column": 1
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 24,
            "column": 19
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 24,
            "column": 19
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 25,
            "column": 15
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 35,
            "column": 30
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 35,
            "column": 15
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 97,
            "column": 14
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 75,
            "column": 75
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 89,
            "column": 84
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 90,
            "column": 80
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 94,
            "column": 94
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 94,
            "column": 80
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 94,
            "column": 75
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 48,
            "column": 48
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 49,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 49,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 59,
            "column": 54
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 61,
            "column": 61
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 61,
            "column": 61
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 62,
            "column": 54
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 62,
            "column": 54
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 62,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 96
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 97,
            "column": 42
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 40,
            "column": 38
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 97,
            "column": 14
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 97,
            "column": 14
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 97,
            "column": 14
          },
        {
            "module": "list",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                97
              ],
            "line": 64,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 63,
            "stmt": [
                63,
                1,
                63,
                41
              ],
            "line": 63,
            "endcolumn": 41,
            "column": 1
          },
        {
            "module": "list",
            "endline": 67,
            "stmt": [
                67,
                1,
                67,
                34
              ],
            "line": 67,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 67,
            "stmt": [
                67,
                1,
                67,
                34
              ],
            "line": 67,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "list",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                14
              ],
            "line": 68,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                14
              ],
            "line": 68,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                14
              ],
            "line": 68,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                14
              ],
            "line": 68,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                14
              ],
            "line": 69,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                14
              ],
            "line": 69,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                14
              ],
            "line": 69,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                14
              ],
            "line": 69,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                14
              ],
            "line": 69,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 28,
            "column": 20
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 25,
            "column": 20
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 25,
            "column": 20
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 28,
            "column": 20
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 28,
            "column": 20
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 29,
            "column": 18
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 29,
            "column": 18
          },
        {
            "module": "list",
            "endline": 70,
            "stmt": [
                70,
                9,
                70,
                29
              ],
            "line": 70,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "list",
            "endline": 69,
            "stmt": [
                69,
                5,
                69,
                14
              ],
            "line": 69,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 67,
            "stmt": [
                67,
                1,
                67,
                34
              ],
            "line": 67,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "list",
            "endline": 67,
            "stmt": [
                67,
                1,
                67,
                34
              ],
            "line": 67,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "list",
            "endline": 67,
            "stmt": [
                67,
                1,
                67,
                34
              ],
            "line": 67,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "list",
            "endline": 73,
            "stmt": [
                73,
                1,
                73,
                34
              ],
            "line": 73,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 73,
            "stmt": [
                73,
                1,
                73,
                34
              ],
            "line": 73,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 23,
            "column": 19
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 28,
            "column": 19
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 63,
            "column": 14
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 35,
            "column": 35
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 62,
            "column": 37
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 37,
            "column": 37
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 40,
            "column": 37
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 40,
            "column": 37
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 62,
            "column": 37
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 61,
            "column": 49
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 54,
            "column": 54
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 54,
            "column": 54
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 55,
            "column": 49
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 61,
            "column": 49
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 58,
            "column": 58
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 58,
            "column": 58
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 61,
            "column": 49
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 61,
            "column": 61
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 61,
            "column": 61
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 61,
            "column": 49
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 62,
            "column": 43
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 62,
            "column": 37
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 63,
            "column": 35
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 63,
            "column": 35
          },
        {
            "module": "list",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                63
              ],
            "line": 74,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 73,
            "stmt": [
                73,
                1,
                73,
                34
              ],
            "line": 73,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "list",
            "endline": 77,
            "stmt": [
                77,
                1,
                77,
                35
              ],
            "line": 77,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 77,
            "stmt": [
                77,
                1,
                77,
                35
              ],
            "line": 77,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 26,
            "column": 26
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 26,
            "column": 26
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 27,
            "column": 14
          },
        {
            "module": "list",
            "endline": 78,
            "stmt": [
                78,
                5,
                78,
                27
              ],
            "line": 78,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "list",
            "endline": 77,
            "stmt": [
                77,
                1,
                77,
                35
              ],
            "line": 77,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "list",
            "endline": 81,
            "stmt": [
                81,
                1,
                81,
                29
              ],
            "line": 81,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 81,
            "stmt": [
                81,
                1,
                81,
                29
              ],
            "line": 81,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "list",
            "endline": 82,
            "stmt": [
                82,
                5,
                82,
                13
              ],
            "line": 82,
            "endcolumn": 13,
            "column": 12
          },
        {
            "module": "list",
            "endline": 82,
            "stmt": [
                82,
                5,
                82,
                13
              ],
            "line": 82,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "list",
            "endline": 83,
            "stmt": [
                83,
                5,
                83,
                13
              ],
            "line": 83,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "list",
            "endline": 83,
            "stmt": [
                83,
                5,
                83,
                13
              ],
            "line": 83,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "list",
            "endline": 83,
            "stmt": [
                83,
                5,
                83,
                13
              ],
            "line": 83,
            "endcolumn": 13,
            "column": 5
          },
        {
            "module": "list",
            "endline": 84,
            "stmt": [
                84,
                5,
                84,
                18
              ],
            "line": 84,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 84,
            "stmt": [
                84,
                5,
                84,
                18
              ],
            "line": 84,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "list",
            "endline": 84,
            "stmt": [
                84,
                5,
                84,
                18
              ],
            "line": 84,
            "endcolumn": 17,
            "column": 11
          },
        {
            "module": "list",
            "endline": 84,
            "stmt": [
                84,
                5,
                84,
                18
              ],
            "line": 84,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "list",
            "endline": 85,
            "stmt": [
                85,
                9,
                85,
                24
              ],
            "line": 85,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "list",
            "endline": 85,
            "stmt": [
                85,
                9,
                85,
                24
              ],
            "line": 85,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "list",
            "endline": 85,
            "stmt": [
                85,
                9,
                85,
                24
              ],
            "line": 85,
            "endcolumn": 15,
            "column": 9
          },
        {
            "module": "list",
            "endline": 86,
            "stmt": [
                86,
                13,
                86,
                26
              ],
            "line": 86,
            "endcolumn": 26,
            "column": 13
          },
        {
            "module": "list",
            "endline": 86,
            "stmt": [
                86,
                13,
                86,
                26
              ],
            "line": 86,
            "endcolumn": 26,
            "column": 13
          },
        {
            "module": "list",
            "endline": 86,
            "stmt": [
                86,
                13,
                86,
                26
              ],
            "line": 86,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "list",
            "endline": 86,
            "stmt": [
                86,
                13,
                86,
                26
              ],
            "line": 86,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "list",
            "endline": 86,
            "stmt": [
                86,
                13,
                86,
                26
              ],
            "line": 86,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "list",
            "endline": 86,
            "stmt": [
                86,
                13,
                86,
                26
              ],
            "line": 86,
            "endcolumn": 26,
            "column": 13
          },
        {
            "module": "list",
            "endline": 86,
            "stmt": [
                86,
                13,
                86,
                26
              ],
            "line": 86,
            "endcolumn": 19,
            "column": 13
          },
        {
            "module": "list",
            "endline": 87,
            "stmt": [
                87,
                13,
                87,
                22
              ],
            "line": 87,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "list",
            "endline": 87,
            "stmt": [
                87,
                13,
                87,
                22
              ],
            "line": 87,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "list",
            "endline": 87,
            "stmt": [
                87,
                13,
                87,
                22
              ],
            "line": 87,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 87,
            "stmt": [
                87,
                13,
                87,
                22
              ],
            "line": 87,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 87,
            "stmt": [
                87,
                13,
                87,
                22
              ],
            "line": 87,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 87,
            "stmt": [
                87,
                13,
                87,
                22
              ],
            "line": 87,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "list",
            "endline": 87,
            "stmt": [
                87,
                13,
                87,
                22
              ],
            "line": 87,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "list",
            "endline": 87,
            "stmt": [
                87,
                13,
                87,
                22
              ],
            "line": 87,
            "endcolumn": 16,
            "column": 13
          },
        {
            "module": "list",
            "endline": 84,
            "stmt": [
                84,
                5,
                84,
                18
              ],
            "line": 84,
            "endcolumn": 18,
            "column": 5
          },
        {
            "module": "list",
            "endline": 81,
            "stmt": [
                81,
                1,
                81,
                29
              ],
            "line": 81,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "list",
            "endline": 81,
            "stmt": [
                81,
                1,
                81,
                29
              ],
            "line": 81,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "list",
            "endline": 81,
            "stmt": [
                81,
                1,
                81,
                29
              ],
            "line": 81,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "list",
            "endline": 90,
            "stmt": [
                90,
                1,
                90,
                30
              ],
            "line": 90,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 90,
            "stmt": [
                90,
                1,
                90,
                30
              ],
            "line": 90,
            "endcolumn": 30,
            "column": 1
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 33,
            "column": 30
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 35,
            "column": 35
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 30
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 30
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "list",
            "endline": 91,
            "stmt": [
                91,
                5,
                91,
                38
              ],
            "line": 91,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 90,
            "stmt": [
                90,
                1,
                90,
                30
              ],
            "line": 90,
            "endcolumn": 30,
            "column": 1
          },
        {
            "module": "list",
            "endline": 90,
            "stmt": [
                90,
                1,
                90,
                30
              ],
            "line": 90,
            "endcolumn": 30,
            "column": 1
          },
        {
            "module": "list",
            "endline": 94,
            "stmt": [
                94,
                1,
                94,
                24
              ],
            "line": 94,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "list",
            "endline": 94,
            "stmt": [
                94,
                1,
                94,
                24
              ],
            "line": 94,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "list",
            "endline": 95,
            "stmt": [
                95,
                5,
                95,
                27
              ],
            "line": 95,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "list",
            "endline": 94,
            "stmt": [
                94,
                1,
                94,
                24
              ],
            "line": 94,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "list",
            "endline": 94,
            "stmt": [
                94,
                1,
                94,
                24
              ],
            "line": 94,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                23
              ],
            "line": 1,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                23
              ],
            "line": 1,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 2,
            "stmt": [
                2,
                5,
                2,
                12
              ],
            "line": 2,
            "endcolumn": 12,
            "column": 10
          },
        {
            "module": "bag",
            "endline": 2,
            "stmt": [
                2,
                5,
                2,
                12
              ],
            "line": 2,
            "endcolumn": 8,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                23
              ],
            "line": 1,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                23
              ],
            "line": 1,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                26
              ],
            "line": 4,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                26
              ],
            "line": 4,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 8,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                26
              ],
            "line": 4,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                26
              ],
            "line": 4,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                27
              ],
            "line": 7,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                27
              ],
            "line": 7,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                12
              ],
            "line": 8,
            "endcolumn": 12,
            "column": 10
          },
        {
            "module": "bag",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                12
              ],
            "line": 8,
            "endcolumn": 8,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                19
              ],
            "line": 10,
            "endcolumn": 12,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                19
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                19
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                19
              ],
            "line": 10,
            "endcolumn": 10,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 14,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 20,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                19
              ],
            "line": 10,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 14,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 19,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                27
              ],
            "line": 7,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                27
              ],
            "line": 7,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                27
              ],
            "line": 7,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                39
              ],
            "line": 15,
            "endcolumn": 20,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                39
              ],
            "line": 15,
            "endcolumn": 39,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                40
              ],
            "line": 16,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                40
              ],
            "line": 16,
            "endcolumn": 40,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                17
              ],
            "line": 17,
            "endcolumn": 10,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                17
              ],
            "line": 17,
            "endcolumn": 16,
            "column": 15
          },
        {
            "module": "bag",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                17
              ],
            "line": 17,
            "endcolumn": 16,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                17
              ],
            "line": 17,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 18,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 18,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 23,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 23,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 15,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                17
              ],
            "line": 17,
            "endcolumn": 17,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 20,
            "stmt": [
                20,
                9,
                20,
                17
              ],
            "line": 20,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 20,
            "stmt": [
                20,
                9,
                20,
                17
              ],
            "line": 20,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 20,
            "stmt": [
                20,
                9,
                20,
                17
              ],
            "line": 20,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 20,
            "stmt": [
                20,
                9,
                20,
                17
              ],
            "line": 20,
            "endcolumn": 15,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                40
              ],
            "line": 16,
            "endcolumn": 40,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                40
              ],
            "line": 16,
            "endcolumn": 40,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                23
              ],
            "line": 22,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                23
              ],
            "line": 22,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 23,
            "stmt": [
                23,
                1,
                23,
                27
              ],
            "line": 23,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 23,
            "stmt": [
                23,
                1,
                23,
                27
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 24,
            "stmt": [
                24,
                5,
                24,
                13
              ],
            "line": 24,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 24,
            "stmt": [
                24,
                5,
                24,
                13
              ],
            "line": 24,
            "endcolumn": 11,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 23,
            "stmt": [
                23,
                1,
                23,
                27
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 23,
            "stmt": [
                23,
                1,
                23,
                27
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 23,
            "stmt": [
                23,
                1,
                23,
                27
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 28,
            "stmt": [
                28,
                1,
                28,
                23
              ],
            "line": 28,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 28,
            "stmt": [
                28,
                1,
                28,
                23
              ],
            "line": 28,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                27
              ],
            "line": 29,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                27
              ],
            "line": 29,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 13,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                25
              ],
            "line": 31,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                25
              ],
            "line": 31,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                25
              ],
            "line": 31,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                25
              ],
            "line": 31,
            "endcolumn": 25,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                25
              ],
            "line": 31,
            "endcolumn": 11,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                27
              ],
            "line": 29,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                27
              ],
            "line": 29,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 33,
            "stmt": [
                33,
                1,
                33,
                23
              ],
            "line": 33,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 33,
            "stmt": [
                33,
                1,
                33,
                23
              ],
            "line": 33,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                27
              ],
            "line": 34,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                27
              ],
            "line": 34,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 13,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                25
              ],
            "line": 36,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                25
              ],
            "line": 36,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                25
              ],
            "line": 36,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                25
              ],
            "line": 36,
            "endcolumn": 25,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                25
              ],
            "line": 36,
            "endcolumn": 11,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                27
              ],
            "line": 34,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                27
              ],
            "line": 34,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                26
              ],
            "line": 39,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                26
              ],
            "line": 39,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                26
              ],
            "line": 39,
            "endcolumn": 25,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                26
              ],
            "line": 39,
            "endcolumn": 26,
            "column": 11
          },
        {
            "module": "bag",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                26
              ],
            "line": 39,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 41,
            "stmt": [
                41,
                1,
                41,
                21
              ],
            "line": 41,
            "endcolumn": 11,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 41,
            "stmt": [
                41,
                1,
                41,
                21
              ],
            "line": 41,
            "endcolumn": 21,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 42,
            "stmt": [
                42,
                1,
                42,
                32
              ],
            "line": 42,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 42,
            "stmt": [
                42,
                1,
                42,
                32
              ],
            "line": 42,
            "endcolumn": 32,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                15
              ],
            "line": 43,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                15
              ],
            "line": 43,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                15
              ],
            "line": 43,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                15
              ],
            "line": 43,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                21
              ],
            "line": 44,
            "endcolumn": 10,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                21
              ],
            "line": 44,
            "endcolumn": 20,
            "column": 15
          },
        {
            "module": "bag",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                21
              ],
            "line": 44,
            "endcolumn": 20,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                21
              ],
            "line": 44,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 22,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                21
              ],
            "line": 44,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 21,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 42,
            "stmt": [
                42,
                1,
                42,
                32
              ],
            "line": 42,
            "endcolumn": 32,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 49,
            "stmt": [
                49,
                1,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 49,
            "stmt": [
                49,
                1,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 50,
            "stmt": [
                50,
                1,
                50,
                35
              ],
            "line": 50,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 50,
            "stmt": [
                50,
                1,
                50,
                35
              ],
            "line": 50,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                15
              ],
            "line": 51,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                15
              ],
            "line": 51,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                15
              ],
            "line": 51,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                15
              ],
            "line": 51,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 52,
            "stmt": [
                52,
                5,
                52,
                21
              ],
            "line": 52,
            "endcolumn": 10,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 52,
            "stmt": [
                52,
                5,
                52,
                21
              ],
            "line": 52,
            "endcolumn": 20,
            "column": 15
          },
        {
            "module": "bag",
            "endline": 52,
            "stmt": [
                52,
                5,
                52,
                21
              ],
            "line": 52,
            "endcolumn": 20,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 52,
            "stmt": [
                52,
                5,
                52,
                21
              ],
            "line": 52,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 21,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 25,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 26,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 26,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 30
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 22,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 17,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 21,
            "column": 19
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 22,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 22,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 27,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 10,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 56,
            "stmt": [
                56,
                13,
                56,
                27
              ],
            "line": 56,
            "endcolumn": 22,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 56,
            "stmt": [
                56,
                13,
                56,
                27
              ],
            "line": 56,
            "endcolumn": 26,
            "column": 24
          },
        {
            "module": "bag",
            "endline": 56,
            "stmt": [
                56,
                13,
                56,
                27
              ],
            "line": 56,
            "endcolumn": 26,
            "column": 24
          },
        {
            "module": "bag",
            "endline": 56,
            "stmt": [
                56,
                13,
                56,
                27
              ],
            "line": 56,
            "endcolumn": 27,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 56,
            "stmt": [
                56,
                13,
                56,
                27
              ],
            "line": 56,
            "endcolumn": 27,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 50,
            "stmt": [
                50,
                1,
                50,
                35
              ],
            "line": 50,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 50,
            "stmt": [
                50,
                1,
                50,
                35
              ],
            "line": 50,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 59,
            "stmt": [
                59,
                1,
                59,
                39
              ],
            "line": 59,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 59,
            "stmt": [
                59,
                1,
                59,
                39
              ],
            "line": 59,
            "endcolumn": 39,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 8,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 8,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 13,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 14,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 63,
            "stmt": [
                63,
                9,
                63,
                24
              ],
            "line": 63,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 63,
            "stmt": [
                63,
                9,
                63,
                24
              ],
            "line": 63,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 63,
            "stmt": [
                63,
                9,
                63,
                24
              ],
            "line": 63,
            "endcolumn": 15,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                21
              ],
            "line": 64,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                21
              ],
            "line": 64,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                21
              ],
            "line": 64,
            "endcolumn": 20,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                21
              ],
            "line": 64,
            "endcolumn": 14,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 65,
            "stmt": [
                65,
                17,
                65,
                27
              ],
            "line": 65,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "bag",
            "endline": 65,
            "stmt": [
                65,
                17,
                65,
                27
              ],
            "line": 65,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "bag",
            "endline": 65,
            "stmt": [
                65,
                17,
                65,
                27
              ],
            "line": 65,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "bag",
            "endline": 65,
            "stmt": [
                65,
                17,
                65,
                27
              ],
            "line": 65,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "bag",
            "endline": 65,
            "stmt": [
                65,
                17,
                65,
                27
              ],
            "line": 65,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                21
              ],
            "line": 64,
            "endcolumn": 21,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 23,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 16,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 24,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                17,
                69,
                33
              ],
            "line": 69,
            "endcolumn": 32,
            "column": 31
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                17,
                69,
                33
              ],
            "line": 69,
            "endcolumn": 33,
            "column": 26
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                17,
                69,
                33
              ],
            "line": 69,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 56,
            "column": 51
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 52,
            "column": 51
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 52,
            "column": 51
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 56,
            "column": 51
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 56,
            "column": 55
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 56,
            "column": 51
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 57,
            "column": 44
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 42,
            "column": 35
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 73,
            "column": 65
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 66,
            "column": 65
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 73,
            "column": 65
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 69,
            "column": 69
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 73,
            "column": 73
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 73,
            "column": 69
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 73,
            "column": 65
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 52
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 34,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 34,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 34,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 40,
            "column": 36
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 40,
            "column": 36
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 40,
            "column": 39
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 40,
            "column": 36
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 41,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 74
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 48
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 49,
            "column": 48
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 49,
            "column": 48
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 48
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 52
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 52
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 48
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 53,
            "column": 35
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 53,
            "column": 30
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 28,
            "column": 21
          },
        {
            "module": "bag",
            "endline": 59,
            "stmt": [
                59,
                1,
                59,
                39
              ],
            "line": 59,
            "endcolumn": 39,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                35
              ],
            "line": 4,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                35
              ],
            "line": 4,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "synch",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "synch",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "synch",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 24,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                35
              ],
            "line": 4,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                35
              ],
            "line": 4,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                23
              ],
            "line": 7,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                23
              ],
            "line": 7,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 8,
            "stmt": [
                8,
                16,
                8,
                21
              ],
            "line": 8,
            "endcolumn": 21,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 8,
            "stmt": [
                8,
                16,
                8,
                21
              ],
            "line": 8,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "synch",
            "endline": 8,
            "stmt": [
                8,
                16,
                8,
                21
              ],
            "line": 8,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "synch",
            "endline": 8,
            "stmt": [
                8,
                16,
                8,
                21
              ],
            "line": 8,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 8,
            "stmt": [
                8,
                16,
                8,
                21
              ],
            "line": 8,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 8,
            "stmt": [
                8,
                16,
                8,
                21
              ],
            "line": 8,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 8,
            "stmt": [
                8,
                16,
                8,
                21
              ],
            "line": 8,
            "endcolumn": 21,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                23
              ],
            "line": 7,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                29
              ],
            "line": 10,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                29
              ],
            "line": 10,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 11,
            "stmt": [
                11,
                5,
                11,
                15
              ],
            "line": 11,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                22
              ],
            "line": 12,
            "endcolumn": 22,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                22
              ],
            "line": 12,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                22
              ],
            "line": 12,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                18
              ],
            "line": 13,
            "endcolumn": 11,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                18
              ],
            "line": 13,
            "endcolumn": 11,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                18
              ],
            "line": 13,
            "endcolumn": 18,
            "column": 15
          },
        {
            "module": "synch",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                18
              ],
            "line": 13,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 11,
            "stmt": [
                11,
                5,
                11,
                15
              ],
            "line": 11,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                29
              ],
            "line": 10,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                29
              ],
            "line": 10,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                37
              ],
            "line": 15,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                37
              ],
            "line": 15,
            "endcolumn": 37,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                15
              ],
            "line": 16,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 20,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 27,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 27,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 27,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 17,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                19
              ],
            "line": 18,
            "endcolumn": 18,
            "column": 12
          },
        {
            "module": "synch",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                19
              ],
            "line": 18,
            "endcolumn": 10,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                20
              ],
            "line": 19,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                20
              ],
            "line": 19,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                20
              ],
            "line": 19,
            "endcolumn": 20,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                20
              ],
            "line": 19,
            "endcolumn": 20,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                20
              ],
            "line": 19,
            "endcolumn": 16,
            "column": 13
          },
        {
            "module": "synch",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                15
              ],
            "line": 16,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                15
              ],
            "line": 16,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                15
              ],
            "line": 16,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                37
              ],
            "line": 15,
            "endcolumn": 37,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                37
              ],
            "line": 15,
            "endcolumn": 37,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 21,
            "stmt": [
                21,
                1,
                21,
                34
              ],
            "line": 21,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 21,
            "stmt": [
                21,
                1,
                21,
                34
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 37,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 37,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 18,
            "column": 12
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 35,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 29,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 35,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 35,
            "column": 32
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 35,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 37,
            "column": 12
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 37,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 22,
            "stmt": [
                22,
                5,
                22,
                37
              ],
            "line": 22,
            "endcolumn": 37,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                18
              ],
            "line": 23,
            "endcolumn": 18,
            "column": 12
          },
        {
            "module": "synch",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                18
              ],
            "line": 23,
            "endcolumn": 18,
            "column": 12
          },
        {
            "module": "synch",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                18
              ],
            "line": 23,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 21,
            "stmt": [
                21,
                1,
                21,
                34
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 21,
            "stmt": [
                21,
                1,
                21,
                34
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 25,
            "stmt": [
                25,
                1,
                25,
                26
              ],
            "line": 25,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 25,
            "stmt": [
                25,
                1,
                25,
                26
              ],
            "line": 25,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 26,
            "stmt": [
                26,
                5,
                26,
                27
              ],
            "line": 26,
            "endcolumn": 26,
            "column": 22
          },
        {
            "module": "synch",
            "endline": 26,
            "stmt": [
                26,
                5,
                26,
                27
              ],
            "line": 26,
            "endcolumn": 26,
            "column": 22
          },
        {
            "module": "synch",
            "endline": 26,
            "stmt": [
                26,
                5,
                26,
                27
              ],
            "line": 26,
            "endcolumn": 27,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 26,
            "stmt": [
                26,
                5,
                26,
                27
              ],
            "line": 26,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 25,
            "stmt": [
                25,
                1,
                25,
                26
              ],
            "line": 25,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 28,
            "stmt": [
                28,
                1,
                28,
                37
              ],
            "line": 28,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 28,
            "stmt": [
                28,
                1,
                28,
                37
              ],
            "line": 28,
            "endcolumn": 37,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                21
              ],
            "line": 29,
            "endcolumn": 21,
            "column": 15
          },
        {
            "module": "synch",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                21
              ],
            "line": 29,
            "endcolumn": 21,
            "column": 15
          },
        {
            "module": "synch",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                21
              ],
            "line": 29,
            "endcolumn": 21,
            "column": 15
          },
        {
            "module": "synch",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                21
              ],
            "line": 29,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 29,
            "stmt": [
                29,
                5,
                29,
                21
              ],
            "line": 29,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 28,
            "stmt": [
                28,
                1,
                28,
                37
              ],
            "line": 28,
            "endcolumn": 37,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 31,
            "stmt": [
                31,
                1,
                31,
                33
              ],
            "line": 31,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 31,
            "stmt": [
                31,
                1,
                31,
                33
              ],
            "line": 31,
            "endcolumn": 33,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 32,
            "stmt": [
                32,
                5,
                32,
                21
              ],
            "line": 32,
            "endcolumn": 21,
            "column": 15
          },
        {
            "module": "synch",
            "endline": 32,
            "stmt": [
                32,
                5,
                32,
                21
              ],
            "line": 32,
            "endcolumn": 21,
            "column": 15
          },
        {
            "module": "synch",
            "endline": 32,
            "stmt": [
                32,
                5,
                32,
                21
              ],
            "line": 32,
            "endcolumn": 21,
            "column": 15
          },
        {
            "module": "synch",
            "endline": 32,
            "stmt": [
                32,
                5,
                32,
                21
              ],
            "line": 32,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 32,
            "stmt": [
                32,
                5,
                32,
                21
              ],
            "line": 32,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 31,
            "stmt": [
                31,
                1,
                31,
                33
              ],
            "line": 31,
            "endcolumn": 33,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                21
              ],
            "line": 34,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                21
              ],
            "line": 34,
            "endcolumn": 21,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 37,
            "stmt": [
                35,
                16,
                37,
                6
              ],
            "line": 35,
            "endcolumn": 6,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                37,
                6
              ],
            "line": 35,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 26
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 32
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 32
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 36,
            "stmt": [
                36,
                9,
                36,
                23
              ],
            "line": 36,
            "endcolumn": 16,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 36,
            "stmt": [
                36,
                9,
                36,
                23
              ],
            "line": 36,
            "endcolumn": 16,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 36,
            "stmt": [
                36,
                9,
                36,
                23
              ],
            "line": 36,
            "endcolumn": 23,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 36,
            "stmt": [
                36,
                9,
                36,
                23
              ],
            "line": 36,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 35,
            "stmt": [
                35,
                16,
                35,
                32
              ],
            "line": 35,
            "endcolumn": 32,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                21
              ],
            "line": 34,
            "endcolumn": 21,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                21
              ],
            "line": 38,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                21
              ],
            "line": 38,
            "endcolumn": 21,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                15
              ],
            "line": 39,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                23
              ],
            "line": 40,
            "endcolumn": 23,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                23
              ],
            "line": 40,
            "endcolumn": 23,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                23
              ],
            "line": 40,
            "endcolumn": 23,
            "column": 17
          },
        {
            "module": "synch",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                23
              ],
            "line": 40,
            "endcolumn": 23,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                23
              ],
            "line": 40,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                23
              ],
            "line": 40,
            "endcolumn": 23,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 40,
            "stmt": [
                40,
                9,
                40,
                23
              ],
            "line": 40,
            "endcolumn": 23,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 41,
            "stmt": [
                41,
                9,
                41,
                24
              ],
            "line": 41,
            "endcolumn": 16,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 41,
            "stmt": [
                41,
                9,
                41,
                24
              ],
            "line": 41,
            "endcolumn": 16,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 41,
            "stmt": [
                41,
                9,
                41,
                24
              ],
            "line": 41,
            "endcolumn": 24,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 41,
            "stmt": [
                41,
                9,
                41,
                24
              ],
            "line": 41,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                15
              ],
            "line": 39,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                21
              ],
            "line": 38,
            "endcolumn": 21,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 43,
            "stmt": [
                43,
                1,
                43,
                31
              ],
            "line": 43,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 43,
            "stmt": [
                43,
                1,
                43,
                31
              ],
            "line": 43,
            "endcolumn": 31,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                24
              ],
            "line": 44,
            "endcolumn": 22,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                24
              ],
            "line": 44,
            "endcolumn": 22,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                24
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "synch",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                24
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                24
              ],
            "line": 44,
            "endcolumn": 24,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                24
              ],
            "line": 44,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 43,
            "stmt": [
                43,
                1,
                43,
                31
              ],
            "line": 43,
            "endcolumn": 31,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 46,
            "stmt": [
                46,
                1,
                46,
                16
              ],
            "line": 46,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 46,
            "stmt": [
                46,
                1,
                46,
                16
              ],
            "line": 46,
            "endcolumn": 16,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 47,
            "stmt": [
                47,
                5,
                47,
                15
              ],
            "line": 47,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "synch",
            "endline": 47,
            "stmt": [
                47,
                5,
                47,
                15
              ],
            "line": 47,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                24
              ],
            "line": 48,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "synch",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                24
              ],
            "line": 48,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "synch",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                24
              ],
            "line": 48,
            "endcolumn": 24,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                24
              ],
            "line": 48,
            "endcolumn": 24,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                24
              ],
            "line": 48,
            "endcolumn": 17,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 49,
            "stmt": [
                49,
                9,
                49,
                19
              ],
            "line": 49,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 34,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 42,
            "column": 36
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 37,
            "column": 37
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 37,
            "column": 36
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 42,
            "column": 36
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 42,
            "column": 40
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 42,
            "column": 36
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 43,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 43,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 50,
            "stmt": [
                50,
                13,
                50,
                43
              ],
            "line": 50,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 24,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 32,
            "column": 26
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 32,
            "column": 26
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 32,
            "column": 30
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 32,
            "column": 26
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 33,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 33,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 51,
            "stmt": [
                51,
                13,
                51,
                33
              ],
            "line": 51,
            "endcolumn": 16,
            "column": 13
          },
        {
            "module": "synch",
            "endline": 52,
            "stmt": [
                52,
                13,
                52,
                23
              ],
            "line": 52,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 52,
            "stmt": [
                52,
                13,
                52,
                23
              ],
            "line": 52,
            "endcolumn": 23,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 52,
            "stmt": [
                52,
                13,
                52,
                23
              ],
            "line": 52,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "synch",
            "endline": 49,
            "stmt": [
                49,
                9,
                49,
                19
              ],
            "line": 49,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 55,
            "stmt": [
                53,
                20,
                55,
                6
              ],
            "line": 53,
            "endcolumn": 6,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                55,
                6
              ],
            "line": 53,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 32,
            "column": 31
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 32,
            "column": 30
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 32,
            "column": 26
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 55,
            "column": 40
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 63,
            "column": 57
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 58,
            "column": 58
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 58,
            "column": 57
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 63,
            "column": 57
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 63,
            "column": 61
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 63,
            "column": 57
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 64,
            "column": 40
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 64,
            "column": 40
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 71,
            "column": 69
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 71,
            "column": 40
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 37,
            "column": 35
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 72
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 72
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 72
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 72
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 72
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 54,
            "stmt": [
                54,
                13,
                54,
                22
              ],
            "line": 54,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 54,
            "stmt": [
                54,
                13,
                54,
                22
              ],
            "line": 54,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 54,
            "stmt": [
                54,
                13,
                54,
                22
              ],
            "line": 54,
            "endcolumn": 22,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 54,
            "stmt": [
                54,
                13,
                54,
                22
              ],
            "line": 54,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "synch",
            "endline": 53,
            "stmt": [
                53,
                20,
                53,
                72
              ],
            "line": 53,
            "endcolumn": 72,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 46,
            "stmt": [
                46,
                1,
                46,
                16
              ],
            "line": 46,
            "endcolumn": 16,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 56,
            "stmt": [
                56,
                1,
                56,
                14
              ],
            "line": 56,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 56,
            "stmt": [
                56,
                1,
                56,
                14
              ],
            "line": 56,
            "endcolumn": 14,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 59,
            "stmt": [
                57,
                16,
                59,
                6
              ],
            "line": 57,
            "endcolumn": 6,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 20,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 33,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 35,
            "column": 34
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 35,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 35,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 35,
            "column": 19
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 10,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 23,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 43,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 26,
            "column": 26
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 26,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 43,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 39,
            "column": 29
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 42,
            "column": 42
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 42,
            "column": 42
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 42,
            "column": 41
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 43,
            "column": 29
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 43,
            "column": 29
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 43,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 44,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 44,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 58,
            "stmt": [
                58,
                9,
                58,
                44
              ],
            "line": 58,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 36,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 57,
            "stmt": [
                57,
                16,
                57,
                36
              ],
            "line": 57,
            "endcolumn": 36,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 56,
            "stmt": [
                56,
                1,
                56,
                14
              ],
            "line": 56,
            "endcolumn": 14,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 60,
            "stmt": [
                60,
                1,
                60,
                17
              ],
            "line": 60,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 60,
            "stmt": [
                60,
                1,
                60,
                17
              ],
            "line": 60,
            "endcolumn": 17,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 31,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 29,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 31,
            "column": 30
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 31,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 31,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 61,
            "stmt": [
                61,
                16,
                61,
                31
              ],
            "line": 61,
            "endcolumn": 31,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 60,
            "stmt": [
                60,
                1,
                60,
                17
              ],
            "line": 60,
            "endcolumn": 17,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 63,
            "stmt": [
                63,
                1,
                63,
                34
              ],
            "line": 63,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 63,
            "stmt": [
                63,
                1,
                63,
                34
              ],
            "line": 63,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                16
              ],
            "line": 64,
            "endcolumn": 16,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                16
              ],
            "line": 64,
            "endcolumn": 16,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                16
              ],
            "line": 64,
            "endcolumn": 16,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 64,
            "stmt": [
                64,
                5,
                64,
                16
              ],
            "line": 64,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 63,
            "stmt": [
                63,
                1,
                63,
                34
              ],
            "line": 63,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 66,
            "stmt": [
                66,
                1,
                66,
                12
              ],
            "line": 66,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 66,
            "stmt": [
                66,
                1,
                66,
                12
              ],
            "line": 66,
            "endcolumn": 12,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 69,
            "stmt": [
                67,
                16,
                69,
                6
              ],
            "line": 67,
            "endcolumn": 6,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                69,
                6
              ],
            "line": 67,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 25,
            "column": 22
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 25,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                18
              ],
            "line": 68,
            "endcolumn": 13,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                18
              ],
            "line": 68,
            "endcolumn": 13,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                18
              ],
            "line": 68,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                18
              ],
            "line": 68,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                18
              ],
            "line": 68,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                18
              ],
            "line": 68,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                18
              ],
            "line": 68,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 67,
            "stmt": [
                67,
                16,
                67,
                29
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 66,
            "stmt": [
                66,
                1,
                66,
                12
              ],
            "line": 66,
            "endcolumn": 12,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 70,
            "stmt": [
                70,
                1,
                70,
                12
              ],
            "line": 70,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 70,
            "stmt": [
                70,
                1,
                70,
                12
              ],
            "line": 70,
            "endcolumn": 12,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 25,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 25,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 25,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 25,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 23,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 71,
            "stmt": [
                71,
                16,
                71,
                25
              ],
            "line": 71,
            "endcolumn": 25,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 70,
            "stmt": [
                70,
                1,
                70,
                12
              ],
            "line": 70,
            "endcolumn": 12,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 73,
            "stmt": [
                73,
                1,
                73,
                27
              ],
            "line": 73,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 73,
            "stmt": [
                73,
                1,
                73,
                27
              ],
            "line": 73,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                15
              ],
            "line": 74,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                15
              ],
            "line": 74,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                15
              ],
            "line": 74,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "synch",
            "endline": 73,
            "stmt": [
                73,
                1,
                73,
                27
              ],
            "line": 73,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 76,
            "stmt": [
                76,
                1,
                76,
                26
              ],
            "line": 76,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 76,
            "stmt": [
                76,
                1,
                76,
                26
              ],
            "line": 76,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 80,
            "stmt": [
                77,
                16,
                80,
                6
              ],
            "line": 77,
            "endcolumn": 6,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 80,
            "stmt": [
                77,
                16,
                80,
                6
              ],
            "line": 77,
            "endcolumn": 6,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                80,
                6
              ],
            "line": 77,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 22,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 27
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                30
              ],
            "line": 78,
            "endcolumn": 26,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                30
              ],
            "line": 78,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "synch",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                30
              ],
            "line": 78,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "synch",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                30
              ],
            "line": 78,
            "endcolumn": 30,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                30
              ],
            "line": 78,
            "endcolumn": 30,
            "column": 18
          },
        {
            "module": "synch",
            "endline": 78,
            "stmt": [
                78,
                9,
                78,
                30
              ],
            "line": 78,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 79,
            "stmt": [
                79,
                9,
                79,
                26
              ],
            "line": 79,
            "endcolumn": 10,
            "column": 10
          },
        {
            "module": "synch",
            "endline": 79,
            "stmt": [
                79,
                9,
                79,
                26
              ],
            "line": 79,
            "endcolumn": 22,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 79,
            "stmt": [
                79,
                9,
                79,
                26
              ],
            "line": 79,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 79,
            "stmt": [
                79,
                9,
                79,
                26
              ],
            "line": 79,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "synch",
            "endline": 79,
            "stmt": [
                79,
                9,
                79,
                26
              ],
            "line": 79,
            "endcolumn": 25,
            "column": 24
          },
        {
            "module": "synch",
            "endline": 79,
            "stmt": [
                79,
                9,
                79,
                26
              ],
            "line": 79,
            "endcolumn": 26,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 79,
            "stmt": [
                79,
                9,
                79,
                26
              ],
            "line": 79,
            "endcolumn": 26,
            "column": 14
          },
        {
            "module": "synch",
            "endline": 79,
            "stmt": [
                79,
                9,
                79,
                26
              ],
            "line": 79,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "synch",
            "endline": 77,
            "stmt": [
                77,
                16,
                77,
                28
              ],
            "line": 77,
            "endcolumn": 28,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 76,
            "stmt": [
                76,
                1,
                76,
                26
              ],
            "line": 76,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 81,
            "stmt": [
                81,
                1,
                81,
                17
              ],
            "line": 81,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 81,
            "stmt": [
                81,
                1,
                81,
                17
              ],
            "line": 81,
            "endcolumn": 17,
            "column": 1
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 41,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 31,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 40,
            "column": 33
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 34,
            "column": 33
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 40,
            "column": 33
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 40,
            "column": 37
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 40,
            "column": 37
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 40,
            "column": 33
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 41,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 41,
            "column": 21
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 82,
            "stmt": [
                82,
                16,
                82,
                41
              ],
            "line": 82,
            "endcolumn": 41,
            "column": 16
          },
        {
            "module": "synch",
            "endline": 81,
            "stmt": [
                81,
                1,
                81,
                17
              ],
            "line": 81,
            "endcolumn": 17,
            "column": 1
          },
        {
            "module": "game",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                24
              ],
            "line": 4,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "game",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                24
              ],
            "line": 4,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 60,
            "column": 14
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 25,
            "column": 24
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 60,
            "column": 14
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 33,
            "column": 28
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 37,
            "column": 36
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 60,
            "column": 14
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 45,
            "column": 40
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 49,
            "column": 48
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 60,
            "column": 14
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 56,
            "column": 52
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 64,
            "column": 63
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 64,
            "column": 59
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 60,
            "column": 14
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 6,
            "endcolumn": 24,
            "column": 13
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 6,
            "endcolumn": 37,
            "column": 36
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 6,
            "endcolumn": 37,
            "column": 27
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 60,
            "column": 14
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 6,
            "endcolumn": 47,
            "column": 40
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 6,
            "endcolumn": 60,
            "column": 59
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 6,
            "endcolumn": 60,
            "column": 50
          },
        {
            "module": "game",
            "endline": 6,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 60,
            "column": 14
          },
        {
            "module": "game",
            "endline": 5,
            "stmt": [
                5,
                5,
                6,
                61
              ],
            "line": 5,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "game",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                24
              ],
            "line": 4,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "game",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                24
              ],
            "line": 4,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "game",
            "endline": 8,
            "stmt": [
                8,
                1,
                8,
                19
              ],
            "line": 8,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "game",
            "endline": 8,
            "stmt": [
                8,
                1,
                8,
                19
              ],
            "line": 8,
            "endcolumn": 19,
            "column": 1
          },
        {
            "module": "game",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                21
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                21
              ],
            "line": 9,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "game",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                21
              ],
            "line": 9,
            "endcolumn": 20,
            "column": 14
          },
        {
            "module": "game",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                21
              ],
            "line": 9,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                21
              ],
            "line": 9,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                15
              ],
            "line": 10,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "game",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                15
              ],
            "line": 10,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 29,
            "column": 23
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 29,
            "column": 20
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 29,
            "column": 20
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 30,
            "column": 16
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 83,
            "column": 15
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 45,
            "column": 45
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 52,
            "column": 48
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 52,
            "column": 45
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 52,
            "column": 45
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 53,
            "column": 41
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 58,
            "column": 58
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 58,
            "column": 41
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 83,
            "column": 15
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 69,
            "column": 69
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 76,
            "column": 72
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 76,
            "column": 69
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 76,
            "column": 69
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 77,
            "column": 65
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 82,
            "column": 82
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 82,
            "column": 65
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 38,
            "column": 37
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 83,
            "column": 15
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                13,
                14,
                43
              ],
            "line": 14,
            "endcolumn": 42,
            "column": 18
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                13,
                14,
                43
              ],
            "line": 14,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                13,
                14,
                43
              ],
            "line": 14,
            "endcolumn": 32,
            "column": 22
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                13,
                14,
                43
              ],
            "line": 14,
            "endcolumn": 32,
            "column": 19
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                13,
                14,
                43
              ],
            "line": 14,
            "endcolumn": 42,
            "column": 18
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                13,
                14,
                43
              ],
            "line": 14,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                13,
                14,
                43
              ],
            "line": 14,
            "endcolumn": 42,
            "column": 39
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                13,
                14,
                43
              ],
            "line": 14,
            "endcolumn": 42,
            "column": 36
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                13,
                14,
                43
              ],
            "line": 14,
            "endcolumn": 42,
            "column": 18
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                13,
                14,
                43
              ],
            "line": 14,
            "endcolumn": 43,
            "column": 13
          },
        {
            "module": "game",
            "endline": 14,
            "stmt": [
                14,
                13,
                14,
                43
              ],
            "line": 14,
            "endcolumn": 43,
            "column": 13
          },
        {
            "module": "game",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                84
              ],
            "line": 13,
            "endcolumn": 84,
            "column": 9
          },
        {
            "module": "game",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                68
              ],
            "line": 17,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "game",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                68
              ],
            "line": 17,
            "endcolumn": 43,
            "column": 37
          },
        {
            "module": "game",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                68
              ],
            "line": 17,
            "endcolumn": 43,
            "column": 34
          },
        {
            "module": "game",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                68
              ],
            "line": 17,
            "endcolumn": 43,
            "column": 34
          },
        {
            "module": "game",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                68
              ],
            "line": 17,
            "endcolumn": 44,
            "column": 30
          },
        {
            "module": "game",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                68
              ],
            "line": 17,
            "endcolumn": 53,
            "column": 53
          },
        {
            "module": "game",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                68
              ],
            "line": 17,
            "endcolumn": 62,
            "column": 56
          },
        {
            "module": "game",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                68
              ],
            "line": 17,
            "endcolumn": 62,
            "column": 53
          },
        {
            "module": "game",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                68
              ],
            "line": 17,
            "endcolumn": 62,
            "column": 53
          },
        {
            "module": "game",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                68
              ],
            "line": 17,
            "endcolumn": 63,
            "column": 49
          },
        {
            "module": "game",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                68
              ],
            "line": 17,
            "endcolumn": 67,
            "column": 67
          },
        {
            "module": "game",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                68
              ],
            "line": 17,
            "endcolumn": 67,
            "column": 49
          },
        {
            "module": "game",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                68
              ],
            "line": 17,
            "endcolumn": 68,
            "column": 30
          },
        {
            "module": "game",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                68
              ],
            "line": 17,
            "endcolumn": 28,
            "column": 9
          },
        {
            "module": "game",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                27
              ],
            "line": 19,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "game",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                27
              ],
            "line": 19,
            "endcolumn": 22,
            "column": 18
          },
        {
            "module": "game",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                27
              ],
            "line": 19,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "game",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                27
              ],
            "line": 19,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "game",
            "endline": 19,
            "stmt": [
                19,
                13,
                19,
                27
              ],
            "line": 19,
            "endcolumn": 24,
            "column": 13
          },
        {
            "module": "game",
            "endline": 20,
            "stmt": [
                20,
                13,
                20,
                27
              ],
            "line": 20,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "game",
            "endline": 20,
            "stmt": [
                20,
                13,
                20,
                27
              ],
            "line": 20,
            "endcolumn": 22,
            "column": 18
          },
        {
            "module": "game",
            "endline": 20,
            "stmt": [
                20,
                13,
                20,
                27
              ],
            "line": 20,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "game",
            "endline": 20,
            "stmt": [
                20,
                13,
                20,
                27
              ],
            "line": 20,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "game",
            "endline": 20,
            "stmt": [
                20,
                13,
                20,
                27
              ],
            "line": 20,
            "endcolumn": 24,
            "column": 13
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                48
              ],
            "line": 23,
            "endcolumn": 48,
            "column": 22
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                48
              ],
            "line": 23,
            "endcolumn": 47,
            "column": 28
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                48
              ],
            "line": 23,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                48
              ],
            "line": 23,
            "endcolumn": 47,
            "column": 28
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                48
              ],
            "line": 23,
            "endcolumn": 44,
            "column": 31
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                48
              ],
            "line": 23,
            "endcolumn": 47,
            "column": 28
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                48
              ],
            "line": 23,
            "endcolumn": 47,
            "column": 47
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                48
              ],
            "line": 23,
            "endcolumn": 47,
            "column": 28
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                48
              ],
            "line": 23,
            "endcolumn": 48,
            "column": 22
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                48
              ],
            "line": 23,
            "endcolumn": 48,
            "column": 22
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                48
              ],
            "line": 23,
            "endcolumn": 15,
            "column": 13
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                48
              ],
            "line": 23,
            "endcolumn": 15,
            "column": 13
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                48
              ],
            "line": 23,
            "endcolumn": 15,
            "column": 13
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                38
              ],
            "line": 24,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                38
              ],
            "line": 24,
            "endcolumn": 37,
            "column": 24
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                38
              ],
            "line": 24,
            "endcolumn": 37,
            "column": 20
          },
        {
            "module": "game",
            "endline": 24,
            "stmt": [
                24,
                17,
                24,
                38
              ],
            "line": 24,
            "endcolumn": 18,
            "column": 17
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                21,
                25,
                50
              ],
            "line": 25,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                21,
                25,
                50
              ],
            "line": 25,
            "endcolumn": 28,
            "column": 24
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                21,
                25,
                50
              ],
            "line": 25,
            "endcolumn": 28,
            "column": 21
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                21,
                25,
                50
              ],
            "line": 25,
            "endcolumn": 35,
            "column": 29
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                21,
                25,
                50
              ],
            "line": 25,
            "endcolumn": 35,
            "column": 21
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                21,
                25,
                50
              ],
            "line": 25,
            "endcolumn": 37,
            "column": 37
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                21,
                25,
                50
              ],
            "line": 25,
            "endcolumn": 46,
            "column": 40
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                21,
                25,
                50
              ],
            "line": 25,
            "endcolumn": 46,
            "column": 37
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                21,
                25,
                50
              ],
            "line": 25,
            "endcolumn": 48,
            "column": 48
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                21,
                25,
                50
              ],
            "line": 25,
            "endcolumn": 49,
            "column": 37
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                21,
                25,
                50
              ],
            "line": 25,
            "endcolumn": 49,
            "column": 37
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                21,
                25,
                50
              ],
            "line": 25,
            "endcolumn": 50,
            "column": 21
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                21,
                25,
                50
              ],
            "line": 25,
            "endcolumn": 50,
            "column": 21
          },
        {
            "module": "game",
            "endline": 25,
            "stmt": [
                25,
                21,
                25,
                50
              ],
            "line": 25,
            "endcolumn": 50,
            "column": 21
          },
        {
            "module": "game",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                44
              ],
            "line": 26,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "game",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                44
              ],
            "line": 26,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "game",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                44
              ],
            "line": 26,
            "endcolumn": 25,
            "column": 21
          },
        {
            "module": "game",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                44
              ],
            "line": 26,
            "endcolumn": 43,
            "column": 30
          },
        {
            "module": "game",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                44
              ],
            "line": 26,
            "endcolumn": 43,
            "column": 20
          },
        {
            "module": "game",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                44
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 17
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 28,
            "column": 24
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 28,
            "column": 21
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 35,
            "column": 29
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 35,
            "column": 21
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 37,
            "column": 37
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 46,
            "column": 40
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 46,
            "column": 37
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 48,
            "column": 48
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 48,
            "column": 48
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 52,
            "column": 52
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 52,
            "column": 48
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 53,
            "column": 37
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 53,
            "column": 37
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 54,
            "column": 21
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 54,
            "column": 21
          },
        {
            "module": "game",
            "endline": 27,
            "stmt": [
                27,
                21,
                27,
                54
              ],
            "line": 27,
            "endcolumn": 54,
            "column": 21
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                48
              ],
            "line": 23,
            "endcolumn": 48,
            "column": 48
          },
        {
            "module": "game",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                48
              ],
            "line": 23,
            "endcolumn": 48,
            "column": 48
          },
        {
            "module": "game",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                32
              ],
            "line": 31,
            "endcolumn": 32,
            "column": 31
          },
        {
            "module": "game",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                32
              ],
            "line": 31,
            "endcolumn": 32,
            "column": 31
          },
        {
            "module": "game",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                32
              ],
            "line": 31,
            "endcolumn": 29,
            "column": 13
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 63,
            "column": 26
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 62,
            "column": 32
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 45,
            "column": 32
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 45,
            "column": 32
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 62,
            "column": 32
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 52,
            "column": 52
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 61,
            "column": 55
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 61,
            "column": 52
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 61,
            "column": 52
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 62,
            "column": 48
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 62,
            "column": 32
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 63,
            "column": 26
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 63,
            "column": 26
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 19,
            "column": 17
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 19,
            "column": 17
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 19,
            "column": 17
          },
        {
            "module": "game",
            "endline": 33,
            "stmt": [
                33,
                21,
                33,
                53
              ],
            "line": 33,
            "endcolumn": 31,
            "column": 21
          },
        {
            "module": "game",
            "endline": 33,
            "stmt": [
                33,
                21,
                33,
                53
              ],
            "line": 33,
            "endcolumn": 38,
            "column": 32
          },
        {
            "module": "game",
            "endline": 33,
            "stmt": [
                33,
                21,
                33,
                53
              ],
            "line": 33,
            "endcolumn": 38,
            "column": 21
          },
        {
            "module": "game",
            "endline": 33,
            "stmt": [
                33,
                21,
                33,
                53
              ],
            "line": 33,
            "endcolumn": 40,
            "column": 40
          },
        {
            "module": "game",
            "endline": 33,
            "stmt": [
                33,
                21,
                33,
                53
              ],
            "line": 33,
            "endcolumn": 49,
            "column": 43
          },
        {
            "module": "game",
            "endline": 33,
            "stmt": [
                33,
                21,
                33,
                53
              ],
            "line": 33,
            "endcolumn": 49,
            "column": 40
          },
        {
            "module": "game",
            "endline": 33,
            "stmt": [
                33,
                21,
                33,
                53
              ],
            "line": 33,
            "endcolumn": 51,
            "column": 51
          },
        {
            "module": "game",
            "endline": 33,
            "stmt": [
                33,
                21,
                33,
                53
              ],
            "line": 33,
            "endcolumn": 51,
            "column": 51
          },
        {
            "module": "game",
            "endline": 33,
            "stmt": [
                33,
                21,
                33,
                53
              ],
            "line": 33,
            "endcolumn": 52,
            "column": 40
          },
        {
            "module": "game",
            "endline": 33,
            "stmt": [
                33,
                21,
                33,
                53
              ],
            "line": 33,
            "endcolumn": 52,
            "column": 40
          },
        {
            "module": "game",
            "endline": 33,
            "stmt": [
                33,
                21,
                33,
                53
              ],
            "line": 33,
            "endcolumn": 53,
            "column": 21
          },
        {
            "module": "game",
            "endline": 33,
            "stmt": [
                33,
                21,
                33,
                53
              ],
            "line": 33,
            "endcolumn": 53,
            "column": 21
          },
        {
            "module": "game",
            "endline": 33,
            "stmt": [
                33,
                21,
                33,
                53
              ],
            "line": 33,
            "endcolumn": 53,
            "column": 21
          },
        {
            "module": "game",
            "endline": 32,
            "stmt": [
                32,
                17,
                32,
                63
              ],
            "line": 32,
            "endcolumn": 63,
            "column": 63
          },
        {
            "module": "game",
            "endline": 35,
            "stmt": [
                35,
                17,
                35,
                40
              ],
            "line": 35,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "game",
            "endline": 35,
            "stmt": [
                35,
                17,
                35,
                40
              ],
            "line": 35,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "game",
            "endline": 35,
            "stmt": [
                35,
                17,
                35,
                40
              ],
            "line": 35,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "game",
            "endline": 35,
            "stmt": [
                35,
                17,
                35,
                40
              ],
            "line": 35,
            "endcolumn": 26,
            "column": 17
          },
        {
            "module": "game",
            "endline": 35,
            "stmt": [
                35,
                17,
                35,
                40
              ],
            "line": 35,
            "endcolumn": 40,
            "column": 30
          },
        {
            "module": "game",
            "endline": 35,
            "stmt": [
                35,
                17,
                35,
                40
              ],
            "line": 35,
            "endcolumn": 40,
            "column": 30
          },
        {
            "module": "game",
            "endline": 35,
            "stmt": [
                35,
                17,
                35,
                40
              ],
            "line": 35,
            "endcolumn": 28,
            "column": 17
          },
        {
            "module": "game",
            "endline": 38,
            "stmt": [
                38,
                9,
                38,
                30
              ],
            "line": 38,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "game",
            "endline": 38,
            "stmt": [
                38,
                9,
                38,
                30
              ],
            "line": 38,
            "endcolumn": 29,
            "column": 23
          },
        {
            "module": "game",
            "endline": 38,
            "stmt": [
                38,
                9,
                38,
                30
              ],
            "line": 38,
            "endcolumn": 29,
            "column": 20
          },
        {
            "module": "game",
            "endline": 38,
            "stmt": [
                38,
                9,
                38,
                30
              ],
            "line": 38,
            "endcolumn": 30,
            "column": 9
          },
        {
            "module": "game",
            "endline": 38,
            "stmt": [
                38,
                9,
                38,
                30
              ],
            "line": 38,
            "endcolumn": 30,
            "column": 9
          },
        {
            "module": "game",
            "endline": 10,
            "stmt": [
                10,
                5,
                10,
                15
              ],
            "line": 10,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "game",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                21
              ],
            "line": 39,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                21
              ],
            "line": 39,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                21
              ],
            "line": 39,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "game",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                21
              ],
            "line": 39,
            "endcolumn": 20,
            "column": 14
          },
        {
            "module": "game",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                21
              ],
            "line": 39,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                21
              ],
            "line": 39,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 8,
            "stmt": [
                8,
                1,
                8,
                19
              ],
            "line": 8,
            "endcolumn": 19,
            "column": 1
          },
        {
            "module": "game",
            "endline": 42,
            "stmt": [
                42,
                1,
                42,
                21
              ],
            "line": 42,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "game",
            "endline": 42,
            "stmt": [
                42,
                1,
                42,
                21
              ],
            "line": 42,
            "endcolumn": 21,
            "column": 1
          },
        {
            "module": "game",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                21
              ],
            "line": 43,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                21
              ],
            "line": 43,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "game",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                21
              ],
            "line": 43,
            "endcolumn": 20,
            "column": 14
          },
        {
            "module": "game",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                21
              ],
            "line": 43,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                21
              ],
            "line": 43,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                35
              ],
            "line": 45,
            "endcolumn": 5,
            "column": 5
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                35
              ],
            "line": 45,
            "endcolumn": 14,
            "column": 8
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                35
              ],
            "line": 45,
            "endcolumn": 14,
            "column": 5
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                35
              ],
            "line": 45,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                35
              ],
            "line": 45,
            "endcolumn": 27,
            "column": 21
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                35
              ],
            "line": 45,
            "endcolumn": 27,
            "column": 18
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                35
              ],
            "line": 45,
            "endcolumn": 27,
            "column": 18
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                35
              ],
            "line": 45,
            "endcolumn": 34,
            "column": 32
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                35
              ],
            "line": 45,
            "endcolumn": 33,
            "column": 32
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                35
              ],
            "line": 45,
            "endcolumn": 34,
            "column": 32
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                35
              ],
            "line": 45,
            "endcolumn": 35,
            "column": 18
          },
        {
            "module": "game",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                35
              ],
            "line": 45,
            "endcolumn": 16,
            "column": 5
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 20,
            "column": 16
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 20,
            "column": 13
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 20,
            "column": 13
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 21,
            "column": 9
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 26,
            "column": 26
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 26,
            "column": 9
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 52,
            "column": 8
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 38,
            "column": 38
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 45,
            "column": 41
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 45,
            "column": 38
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 45,
            "column": 38
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 46,
            "column": 34
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 51,
            "column": 51
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 51,
            "column": 34
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 31,
            "column": 29
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 52,
            "column": 8
          },
        {
            "module": "game",
            "endline": 48,
            "stmt": [
                48,
                5,
                48,
                53
              ],
            "line": 48,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "game",
            "endline": 49,
            "stmt": [
                49,
                9,
                49,
                31
              ],
            "line": 49,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "game",
            "endline": 49,
            "stmt": [
                49,
                9,
                49,
                31
              ],
            "line": 49,
            "endcolumn": 30,
            "column": 20
          },
        {
            "module": "game",
            "endline": 49,
            "stmt": [
                49,
                9,
                49,
                31
              ],
            "line": 49,
            "endcolumn": 30,
            "column": 17
          },
        {
            "module": "game",
            "endline": 49,
            "stmt": [
                49,
                9,
                49,
                31
              ],
            "line": 49,
            "endcolumn": 31,
            "column": 9
          },
        {
            "module": "game",
            "endline": 49,
            "stmt": [
                49,
                9,
                49,
                31
              ],
            "line": 49,
            "endcolumn": 31,
            "column": 9
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 23,
            "column": 19
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 23,
            "column": 16
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 23,
            "column": 16
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 24,
            "column": 12
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 117,
            "column": 11
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 40,
            "column": 40
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 47,
            "column": 43
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 47,
            "column": 40
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 47,
            "column": 40
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 48,
            "column": 36
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 57,
            "column": 57
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 64,
            "column": 60
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 64,
            "column": 57
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 64,
            "column": 57
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 65,
            "column": 53
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 65,
            "column": 36
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 117,
            "column": 11
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 74,
            "column": 73
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 83,
            "column": 83
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 90,
            "column": 86
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 90,
            "column": 83
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 90,
            "column": 83
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 90,
            "column": 73
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 90,
            "column": 73
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 116,
            "column": 72
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 99,
            "column": 98
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 108,
            "column": 108
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 115,
            "column": 111
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 115,
            "column": 108
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 115,
            "column": 108
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 115,
            "column": 98
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 115,
            "column": 98
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 95,
            "column": 93
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 116,
            "column": 72
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 33,
            "column": 32
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 117,
            "column": 11
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                35
              ],
            "line": 54,
            "endcolumn": 34,
            "column": 14
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                35
              ],
            "line": 54,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                35
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 18
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                35
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 15
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                35
              ],
            "line": 54,
            "endcolumn": 34,
            "column": 14
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                35
              ],
            "line": 54,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                35
              ],
            "line": 54,
            "endcolumn": 34,
            "column": 31
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                35
              ],
            "line": 54,
            "endcolumn": 34,
            "column": 28
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                35
              ],
            "line": 54,
            "endcolumn": 34,
            "column": 14
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                35
              ],
            "line": 54,
            "endcolumn": 35,
            "column": 9
          },
        {
            "module": "game",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                35
              ],
            "line": 54,
            "endcolumn": 35,
            "column": 9
          },
        {
            "module": "game",
            "endline": 53,
            "stmt": [
                53,
                5,
                53,
                118
              ],
            "line": 53,
            "endcolumn": 118,
            "column": 5
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                32
              ],
            "line": 57,
            "endcolumn": 31,
            "column": 14
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                32
              ],
            "line": 57,
            "endcolumn": 31,
            "column": 14
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                32
              ],
            "line": 57,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                32
              ],
            "line": 57,
            "endcolumn": 21,
            "column": 17
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                32
              ],
            "line": 57,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                32
              ],
            "line": 57,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                32
              ],
            "line": 57,
            "endcolumn": 31,
            "column": 14
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                32
              ],
            "line": 57,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                32
              ],
            "line": 57,
            "endcolumn": 31,
            "column": 27
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                32
              ],
            "line": 57,
            "endcolumn": 31,
            "column": 24
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                32
              ],
            "line": 57,
            "endcolumn": 31,
            "column": 24
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                32
              ],
            "line": 57,
            "endcolumn": 31,
            "column": 14
          },
        {
            "module": "game",
            "endline": 57,
            "stmt": [
                57,
                5,
                57,
                32
              ],
            "line": 57,
            "endcolumn": 11,
            "column": 5
          },
        {
            "module": "game",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                21
              ],
            "line": 59,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                21
              ],
            "line": 59,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                21
              ],
            "line": 59,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "game",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                21
              ],
            "line": 59,
            "endcolumn": 20,
            "column": 14
          },
        {
            "module": "game",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                21
              ],
            "line": 59,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                21
              ],
            "line": 59,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 42,
            "stmt": [
                42,
                1,
                42,
                21
              ],
            "line": 42,
            "endcolumn": 21,
            "column": 1
          },
        {
            "module": "game",
            "endline": 61,
            "stmt": [
                61,
                1,
                61,
                22
              ],
            "line": 61,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "game",
            "endline": 61,
            "stmt": [
                61,
                1,
                61,
                22
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 1
          },
        {
            "module": "game",
            "endline": 62,
            "stmt": [
                62,
                5,
                62,
                21
              ],
            "line": 62,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 62,
            "stmt": [
                62,
                5,
                62,
                21
              ],
            "line": 62,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "game",
            "endline": 62,
            "stmt": [
                62,
                5,
                62,
                21
              ],
            "line": 62,
            "endcolumn": 20,
            "column": 14
          },
        {
            "module": "game",
            "endline": 62,
            "stmt": [
                62,
                5,
                62,
                21
              ],
            "line": 62,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 62,
            "stmt": [
                62,
                5,
                62,
                21
              ],
            "line": 62,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                22
              ],
            "line": 65,
            "endcolumn": 9,
            "column": 8
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                22
              ],
            "line": 65,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                22
              ],
            "line": 65,
            "endcolumn": 21,
            "column": 17
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                22
              ],
            "line": 65,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                22
              ],
            "line": 65,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                22
              ],
            "line": 65,
            "endcolumn": 21,
            "column": 8
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                22
              ],
            "line": 65,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 20,
            "column": 16
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 20,
            "column": 13
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 24,
            "column": 13
          },
        {
            "module": "game",
            "endline": 66,
            "stmt": [
                66,
                9,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "game",
            "endline": 65,
            "stmt": [
                65,
                5,
                65,
                22
              ],
            "line": 65,
            "endcolumn": 22,
            "column": 5
          },
        {
            "module": "game",
            "endline": 67,
            "stmt": [
                67,
                5,
                67,
                24
              ],
            "line": 67,
            "endcolumn": 11,
            "column": 10
          },
        {
            "module": "game",
            "endline": 67,
            "stmt": [
                67,
                5,
                67,
                24
              ],
            "line": 67,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "game",
            "endline": 67,
            "stmt": [
                67,
                5,
                67,
                24
              ],
            "line": 67,
            "endcolumn": 23,
            "column": 19
          },
        {
            "module": "game",
            "endline": 67,
            "stmt": [
                67,
                5,
                67,
                24
              ],
            "line": 67,
            "endcolumn": 23,
            "column": 16
          },
        {
            "module": "game",
            "endline": 67,
            "stmt": [
                67,
                5,
                67,
                24
              ],
            "line": 67,
            "endcolumn": 23,
            "column": 16
          },
        {
            "module": "game",
            "endline": 67,
            "stmt": [
                67,
                5,
                67,
                24
              ],
            "line": 67,
            "endcolumn": 23,
            "column": 10
          },
        {
            "module": "game",
            "endline": 67,
            "stmt": [
                67,
                5,
                67,
                24
              ],
            "line": 67,
            "endcolumn": 8,
            "column": 5
          },
        {
            "module": "game",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                24
              ],
            "line": 68,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "game",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                24
              ],
            "line": 68,
            "endcolumn": 20,
            "column": 16
          },
        {
            "module": "game",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                24
              ],
            "line": 68,
            "endcolumn": 20,
            "column": 13
          },
        {
            "module": "game",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                24
              ],
            "line": 68,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "game",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                24
              ],
            "line": 68,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "game",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                24
              ],
            "line": 68,
            "endcolumn": 24,
            "column": 13
          },
        {
            "module": "game",
            "endline": 68,
            "stmt": [
                68,
                9,
                68,
                24
              ],
            "line": 68,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 20,
            "column": 16
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 20,
            "column": 13
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 20,
            "column": 13
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 21,
            "column": 9
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 26,
            "column": 26
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 26,
            "column": 9
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 8
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 38,
            "column": 38
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 45,
            "column": 41
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 45,
            "column": 38
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 45,
            "column": 38
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 46,
            "column": 34
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 51,
            "column": 51
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 51,
            "column": 34
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 31,
            "column": 29
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 8
          },
        {
            "module": "game",
            "endline": 71,
            "stmt": [
                71,
                5,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "game",
            "endline": 72,
            "stmt": [
                72,
                9,
                72,
                31
              ],
            "line": 72,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "game",
            "endline": 72,
            "stmt": [
                72,
                9,
                72,
                31
              ],
            "line": 72,
            "endcolumn": 30,
            "column": 20
          },
        {
            "module": "game",
            "endline": 72,
            "stmt": [
                72,
                9,
                72,
                31
              ],
            "line": 72,
            "endcolumn": 30,
            "column": 17
          },
        {
            "module": "game",
            "endline": 72,
            "stmt": [
                72,
                9,
                72,
                31
              ],
            "line": 72,
            "endcolumn": 31,
            "column": 9
          },
        {
            "module": "game",
            "endline": 72,
            "stmt": [
                72,
                9,
                72,
                31
              ],
            "line": 72,
            "endcolumn": 31,
            "column": 9
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                21
              ],
            "line": 74,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                21
              ],
            "line": 74,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                21
              ],
            "line": 74,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                21
              ],
            "line": 74,
            "endcolumn": 20,
            "column": 14
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                21
              ],
            "line": 74,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 74,
            "stmt": [
                74,
                5,
                74,
                21
              ],
            "line": 74,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "game",
            "endline": 61,
            "stmt": [
                61,
                1,
                61,
                22
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                16
              ],
            "line": 5,
            "endcolumn": 16,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                16
              ],
            "line": 5,
            "endcolumn": 16,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                16
              ],
            "line": 5,
            "endcolumn": 9,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                15
              ],
            "line": 7,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                15
              ],
            "line": 7,
            "endcolumn": 15,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                48
              ],
            "line": 9,
            "endcolumn": 47,
            "column": 36
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                48
              ],
            "line": 9,
            "endcolumn": 43,
            "column": 37
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                48
              ],
            "line": 9,
            "endcolumn": 47,
            "column": 36
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                48
              ],
            "line": 9,
            "endcolumn": 47,
            "column": 46
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                48
              ],
            "line": 9,
            "endcolumn": 47,
            "column": 36
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                48
              ],
            "line": 9,
            "endcolumn": 48,
            "column": 26
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                48
              ],
            "line": 9,
            "endcolumn": 24,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                36
              ],
            "line": 11,
            "endcolumn": 36,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                36
              ],
            "line": 11,
            "endcolumn": 36,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                36
              ],
            "line": 11,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                36
              ],
            "line": 11,
            "endcolumn": 27,
            "column": 23
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                36
              ],
            "line": 11,
            "endcolumn": 35,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                36
              ],
            "line": 11,
            "endcolumn": 35,
            "column": 23
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                36
              ],
            "line": 11,
            "endcolumn": 36,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                36
              ],
            "line": 11,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                36
              ],
            "line": 11,
            "endcolumn": 36,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                36
              ],
            "line": 11,
            "endcolumn": 36,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                48
              ],
            "line": 14,
            "endcolumn": 48,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                48
              ],
            "line": 14,
            "endcolumn": 48,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                48
              ],
            "line": 14,
            "endcolumn": 28,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                48
              ],
            "line": 14,
            "endcolumn": 29,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                48
              ],
            "line": 14,
            "endcolumn": 41,
            "column": 37
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                48
              ],
            "line": 14,
            "endcolumn": 42,
            "column": 33
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                48
              ],
            "line": 14,
            "endcolumn": 42,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                48
              ],
            "line": 14,
            "endcolumn": 43,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                48
              ],
            "line": 14,
            "endcolumn": 48,
            "column": 48
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                48
              ],
            "line": 14,
            "endcolumn": 48,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                48
              ],
            "line": 14,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                48
              ],
            "line": 14,
            "endcolumn": 48,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                48
              ],
            "line": 14,
            "endcolumn": 48,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 40,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 40,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 25,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 25,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 33,
            "column": 29
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 33,
            "column": 29
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 33,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 34,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 39,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 40,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                40
              ],
            "line": 17,
            "endcolumn": 40,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                28
              ],
            "line": 25,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                28
              ],
            "line": 25,
            "endcolumn": 23,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                28
              ],
            "line": 25,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                28
              ],
            "line": 25,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                28
              ],
            "line": 25,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                28
              ],
            "line": 25,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                28
              ],
            "line": 25,
            "endcolumn": 28,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                28
              ],
            "line": 25,
            "endcolumn": 28,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                15
              ],
            "line": 7,
            "endcolumn": 15,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                1,
                27,
                35
              ],
            "line": 27,
            "endcolumn": 25,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                1,
                27,
                35
              ],
            "line": 27,
            "endcolumn": 34,
            "column": 28
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                1,
                27,
                35
              ],
            "line": 27,
            "endcolumn": 35,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                1,
                27,
                35
              ],
            "line": 27,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                1,
                27,
                35
              ],
            "line": 27,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                25
              ],
            "line": 29,
            "endcolumn": 12,
            "column": 12
          },
        {
            "module": "__main__",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                25
              ],
            "line": 29,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                25
              ],
            "line": 29,
            "endcolumn": 24,
            "column": 12
          },
        {
            "module": "__main__",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                25
              ],
            "line": 29,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                25
              ],
            "line": 29,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                25
              ],
            "line": 29,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 16,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 19,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 19,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                25
              ],
            "line": 29,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                1,
                1,
                30,
                26
              ],
            "line": 1,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                1,
                1,
                30,
                26
              ],
            "line": 1,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                1,
                1,
                30,
                26
              ],
            "line": 1,
            "endcolumn": 26,
            "column": 1
          }
      ],
    "code": [
        {
            "args": "()",
            "name": "__init__",
            "op": "Frame"
          },
        {
            "pc": "54",
            "op": "Jump"
          },
        {
            "args": "(s, b, e)",
            "name": "subseq",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu3",
            "op": "StoreVar"
          },
        {
            "value": "b",
            "op": "LoadVar"
          },
        {
            "value": "b",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "..",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "x",
            "op": "Cut"
          },
        {
            "pc": "26",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu3",
            "op": "LoadVar"
          },
        {
            "value": "$accu3",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "x",
            "op": "LoadVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu3",
            "op": "StoreVar"
          },
        {
            "pc": "14",
            "op": "Jump"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "value": "$accu3",
            "op": "LoadVar"
          },
        {
            "value": "$accu3",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "54",
            "op": "Jump"
          },
        {
            "args": "(s, e)",
            "name": "append",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "54",
            "op": "Jump"
          },
        {
            "args": "s",
            "name": "head",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "value": {
                "type": "pc",
                "value": "57"
              },
            "op": "Push"
          },
        {
            "value": "list$tail",
            "op": "Builtin"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "s",
            "name": "tail",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "2"
              },
            "op": "Apply"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "a",
            "name": "sum",
            "op": "Frame"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "accu",
            "op": "StoreVar"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": "a",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "Cut"
          },
        {
            "pc": "87",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "accu",
            "op": "LoadVar"
          },
        {
            "value": "accu",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "accu",
            "op": "StoreVar"
          },
        {
            "pc": "78",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "result": "accu",
            "op": "Return"
          },
        {
            "value": "accu",
            "op": "DelVar"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "a",
            "name": "set",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu72",
            "op": "StoreVar"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": "a",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "Cut"
          },
        {
            "pc": "107",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu72",
            "op": "LoadVar"
          },
        {
            "value": "$accu72",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "$accu72",
            "op": "StoreVar"
          },
        {
            "pc": "98",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "$accu72",
            "op": "LoadVar"
          },
        {
            "value": "$accu72",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "a",
            "name": "list",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu88",
            "op": "StoreVar"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": "a",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "Cut"
          },
        {
            "pc": "129",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu88",
            "op": "LoadVar"
          },
        {
            "value": "$accu88",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu88",
            "op": "StoreVar"
          },
        {
            "pc": "120",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "$accu88",
            "op": "LoadVar"
          },
        {
            "value": "$accu88",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "d",
            "name": "values",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu104",
            "op": "StoreVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "key": "_",
            "op": "Cut"
          },
        {
            "value": "_",
            "op": "DelVar"
          },
        {
            "pc": "152",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu104",
            "op": "LoadVar"
          },
        {
            "value": "$accu104",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu104",
            "op": "StoreVar"
          },
        {
            "pc": "142",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "$accu104",
            "op": "LoadVar"
          },
        {
            "value": "$accu104",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "d",
            "name": "items",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu120",
            "op": "StoreVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "key": "k",
            "op": "Cut"
          },
        {
            "pc": "179",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu120",
            "op": "LoadVar"
          },
        {
            "value": "$accu120",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu120",
            "op": "StoreVar"
          },
        {
            "pc": "165",
            "op": "Jump"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "$accu120",
            "op": "LoadVar"
          },
        {
            "value": "$accu120",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "a",
            "name": "qsort",
            "op": "Frame"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "195",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "a",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "sorted",
            "op": "StoreVar"
          },
        {
            "pc": "261",
            "op": "Jump"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "45"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": "a",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "57"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "(pivot, rest)",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu155",
            "op": "StoreVar"
          },
        {
            "value": "rest",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "Cut"
          },
        {
            "pc": "222",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "pivot",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "<",
            "op": "Nary"
          },
        {
            "pc": "208",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu155",
            "op": "LoadVar"
          },
        {
            "value": "$accu155",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu155",
            "op": "StoreVar"
          },
        {
            "pc": "208",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "$accu155",
            "op": "LoadVar"
          },
        {
            "value": "$accu155",
            "op": "DelVar"
          },
        {
            "value": "lower",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu172",
            "op": "StoreVar"
          },
        {
            "value": "rest",
            "op": "LoadVar"
          },
        {
            "value": "rest",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "Cut"
          },
        {
            "pc": "245",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "pivot",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": ">=",
            "op": "Nary"
          },
        {
            "pc": "231",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu172",
            "op": "LoadVar"
          },
        {
            "value": "$accu172",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu172",
            "op": "StoreVar"
          },
        {
            "pc": "231",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "$accu172",
            "op": "LoadVar"
          },
        {
            "value": "$accu172",
            "op": "DelVar"
          },
        {
            "value": "higher",
            "op": "StoreVar"
          },
        {
            "value": "lower",
            "op": "LoadVar"
          },
        {
            "value": "lower",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "186"
              },
            "op": "Apply"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "pivot",
            "op": "LoadVar"
          },
        {
            "value": "pivot",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "higher",
            "op": "LoadVar"
          },
        {
            "value": "higher",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "186"
              },
            "op": "Apply"
          },
        {
            "arity": 3,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "sorted",
            "op": "StoreVar"
          },
        {
            "result": "sorted",
            "op": "Return"
          },
        {
            "value": "sorted",
            "op": "DelVar"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "d",
            "name": "sorted",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "113"
              },
            "op": "Apply"
          },
        {
            "value": {
                "type": "pc",
                "value": "186"
              },
            "op": "Apply"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "d",
            "name": "reversed",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": "n",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu211",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "value": "n",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "..",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "i",
            "op": "Cut"
          },
        {
            "pc": "298",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu211",
            "op": "LoadVar"
          },
        {
            "value": "$accu211",
            "op": "DelVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "n",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu211",
            "op": "StoreVar"
          },
        {
            "pc": "284",
            "op": "Jump"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "value": "n",
            "op": "DelVar"
          },
        {
            "value": "$accu211",
            "op": "LoadVar"
          },
        {
            "value": "$accu211",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "(d, e)",
            "name": "index",
            "op": "Frame"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "i",
            "op": "StoreVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "322",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "i",
            "op": "StoreVar"
          },
        {
            "pc": "309",
            "op": "Jump"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "result": "i",
            "op": "Return"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "(d, prefix)",
            "name": "startswith",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "prefix",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "<=",
            "op": "Nary"
          },
        {
            "pc": "368",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu257",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "prefix",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "..",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "i",
            "op": "Cut"
          },
        {
            "pc": "361",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu257",
            "op": "LoadVar"
          },
        {
            "value": "$accu257",
            "op": "DelVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "prefix",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu257",
            "op": "StoreVar"
          },
        {
            "pc": "344",
            "op": "Jump"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "value": "prefix",
            "op": "DelVar"
          },
        {
            "value": "$accu257",
            "op": "LoadVar"
          },
        {
            "value": "$accu257",
            "op": "DelVar"
          },
        {
            "arity": 1,
            "value": "all",
            "op": "Nary"
          },
        {
            "pc": "371",
            "op": "Jump"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": "prefix",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "(d, f, z)",
            "name": "foldl",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "z",
            "op": "LoadVar"
          },
        {
            "value": "z",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "Cut"
          },
        {
            "pc": "396",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "382",
            "op": "Jump"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "(d, f, z)",
            "name": "foldr",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "412",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "value": "z",
            "op": "LoadVar"
          },
        {
            "value": "z",
            "op": "DelVar"
          },
        {
            "pc": "434",
            "op": "Jump"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "57"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "z",
            "op": "LoadVar"
          },
        {
            "value": "z",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "400"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "(f, d, z)",
            "name": "reduce",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "z",
            "op": "LoadVar"
          },
        {
            "value": "z",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "374"
              },
            "op": "Apply"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "s",
            "name": "permuted",
            "op": "Frame"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "perm",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": "c",
            "op": "StoreVar"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "482",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "op": "Choose"
          },
        {
            "value": "e",
            "op": "StoreVar"
          },
        {
            "value": "perm",
            "op": "LoadVar"
          },
        {
            "value": "perm",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "perm",
            "op": "StoreVar"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "value": "c",
            "op": "StoreVar"
          },
        {
            "pc": "459",
            "op": "Jump"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "result": "perm",
            "op": "Return"
          },
        {
            "value": "perm",
            "op": "DelVar"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "(cond, s)",
            "name": "filter",
            "op": "Frame"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu377",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "Cut"
          },
        {
            "pc": "507",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "cond",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "pc": "492",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu377",
            "op": "LoadVar"
          },
        {
            "value": "$accu377",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu377",
            "op": "StoreVar"
          },
        {
            "pc": "492",
            "op": "Jump"
          },
        {
            "value": "cond",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "$accu377",
            "op": "LoadVar"
          },
        {
            "value": "$accu377",
            "op": "DelVar"
          },
        {
            "value": "t",
            "op": "StoreVar"
          },
        {
            "result": "t",
            "op": "Return"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "(f, s)",
            "name": "map",
            "op": "Frame"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu398",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "Cut"
          },
        {
            "pc": "533",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu398",
            "op": "LoadVar"
          },
        {
            "value": "$accu398",
            "op": "DelVar"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu398",
            "op": "StoreVar"
          },
        {
            "pc": "521",
            "op": "Jump"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "value": "$accu398",
            "op": "LoadVar"
          },
        {
            "value": "$accu398",
            "op": "DelVar"
          },
        {
            "value": "t",
            "op": "StoreVar"
          },
        {
            "result": "t",
            "op": "Return"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "empty",
            "op": "Frame"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "bg",
            "op": "StoreVar"
          },
        {
            "result": "bg",
            "op": "Return"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "s",
            "name": "fromSet",
            "op": "Frame"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu422",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "Cut"
          },
        {
            "pc": "563",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu422",
            "op": "LoadVar"
          },
        {
            "value": "$accu422",
            "op": "DelVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": "$accu422",
            "op": "StoreVar"
          },
        {
            "pc": "553",
            "op": "Jump"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "value": "$accu422",
            "op": "LoadVar"
          },
        {
            "value": "$accu422",
            "op": "DelVar"
          },
        {
            "value": "bg",
            "op": "StoreVar"
          },
        {
            "result": "bg",
            "op": "Return"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "pc": "602",
            "op": "Jump"
          },
        {
            "args": "a",
            "name": "fromList",
            "op": "Frame"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "bg",
            "op": "StoreVar"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": "a",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "Cut"
          },
        {
            "pc": "599",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "592",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "bg"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "op": "StoreVar"
          },
        {
            "pc": "576",
            "op": "Jump"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "bg"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "op": "StoreVar"
          },
        {
            "pc": "576",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "result": "bg",
            "op": "Return"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "605"
              },
            "op": "Push"
          },
        {
            "value": "bag$multiplicity",
            "op": "Builtin"
          },
        {
            "pc": "624",
            "op": "Jump"
          },
        {
            "args": "(bg, elt)",
            "name": "multiplicity",
            "op": "Frame"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "618",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "pc": "622",
            "op": "Jump"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "result": "count",
            "op": "Return"
          },
        {
            "value": "count",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "627"
              },
            "op": "Push"
          },
        {
            "value": "bag$size",
            "op": "Builtin"
          },
        {
            "pc": "646",
            "op": "Jump"
          },
        {
            "args": "bg",
            "name": "size",
            "op": "Frame"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "c",
            "key": "_",
            "op": "Cut"
          },
        {
            "value": "_",
            "op": "DelVar"
          },
        {
            "pc": "643",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "count",
            "op": "LoadVar"
          },
        {
            "value": "count",
            "op": "DelVar"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "pc": "633",
            "op": "Jump"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "result": "count",
            "op": "Return"
          },
        {
            "value": "count",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "649"
              },
            "op": "Push"
          },
        {
            "value": "bag$bmin",
            "op": "Builtin"
          },
        {
            "pc": "665",
            "op": "Jump"
          },
        {
            "args": "bg",
            "name": "bmin",
            "op": "Frame"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "arity": 1,
            "value": "keys",
            "op": "Nary"
          },
        {
            "arity": 1,
            "value": "min",
            "op": "Nary"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "result": "count",
            "op": "Return"
          },
        {
            "value": "count",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "668"
              },
            "op": "Push"
          },
        {
            "value": "bag$bmax",
            "op": "Builtin"
          },
        {
            "pc": "693",
            "op": "Jump"
          },
        {
            "args": "bg",
            "name": "bmax",
            "op": "Frame"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "arity": 1,
            "value": "keys",
            "op": "Nary"
          },
        {
            "arity": 1,
            "value": "max",
            "op": "Nary"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "result": "count",
            "op": "Return"
          },
        {
            "value": "count",
            "op": "DelVar"
          },
        {
            "pc": "693",
            "op": "Jump"
          },
        {
            "args": "bg",
            "name": "bchoose",
            "op": "Frame"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "arity": 1,
            "value": "keys",
            "op": "Nary"
          },
        {
            "op": "Choose"
          },
        {
            "value": "elt",
            "op": "StoreVar"
          },
        {
            "result": "elt",
            "op": "Return"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "696"
              },
            "op": "Push"
          },
        {
            "value": "bag$add",
            "op": "Builtin"
          },
        {
            "pc": "722",
            "op": "Jump"
          },
        {
            "args": "(bg, elt)",
            "name": "add",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "715",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "result"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "op": "StoreVar"
          },
        {
            "pc": "721",
            "op": "Jump"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "result"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "value": {
                "type": "pc",
                "value": "725"
              },
            "op": "Push"
          },
        {
            "value": "bag$remove",
            "op": "Builtin"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "(bg, elt)",
            "name": "remove",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "765",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": ">",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "result"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "op": "StoreVar"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "765",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "result"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "DelVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "(bg, k)",
            "name": "combinations",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "781",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "856",
            "op": "Jump"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "627"
              },
            "op": "Apply"
          },
        {
            "value": "n",
            "op": "StoreVar"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": "n",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": ">",
            "op": "Nary"
          },
        {
            "pc": "794",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "value": "n",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "856",
            "op": "Jump"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": "n",
            "op": "LoadVar"
          },
        {
            "value": "n",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "806",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "856",
            "op": "Jump"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "649"
              },
            "op": "Apply"
          },
        {
            "value": "hd",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "hd",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "725"
              },
            "op": "Apply"
          },
        {
            "value": "tl",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu645",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "tl",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "768"
              },
            "op": "Apply"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "x",
            "op": "Cut"
          },
        {
            "pc": "842",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu645",
            "op": "LoadVar"
          },
        {
            "value": "$accu645",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "x",
            "op": "LoadVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "hd",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "696"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "$accu645",
            "op": "StoreVar"
          },
        {
            "pc": "828",
            "op": "Jump"
          },
        {
            "value": "hd",
            "op": "DelVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "value": "$accu645",
            "op": "LoadVar"
          },
        {
            "value": "$accu645",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "tl",
            "op": "LoadVar"
          },
        {
            "value": "tl",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "768"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "|",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "p",
            "name": "atomic_load",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "p",
            "op": "LoadVar"
          },
        {
            "value": "p",
            "op": "DelVar"
          },
        {
            "op": "Load"
          },
        {
            "value": "current",
            "op": "StoreVar"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "current",
            "op": "Return"
          },
        {
            "value": "current",
            "op": "DelVar"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "(p, v)",
            "name": "atomic_store",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "p",
            "op": "LoadVar"
          },
        {
            "value": "p",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "lk",
            "name": "tas",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "lk",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "value": "oldvalue",
            "op": "StoreVar"
          },
        {
            "value": "lk",
            "op": "LoadVar"
          },
        {
            "value": "lk",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "oldvalue",
            "op": "Return"
          },
        {
            "value": "oldvalue",
            "op": "DelVar"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "(p, old, new)",
            "name": "cas",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "p",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "value": "old",
            "op": "LoadVar"
          },
        {
            "value": "old",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "value": "success",
            "op": "StoreVar"
          },
        {
            "value": "success",
            "op": "LoadVar"
          },
        {
            "pc": "906",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "p",
            "op": "LoadVar"
          },
        {
            "value": "p",
            "op": "DelVar"
          },
        {
            "value": "new",
            "op": "LoadVar"
          },
        {
            "value": "new",
            "op": "DelVar"
          },
        {
            "op": "Store"
          },
        {
            "value": "new",
            "op": "DelVar"
          },
        {
            "value": "p",
            "op": "DelVar"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "success",
            "op": "Return"
          },
        {
            "value": "success",
            "op": "DelVar"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "initial",
            "name": "BinSema",
            "op": "Frame"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "initial",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": "initial",
            "op": "LoadVar"
          },
        {
            "value": "initial",
            "op": "DelVar"
          },
        {
            "value": "sema",
            "op": "StoreVar"
          },
        {
            "result": "sema",
            "op": "Return"
          },
        {
            "value": "sema",
            "op": "DelVar"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "Lock",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "912"
              },
            "op": "Apply"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "binsema",
            "name": "acquired",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "binsema",
            "op": "LoadVar"
          },
        {
            "value": "binsema",
            "op": "DelVar"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "binsema",
            "name": "held",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "binsema",
            "op": "LoadVar"
          },
        {
            "value": "binsema",
            "op": "DelVar"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "binsema",
            "name": "acquire",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "binsema",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "not",
            "op": "Nary"
          },
        {
            "pc": "962",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "pc": "965",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "pc": "955",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "value": "binsema",
            "op": "LoadVar"
          },
        {
            "value": "binsema",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "binsema",
            "name": "release",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "binsema",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": "binsema",
            "op": "LoadVar"
          },
        {
            "value": "binsema",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "Condition",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "541"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "(c, lk)",
            "name": "wait",
            "op": "Frame"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "cnt",
            "op": "StoreVar"
          },
        {
            "value": "cnt",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "op": "Save"
          },
        {
            "op": "Continue"
          },
        {
            "value": "((), ctx)",
            "op": "StoreVar"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": {
                "type": "pc",
                "value": "605"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "ctx",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "cnt",
            "op": "StoreVar"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "696"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "ctx",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "op": "Store"
          },
        {
            "value": "lk",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "lk",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "not",
            "op": "Nary"
          },
        {
            "pc": "1050",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "pc",
                "value": "605"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "ctx",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "cnt",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "<=",
            "op": "Nary"
          },
        {
            "pc": "1051",
            "op": "Jump"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "pc": "1056",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "value": "cnt",
            "op": "DelVar"
          },
        {
            "value": "ctx",
            "op": "DelVar"
          },
        {
            "pc": "1059",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "pc": "1032",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "value": "lk",
            "op": "LoadVar"
          },
        {
            "value": "lk",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "c",
            "name": "notify",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "pc",
                "value": "541"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "1093",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "725"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "685"
              },
            "op": "Push"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "op": "Store"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "c",
            "name": "notifyAll",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "541"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "cnt",
            "name": "Semaphore",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "cnt",
            "op": "LoadVar"
          },
        {
            "value": "cnt",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "sema",
            "name": "P",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "sema",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": ">",
            "op": "Nary"
          },
        {
            "pc": "1125",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "pc": "1128",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "pc": "1117",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "value": "sema",
            "op": "LoadVar"
          },
        {
            "value": "sema",
            "op": "DelVar"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "sema",
            "name": "V",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "sema",
            "op": "LoadVar"
          },
        {
            "value": "sema",
            "op": "DelVar"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "Queue",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "q",
            "name": "get",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "q",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "1167",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "pc": "1170",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "pc": "1158",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "value": {
                "type": "pc",
                "value": "45"
              },
            "op": "Push"
          },
        {
            "value": "q",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "value": "q",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "57"
              },
            "op": "Push"
          },
        {
            "value": "q",
            "op": "LoadVar"
          },
        {
            "value": "q",
            "op": "DelVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "(q, item)",
            "name": "put",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "q",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "33"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "q",
            "op": "LoadVar"
          },
        {
            "value": "q",
            "op": "DelVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "item",
            "op": "LoadVar"
          },
        {
            "value": "item",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "Game",
            "op": "Frame"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "931"
              },
            "op": "Apply"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "active_game"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "989"
              },
            "op": "Apply"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "players"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "989"
              },
            "op": "Apply"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": "game",
            "op": "StoreVar"
          },
        {
            "result": "game",
            "op": "Return"
          },
        {
            "value": "game",
            "op": "DelVar"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "g",
            "name": "game_umpire",
            "op": "Frame"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "954"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "pc": "1405",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 2
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "<",
            "op": "Nary"
          },
        {
            "pc": "1265",
            "cond": {
                "type": "bool",
                "value": "True"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "1265",
            "cond": {
                "type": "bool",
                "value": "True"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "1266",
            "op": "Jump"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "pc": "1279",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "active_game"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "998"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "pc": "1241",
            "op": "Jump"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 2
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "%",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "value": "number_to_pair",
            "op": "StoreVar"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "game$range"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "number_to_pair",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 2
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "i",
            "op": "Cut"
          },
        {
            "pc": "1359",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": "number_to_pair",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "<",
            "op": "Nary"
          },
        {
            "pc": "1334",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "append"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "op": "Pop"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "number_to_pair",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "<",
            "op": "Nary"
          },
        {
            "pc": "1357",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "append"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "op": "Pop"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "pc": "1314",
            "op": "Jump"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "new_waiting",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "game$range"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "number_to_pair",
            "op": "LoadVar"
          },
        {
            "value": "number_to_pair",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "i",
            "op": "Cut"
          },
        {
            "pc": "1392",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "new_waiting",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "append"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "op": "Pop"
          },
        {
            "pc": "1376",
            "op": "Jump"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "new_waiting",
            "op": "LoadVar"
          },
        {
            "value": "new_waiting",
            "op": "DelVar"
          },
        {
            "op": "Store"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "players"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1097"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "pc": "1239",
            "op": "Jump"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": "g",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "973"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "(g, id)",
            "name": "game_join",
            "op": "Frame"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "954"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "waiting"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "op": "Store"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "1447",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "1448",
            "op": "Jump"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "pc": "1454",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "active_game"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1067"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "1492",
            "cond": {
                "type": "bool",
                "value": "True"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "1492",
            "cond": {
                "type": "bool",
                "value": "True"
              },
            "op": "JumpCond"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "arity": 1,
            "value": "not",
            "op": "Nary"
          },
        {
            "pc": "1490",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "arity": 1,
            "value": "not",
            "op": "Nary"
          },
        {
            "pc": "1493",
            "op": "Jump"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "pc": "1493",
            "op": "Jump"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "pc": "1506",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "players"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "998"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "pc": "1454",
            "op": "Jump"
          },
        {
            "value": "id",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "game$teams"
                  }
              ],
            "op": "Store"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": "g",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "973"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "1593",
            "op": "Jump"
          },
        {
            "args": "(g, id)",
            "name": "game_leave",
            "op": "Frame"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "954"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "1548",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "id",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Del"
          },
        {
            "pc": "1562",
            "op": "Jump"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "1562",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "id",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Del"
          },
        {
            "value": "id",
            "op": "DelVar"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team1"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "1579",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "team2"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "1580",
            "op": "Jump"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "pc": "1586",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "active_game"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1067"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "value": "g",
            "op": "LoadVar"
          },
        {
            "value": "g",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "lock"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "973"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "1206"
              },
            "op": "Apply"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "thegame"
                  }
              ],
            "op": "Store"
          },
        {
            "pc": "1650",
            "op": "Jump"
          },
        {
            "args": "id",
            "name": "player",
            "op": "Frame"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "thegame"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1413"
              },
            "op": "Apply"
          },
        {
            "value": "(team1, team2)",
            "op": "StoreVar"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "team1",
            "op": "LoadVar"
          },
        {
            "value": "team2",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "|",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "team1",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": "team2",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 1,
            "value": "abs",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "<=",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "team1",
            "op": "LoadVar"
          },
        {
            "value": "team1",
            "op": "DelVar"
          },
        {
            "value": "team2",
            "op": "LoadVar"
          },
        {
            "value": "team2",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "&",
            "op": "Nary"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "thegame"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "id",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "1527"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": {
                "type": "address",
                "args": [

                  ],
                "func": {
                    "type": "pc",
                    "value": "1233"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "thegame"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "eternal": "True",
            "op": "Spawn"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 6
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "..",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "id",
            "op": "Cut"
          },
        {
            "pc": "1668",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [

                  ],
                "func": {
                    "type": "pc",
                    "value": "1597"
                  }
              },
            "op": "Push"
          },
        {
            "value": "id",
            "op": "LoadVar"
          },
        {
            "value": "id",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "eternal": "False",
            "op": "Spawn"
          },
        {
            "pc": "1659",
            "op": "Jump"
          },
        {
            "value": "id",
            "op": "DelVar"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": "result",
            "op": "DelVar"
          }
      ]
  },
  "macrosteps": [
    {
      "id": "1",
      "tid": "0",
      "shared": { },
      "name": "__init__()",
      "context": {
        "tid": "0",
        "hvalue": "1108941da",
        "fp": "1",
        "id": "0",
        "name": "__init__()",
        "entry": "0",
        "pc": "0",
        "sp": "1",
        "stack": [{ "type": "list", "value": [] }],
        "trace": [
{"pc": "0","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
        ],
        "atomic": "1",
        "next": { "type": "Frame", "name": "__init__", "args": "()", "value": { "type": "list", "value": [] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Frame __init__()",
          "explain": "pop argument () and run method \"__init__\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "__init__" } ] },
          "npc": "1",
          "fp": "1",
          "trace": [
{"pc": "1","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "0"
        },

        {
          "code": "Jump 54",
          "explain": "jump over method definition: set program counter to 54",
          "explain2": { "text": "jump over method definition: set program counter to 54", "args": [] },
          "npc": "54",
          "push": [ ],
          "pc": "1"
        },

        {
          "code": "Push PC(57)",
          "explain": "push constant PC(57)",
          "explain2": { "text": "push constant PC(57)", "args": [] },
          "npc": "55",
          "push": [ { "type": "pc", "value": "57" } ],
          "pc": "54"
        },

        {
          "code": "Builtin(list$tail)",
          "explain": "pop pc () and bind to built-in method list$tail",
          "explain2": { "text": "pop pc () and bind to built-in method list$tail", "args": [ { "type": "pc", "value": "57" } ] },
          "npc": "56",
          "pop": "1",
          "push": [ ],
          "pc": "55"
        },

        {
          "code": "Jump 602",
          "explain": "jump over method definition: set program counter to 602",
          "explain2": { "text": "jump over method definition: set program counter to 602", "args": [] },
          "npc": "602",
          "push": [ ],
          "pc": "56"
        },

        {
          "code": "Push PC(605)",
          "explain": "push constant PC(605)",
          "explain2": { "text": "push constant PC(605)", "args": [] },
          "npc": "603",
          "push": [ { "type": "pc", "value": "605" } ],
          "pc": "602"
        },

        {
          "code": "Builtin(bag$multiplicity)",
          "explain": "pop pc () and bind to built-in method bag$multiplicity",
          "explain2": { "text": "pop pc () and bind to built-in method bag$multiplicity", "args": [ { "type": "pc", "value": "605" } ] },
          "npc": "604",
          "pop": "1",
          "push": [ ],
          "pc": "603"
        },

        {
          "code": "Jump 624",
          "explain": "jump over method definition: set program counter to 624",
          "explain2": { "text": "jump over method definition: set program counter to 624", "args": [] },
          "npc": "624",
          "push": [ ],
          "pc": "604"
        },

        {
          "code": "Push PC(627)",
          "explain": "push constant PC(627)",
          "explain2": { "text": "push constant PC(627)", "args": [] },
          "npc": "625",
          "push": [ { "type": "pc", "value": "627" } ],
          "pc": "624"
        },

        {
          "code": "Builtin(bag$size)",
          "explain": "pop pc () and bind to built-in method bag$size",
          "explain2": { "text": "pop pc () and bind to built-in method bag$size", "args": [ { "type": "pc", "value": "627" } ] },
          "npc": "626",
          "pop": "1",
          "push": [ ],
          "pc": "625"
        },

        {
          "code": "Jump 646",
          "explain": "jump over method definition: set program counter to 646",
          "explain2": { "text": "jump over method definition: set program counter to 646", "args": [] },
          "npc": "646",
          "push": [ ],
          "pc": "626"
        },

        {
          "code": "Push PC(649)",
          "explain": "push constant PC(649)",
          "explain2": { "text": "push constant PC(649)", "args": [] },
          "npc": "647",
          "push": [ { "type": "pc", "value": "649" } ],
          "pc": "646"
        },

        {
          "code": "Builtin(bag$bmin)",
          "explain": "pop pc () and bind to built-in method bag$bmin",
          "explain2": { "text": "pop pc () and bind to built-in method bag$bmin", "args": [ { "type": "pc", "value": "649" } ] },
          "npc": "648",
          "pop": "1",
          "push": [ ],
          "pc": "647"
        },

        {
          "code": "Jump 665",
          "explain": "jump over method definition: set program counter to 665",
          "explain2": { "text": "jump over method definition: set program counter to 665", "args": [] },
          "npc": "665",
          "push": [ ],
          "pc": "648"
        },

        {
          "code": "Push PC(668)",
          "explain": "push constant PC(668)",
          "explain2": { "text": "push constant PC(668)", "args": [] },
          "npc": "666",
          "push": [ { "type": "pc", "value": "668" } ],
          "pc": "665"
        },

        {
          "code": "Builtin(bag$bmax)",
          "explain": "pop pc () and bind to built-in method bag$bmax",
          "explain2": { "text": "pop pc () and bind to built-in method bag$bmax", "args": [ { "type": "pc", "value": "668" } ] },
          "npc": "667",
          "pop": "1",
          "push": [ ],
          "pc": "666"
        },

        {
          "code": "Jump 693",
          "explain": "jump over method definition: set program counter to 693",
          "explain2": { "text": "jump over method definition: set program counter to 693", "args": [] },
          "npc": "693",
          "push": [ ],
          "pc": "667"
        },

        {
          "code": "Push PC(696)",
          "explain": "push constant PC(696)",
          "explain2": { "text": "push constant PC(696)", "args": [] },
          "npc": "694",
          "push": [ { "type": "pc", "value": "696" } ],
          "pc": "693"
        },

        {
          "code": "Builtin(bag$add)",
          "explain": "pop pc () and bind to built-in method bag$add",
          "explain2": { "text": "pop pc () and bind to built-in method bag$add", "args": [ { "type": "pc", "value": "696" } ] },
          "npc": "695",
          "pop": "1",
          "push": [ ],
          "pc": "694"
        },

        {
          "code": "Jump 722",
          "explain": "jump over method definition: set program counter to 722",
          "explain2": { "text": "jump over method definition: set program counter to 722", "args": [] },
          "npc": "722",
          "push": [ ],
          "pc": "695"
        },

        {
          "code": "Push PC(725)",
          "explain": "push constant PC(725)",
          "explain2": { "text": "push constant PC(725)", "args": [] },
          "npc": "723",
          "push": [ { "type": "pc", "value": "725" } ],
          "pc": "722"
        },

        {
          "code": "Builtin(bag$remove)",
          "explain": "pop pc () and bind to built-in method bag$remove",
          "explain2": { "text": "pop pc () and bind to built-in method bag$remove", "args": [ { "type": "pc", "value": "725" } ] },
          "npc": "724",
          "pop": "1",
          "push": [ ],
          "pc": "723"
        },

        {
          "code": "Jump 1593",
          "explain": "jump over method definition: set program counter to 1593",
          "explain2": { "text": "jump over method definition: set program counter to 1593", "args": [] },
          "npc": "1593",
          "push": [ ],
          "pc": "724"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1594",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1593"
        },

        {
          "code": "Apply PC(1206)",
          "explain": "pop an argument ([]) and call method (1206: \"Game\")",
          "explain2": { "text": "pop an argument (#+) and call method (1206: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "Game" } ] },
          "npc": "1206",
          "fp": "4",
          "trace": [
{"pc": "1595","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1206","xpc": "1206","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3}
          ],
          "push": [ { "type": "int", "value": "25506" }, { "type": "list", "value": [] } ],
          "pc": "1594"
        },

        {
          "code": "Frame Game()",
          "explain": "pop argument () and run method \"Game\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "Game" } ] },
          "npc": "1207",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1206"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "1208",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1207"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1209",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1208"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1210",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1209"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values ([], \"waiting\", {:}); add key/value pair to dictionary; push result ({ \"waiting\": [] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "waiting" }, { "type": "dict", "value": [] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1211",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1210"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1212",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1211"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "1213",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1212"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values ({}, \"team1\", { \"waiting\": [] }); add key/value pair to dictionary; push result ({ \"team1\": {}, \"waiting\": [] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "atom", "value": "team1" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1214",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1213"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1215",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1214"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "1216",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1215"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values ({}, \"team2\", { \"team1\": {}, \"waiting\": [] }); add key/value pair to dictionary; push result ({ \"team1\": {}, \"team2\": {}, \"waiting\": [] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "atom", "value": "team2" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1217",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1216"
        },

        {
          "code": "Push \"lock\"",
          "explain": "push constant \"lock\"",
          "explain2": { "text": "push constant \"lock\"", "args": [] },
          "npc": "1218",
          "push": [ { "type": "atom", "value": "lock" } ],
          "pc": "1217"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1219",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1218"
        },

        {
          "code": "Apply PC(931)",
          "explain": "pop an argument ([]) and call method (931: \"Lock\")",
          "explain2": { "text": "pop an argument (#+) and call method (931: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "Lock" } ] },
          "npc": "931",
          "fp": "9",
          "trace": [
{"pc": "1595","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1220","xpc": "1206","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "931","xpc": "931","method_name": { "type": "atom", "value": "Lock" },
"method_arg": { "type": "list", "value": [] },
"method": "Lock()","calltype": "normal","vars":{ },"sp": 8}
          ],
          "push": [ { "type": "int", "value": "19506" }, { "type": "list", "value": [] } ],
          "pc": "1219"
        },

        {
          "code": "Frame Lock()",
          "explain": "pop argument () and run method \"Lock\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "Lock" } ] },
          "npc": "932",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "931"
        },

        {
          "code": "DelVar result",
          "explain": "delete method variable result",
          "explain2": { "text": "delete method variable result", "args": [] },
          "npc": "933",
          "push": [ ],
          "pc": "932"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "934",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "933"
        },

        {
          "code": "Apply PC(912)",
          "explain": "pop an argument (False) and call method (912: \"BinSema\")",
          "explain2": { "text": "pop an argument (#+) and call method (912: #+)", "args": [ { "type": "bool", "value": "False" }, { "type": "atom", "value": "BinSema" } ] },
          "npc": "912",
          "fp": "12",
          "trace": [
{"pc": "1595","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1220","xpc": "1206","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "935","xpc": "931","method_name": { "type": "atom", "value": "Lock" },
"method_arg": { "type": "list", "value": [] },
"method": "Lock()","calltype": "normal","vars":{ },"sp": 8},{"pc": "912","xpc": "912","method_name": { "type": "atom", "value": "BinSema" },
"method_arg": { "type": "bool", "value": "False" },
"method": "BinSema(False)","calltype": "normal","vars":{ },"sp": 11}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "14946" }, { "type": "bool", "value": "False" } ],
          "pc": "934"
        },

        {
          "code": "Frame BinSema(initial)",
          "explain": "pop argument (False), assign to initial, and run method \"BinSema\"",
          "explain2": { "text": "pop argument (#+), assign to initial, and run method #+", "args": [ { "type": "bool", "value": "False" }, { "type": "atom", "value": "BinSema" } ] },
          "npc": "913",
          "local": { "initial": { "type": "bool", "value": "False" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "912"
        },

        {
          "code": "AtomicInc(lazy)",
          "explain": "increment atomic counter from 1 to 2: remains atomic",
          "explain2": { "text": "increment atomic counter from 1 to 2: remains atomic", "args": [ ] },
          "npc": "914",
          "atomic": "2",
          "push": [ ],
          "pc": "913"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "915",
          "readonly": "1",
          "push": [ ],
          "pc": "914"
        },

        {
          "code": "LoadVar initial",
          "explain": "push value (False) of variable \"initial\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "bool", "value": "False" }, { "type": "atom", "value": "initial" } ] },
          "npc": "916",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "915"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "917",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "916"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "918",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "917"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (False, {}); insert first value into the second; push result ({ False })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" } ] } ] },
          "npc": "919",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" } ] } ],
          "pc": "918"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "920",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "919"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (True, { False }); insert first value into the second; push result ({ False, True })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "True" }, { "type": "set", "value": [{ "type": "bool", "value": "False" } ] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ] },
          "npc": "921",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ],
          "pc": "920"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ False, True }, False); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }, { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "922",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "921"
        },

        {
          "code": "Assert",
          "explain": "pop a value (True); do not raise exception",
          "explain2": { "text": "pop a value (True); do not raise exception", "args": [ ] },
          "npc": "923",
          "pop": "1",
          "push": [ ],
          "pc": "922"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "924",
          "readonly": "0",
          "push": [ ],
          "pc": "923"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 2 to 1: remains atomic",
          "explain2": { "text": "decrement atomic counter from 2 to 1: remains atomic", "args": [ ] },
          "npc": "925",
          "atomic": "1",
          "push": [ ],
          "pc": "924"
        },

        {
          "code": "LoadVar initial",
          "explain": "push value (False) of variable \"initial\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "bool", "value": "False" }, { "type": "atom", "value": "initial" } ] },
          "npc": "926",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "925"
        },

        {
          "code": "DelVar initial",
          "explain": "delete method variable initial",
          "explain2": { "text": "delete method variable initial", "args": [] },
          "npc": "927",
          "local": { },
          "push": [ ],
          "pc": "926"
        },

        {
          "code": "StoreVar sema",
          "explain": "pop value (False) and store locally in variable \\\"sema\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"sema\"", "args": [ { "type": "bool", "value": "False" } ] },
          "npc": "928",
          "local": { "sema": { "type": "bool", "value": "False" } },
          "pop": "1",
          "push": [ ],
          "pc": "927"
        },

        {
          "code": "ReturnOp(sema)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "bool", "value": "False" } ] },
          "npc": "935",
          "fp": "9",
          "trace": [
{"pc": "1595","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1220","xpc": "1206","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "935","xpc": "931","method_name": { "type": "atom", "value": "Lock" },
"method_arg": { "type": "list", "value": [] },
"method": "Lock()","calltype": "normal","vars":{ },"sp": 8}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "928"
        },

        {
          "code": "StoreVar result",
          "explain": "pop value (False) and store locally in variable \\\"result\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"result\"", "args": [ { "type": "bool", "value": "False" } ] },
          "npc": "936",
          "local": { "result": { "type": "bool", "value": "False" } },
          "pop": "1",
          "push": [ ],
          "pc": "935"
        },

        {
          "code": "ReturnOp(result)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "bool", "value": "False" } ] },
          "npc": "1220",
          "fp": "4",
          "trace": [
{"pc": "1595","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1220","xpc": "1206","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "936"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values (False, \"lock\", { \"team1\": {}, \"team2\": {}, \"waiting\": [] }); add key/value pair to dictionary; push result ({ \"lock\": False, \"team1\": {}, \"team2\": {}, \"waiting\": [] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "atom", "value": "lock" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1221",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1220"
        },

        {
          "code": "Push \"active_game\"",
          "explain": "push constant \"active_game\"",
          "explain2": { "text": "push constant \"active_game\"", "args": [] },
          "npc": "1222",
          "push": [ { "type": "atom", "value": "active_game" } ],
          "pc": "1221"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1223",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1222"
        },

        {
          "code": "Apply PC(989)",
          "explain": "pop an argument ([]) and call method (989: \"Condition\")",
          "explain2": { "text": "pop an argument (#+) and call method (989: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "Condition" } ] },
          "npc": "989",
          "fp": "9",
          "trace": [
{"pc": "1595","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1224","xpc": "1206","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "989","xpc": "989","method_name": { "type": "atom", "value": "Condition" },
"method_arg": { "type": "list", "value": [] },
"method": "Condition()","calltype": "normal","vars":{ },"sp": 8}
          ],
          "push": [ { "type": "int", "value": "19570" }, { "type": "list", "value": [] } ],
          "pc": "1223"
        },

        {
          "code": "Frame Condition()",
          "explain": "pop argument () and run method \"Condition\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "Condition" } ] },
          "npc": "990",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "989"
        },

        {
          "code": "DelVar result",
          "explain": "delete method variable result",
          "explain2": { "text": "delete method variable result", "args": [] },
          "npc": "991",
          "push": [ ],
          "pc": "990"
        },

        {
          "code": "Push PC(541)",
          "explain": "push program counter constant 541 ()",
          "explain2": { "text": "push program counter constant 541 ()", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "992",
          "push": [ { "type": "pc", "value": "541" } ],
          "pc": "991"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "993",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "992"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([], PC(541)); push result (?PC(541)[[]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "pc", "value": "541" }, { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ] },
          "npc": "994",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ],
          "pc": "993"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([]) and call method (541: \"empty\")",
          "explain2": { "text": "pop an argument (#+) and call method (541: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "empty" } ] },
          "npc": "541",
          "fp": "12",
          "trace": [
{"pc": "1595","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1224","xpc": "1206","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "995","xpc": "989","method_name": { "type": "atom", "value": "Condition" },
"method_arg": { "type": "list", "value": [] },
"method": "Condition()","calltype": "normal","vars":{ },"sp": 8},{"pc": "541","xpc": "541","method_name": { "type": "atom", "value": "empty" },
"method_arg": { "type": "list", "value": [] },
"method": "empty()","calltype": "normal","vars":{ },"sp": 11}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "15906" }, { "type": "list", "value": [] } ],
          "pc": "994"
        },

        {
          "code": "Frame empty()",
          "explain": "pop argument () and run method \"empty\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "542",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "541"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "543",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "542"
        },

        {
          "code": "StoreVar bg",
          "explain": "pop value ({:}) and store locally in variable \\\"bg\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"bg\"", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "544",
          "local": { "bg": { "type": "dict", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "543"
        },

        {
          "code": "ReturnOp(bg)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "995",
          "fp": "9",
          "trace": [
{"pc": "1595","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1224","xpc": "1206","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "995","xpc": "989","method_name": { "type": "atom", "value": "Condition" },
"method_arg": { "type": "list", "value": [] },
"method": "Condition()","calltype": "normal","vars":{ },"sp": 8}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "544"
        },

        {
          "code": "StoreVar result",
          "explain": "pop value ({:}) and store locally in variable \\\"result\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"result\"", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "996",
          "local": { "result": { "type": "dict", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "995"
        },

        {
          "code": "ReturnOp(result)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "1224",
          "fp": "4",
          "trace": [
{"pc": "1595","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1224","xpc": "1206","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "996"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values ({:}, \"active_game\", { \"lock\": False, \"team1\": {}, \"team2\": {}, \"waiting\": [] }); add key/value pair to dictionary; push result ({ \"active_game\": {:}, \"lock\": False, \"team1\": {}, \"team2\": {}, \"waiting\": [] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "dict", "value": [] }, { "type": "atom", "value": "active_game" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1225",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1224"
        },

        {
          "code": "Push \"players\"",
          "explain": "push constant \"players\"",
          "explain2": { "text": "push constant \"players\"", "args": [] },
          "npc": "1226",
          "push": [ { "type": "atom", "value": "players" } ],
          "pc": "1225"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1227",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1226"
        },

        {
          "code": "Apply PC(989)",
          "explain": "pop an argument ([]) and call method (989: \"Condition\")",
          "explain2": { "text": "pop an argument (#+) and call method (989: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "Condition" } ] },
          "npc": "989",
          "fp": "9",
          "trace": [
{"pc": "1595","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1228","xpc": "1206","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "989","xpc": "989","method_name": { "type": "atom", "value": "Condition" },
"method_arg": { "type": "list", "value": [] },
"method": "Condition()","calltype": "normal","vars":{ },"sp": 8}
          ],
          "push": [ { "type": "int", "value": "19634" }, { "type": "list", "value": [] } ],
          "pc": "1227"
        },

        {
          "code": "Frame Condition()",
          "explain": "pop argument () and run method \"Condition\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "Condition" } ] },
          "npc": "990",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "989"
        },

        {
          "code": "DelVar result",
          "explain": "delete method variable result",
          "explain2": { "text": "delete method variable result", "args": [] },
          "npc": "991",
          "push": [ ],
          "pc": "990"
        },

        {
          "code": "Push PC(541)",
          "explain": "push program counter constant 541 ()",
          "explain2": { "text": "push program counter constant 541 ()", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "992",
          "push": [ { "type": "pc", "value": "541" } ],
          "pc": "991"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "993",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "992"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([], PC(541)); push result (?PC(541)[[]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "pc", "value": "541" }, { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ] },
          "npc": "994",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ],
          "pc": "993"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([]) and call method (541: \"empty\")",
          "explain2": { "text": "pop an argument (#+) and call method (541: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "empty" } ] },
          "npc": "541",
          "fp": "12",
          "trace": [
{"pc": "1595","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1228","xpc": "1206","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "995","xpc": "989","method_name": { "type": "atom", "value": "Condition" },
"method_arg": { "type": "list", "value": [] },
"method": "Condition()","calltype": "normal","vars":{ },"sp": 8},{"pc": "541","xpc": "541","method_name": { "type": "atom", "value": "empty" },
"method_arg": { "type": "list", "value": [] },
"method": "empty()","calltype": "normal","vars":{ },"sp": 11}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "15906" }, { "type": "list", "value": [] } ],
          "pc": "994"
        },

        {
          "code": "Frame empty()",
          "explain": "pop argument () and run method \"empty\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "542",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "541"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "543",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "542"
        },

        {
          "code": "StoreVar bg",
          "explain": "pop value ({:}) and store locally in variable \\\"bg\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"bg\"", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "544",
          "local": { "bg": { "type": "dict", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "543"
        },

        {
          "code": "ReturnOp(bg)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "995",
          "fp": "9",
          "trace": [
{"pc": "1595","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1228","xpc": "1206","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3},{"pc": "995","xpc": "989","method_name": { "type": "atom", "value": "Condition" },
"method_arg": { "type": "list", "value": [] },
"method": "Condition()","calltype": "normal","vars":{ },"sp": 8}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "544"
        },

        {
          "code": "StoreVar result",
          "explain": "pop value ({:}) and store locally in variable \\\"result\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"result\"", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "996",
          "local": { "result": { "type": "dict", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "995"
        },

        {
          "code": "ReturnOp(result)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "1228",
          "fp": "4",
          "trace": [
{"pc": "1595","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "1228","xpc": "1206","method_name": { "type": "atom", "value": "Game" },
"method_arg": { "type": "list", "value": [] },
"method": "Game()","calltype": "normal","vars":{ },"sp": 3}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "996"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values ({:}, \"players\", { \"active_game\": {:}, \"lock\": False, \"team1\": {}, \"team2\": {}, \"waiting\": [] }); add key/value pair to dictionary; push result ({ \"active_game\": {:}, \"lock\": False, \"players\": {:}, \"team1\": {}, \"team2\": {}, \"waiting\": [] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "dict", "value": [] }, { "type": "atom", "value": "players" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1229",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1228"
        },

        {
          "code": "StoreVar game",
          "explain": "pop value ({ \"active_game\": {:}, \"lock\": False, \"players\": {:}, \"team1\": {}, \"team2\": {}, \"waiting\": [] }) and store locally in variable \\\"game\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"game\"", "args": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1230",
          "local": { "game": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1229"
        },

        {
          "code": "ReturnOp(game)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ] },
          "npc": "1595",
          "fp": "1",
          "trace": [
{"pc": "1595","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } ],
          "pc": "1230"
        },

        {
          "code": "Store thegame",
          "explain": "pop value ({ \"active_game\": {:}, \"lock\": False, \"players\": {:}, \"team1\": {}, \"team2\": {}, \"waiting\": [] }) and store into variable thegame",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
          "npc": "1596",
          "pop": "1",
          "push": [ ],
          "pc": "1595"
        },

        {
          "code": "Jump 1650",
          "explain": "jump over method definition: set program counter to 1650",
          "explain2": { "text": "jump over method definition: set program counter to 1650", "args": [] },
          "npc": "1650",
          "push": [ ],
          "pc": "1596"
        },

        {
          "code": "Push ?PC(1233)",
          "explain": "push constant ?PC(1233)",
          "explain2": { "text": "push constant ?PC(1233)", "args": [] },
          "npc": "1651",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "1233" }, "args": [ ] } ],
          "pc": "1650"
        },

        {
          "code": "Push ?thegame",
          "explain": "push constant ?thegame",
          "explain2": { "text": "push constant ?thegame", "args": [] },
          "npc": "1652",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1651"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (?thegame, ?PC(1233)); push result (?PC(1233)[?thegame])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "1233" }, "args": [ ] }, { "type": "address", "func": { "type": "pc", "value": "1233" }, "args": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] } ] },
          "npc": "1653",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "1233" }, "args": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] } ],
          "pc": "1652"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "1654",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1653"
        },

        {
          "code": "Spawn",
          "explain": "pop local state ({:}), arg (?thegame), and pc (1233: \"game_umpire\"), and spawn thread",
          "explain2": { "text": "pop local state (#+), arg (#+), and pc (1233: #+), and spawn thread", "args": [ { "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "game_umpire" } ] },
          "npc": "1655",
          "pop": "2",
          "push": [ ],
          "pc": "1654"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "1656",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "1655"
        },

        {
          "code": "Push 6",
          "explain": "push constant 6",
          "explain2": { "text": "push constant 6", "args": [] },
          "npc": "1657",
          "push": [ { "type": "int", "value": "6" } ],
          "pc": "1656"
        },

        {
          "code": "2-ary ..",
          "explain": "pop 2 values (6, 1); range of integers; push result ({ 1, 2, 3, 4, 5, 6 })",
          "explain2": { "text": "pop 2 values (#+, #+); range of integers; push result (#+)", "args": [ { "type": "int", "value": "6" }, { "type": "int", "value": "1" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" } ] } ] },
          "npc": "1658",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" } ] } ],
          "pc": "1657"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1659",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1658"
        },

        {
          "code": "Cut(id)",
          "explain": "pop index (0) and value ({ 1, 2, 3, 4, 5, 6 }); assign value (1) to id; push new index (1) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to id; push new index (1) and True", "args": [ { "type": "int", "value": "0" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "1660",
          "local": { "id": { "type": "int", "value": "1" } },
          "pop": "1",
          "push": [ { "type": "int", "value": "1" }, { "type": "bool", "value": "True" } ],
          "pc": "1659"
        },

        {
          "code": "JumpCond False 1668",
          "explain": "pop value (True), compare to False, and jump to 1668 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1668 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1661",
          "pop": "1",
          "push": [ ],
          "pc": "1660"
        },

        {
          "code": "Push ?PC(1597)",
          "explain": "push constant ?PC(1597)",
          "explain2": { "text": "push constant ?PC(1597)", "args": [] },
          "npc": "1662",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [ ] } ],
          "pc": "1661"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (1) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "id" } ] },
          "npc": "1663",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "1662"
        },

        {
          "code": "DelVar id",
          "explain": "delete method variable id",
          "explain2": { "text": "delete method variable id", "args": [] },
          "npc": "1664",
          "local": { },
          "push": [ ],
          "pc": "1663"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?PC(1597)); push result (?PC(1597)[1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [ ] }, { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "1665",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [{ "type": "int", "value": "1" } ] } ],
          "pc": "1664"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "1666",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1665"
        },

        {
          "code": "Spawn",
          "explain": "pop local state ({:}), arg (1), and pc (1597: \"player\"), and spawn thread",
          "explain2": { "text": "pop local state (#+), arg (#+), and pc (1597: #+), and spawn thread", "args": [ { "type": "dict", "value": [] }, { "type": "int", "value": "1" }, { "type": "atom", "value": "player" } ] },
          "npc": "1667",
          "pop": "2",
          "push": [ ],
          "pc": "1666"
        },

        {
          "code": "Jump 1659",
          "explain": "set program counter to 1659",
          "explain2": { "text": "set program counter to 1659", "args": [] },
          "npc": "1659",
          "push": [ ],
          "pc": "1667"
        },

        {
          "code": "Cut(id)",
          "explain": "pop index (1) and value ({ 1, 2, 3, 4, 5, 6 }); assign value (2) to id; push new index (2) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to id; push new index (2) and True", "args": [ { "type": "int", "value": "1" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "1660",
          "local": { "id": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ { "type": "int", "value": "2" }, { "type": "bool", "value": "True" } ],
          "pc": "1659"
        },

        {
          "code": "JumpCond False 1668",
          "explain": "pop value (True), compare to False, and jump to 1668 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1668 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1661",
          "pop": "1",
          "push": [ ],
          "pc": "1660"
        },

        {
          "code": "Push ?PC(1597)",
          "explain": "push constant ?PC(1597)",
          "explain2": { "text": "push constant ?PC(1597)", "args": [] },
          "npc": "1662",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [ ] } ],
          "pc": "1661"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (2) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "id" } ] },
          "npc": "1663",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1662"
        },

        {
          "code": "DelVar id",
          "explain": "delete method variable id",
          "explain2": { "text": "delete method variable id", "args": [] },
          "npc": "1664",
          "local": { },
          "push": [ ],
          "pc": "1663"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (2, ?PC(1597)); push result (?PC(1597)[2])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [ ] }, { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "1665",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [{ "type": "int", "value": "2" } ] } ],
          "pc": "1664"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "1666",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1665"
        },

        {
          "code": "Spawn",
          "explain": "pop local state ({:}), arg (2), and pc (1597: \"player\"), and spawn thread",
          "explain2": { "text": "pop local state (#+), arg (#+), and pc (1597: #+), and spawn thread", "args": [ { "type": "dict", "value": [] }, { "type": "int", "value": "2" }, { "type": "atom", "value": "player" } ] },
          "npc": "1667",
          "pop": "2",
          "push": [ ],
          "pc": "1666"
        },

        {
          "code": "Jump 1659",
          "explain": "set program counter to 1659",
          "explain2": { "text": "set program counter to 1659", "args": [] },
          "npc": "1659",
          "push": [ ],
          "pc": "1667"
        },

        {
          "code": "Cut(id)",
          "explain": "pop index (2) and value ({ 1, 2, 3, 4, 5, 6 }); assign value (3) to id; push new index (3) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to id; push new index (3) and True", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "1660",
          "local": { "id": { "type": "int", "value": "3" } },
          "pop": "1",
          "push": [ { "type": "int", "value": "3" }, { "type": "bool", "value": "True" } ],
          "pc": "1659"
        },

        {
          "code": "JumpCond False 1668",
          "explain": "pop value (True), compare to False, and jump to 1668 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1668 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1661",
          "pop": "1",
          "push": [ ],
          "pc": "1660"
        },

        {
          "code": "Push ?PC(1597)",
          "explain": "push constant ?PC(1597)",
          "explain2": { "text": "push constant ?PC(1597)", "args": [] },
          "npc": "1662",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [ ] } ],
          "pc": "1661"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (3) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "id" } ] },
          "npc": "1663",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "1662"
        },

        {
          "code": "DelVar id",
          "explain": "delete method variable id",
          "explain2": { "text": "delete method variable id", "args": [] },
          "npc": "1664",
          "local": { },
          "push": [ ],
          "pc": "1663"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (3, ?PC(1597)); push result (?PC(1597)[3])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [ ] }, { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [{ "type": "int", "value": "3" } ] } ] },
          "npc": "1665",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [{ "type": "int", "value": "3" } ] } ],
          "pc": "1664"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "1666",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1665"
        },

        {
          "code": "Spawn",
          "explain": "pop local state ({:}), arg (3), and pc (1597: \"player\"), and spawn thread",
          "explain2": { "text": "pop local state (#+), arg (#+), and pc (1597: #+), and spawn thread", "args": [ { "type": "dict", "value": [] }, { "type": "int", "value": "3" }, { "type": "atom", "value": "player" } ] },
          "npc": "1667",
          "pop": "2",
          "push": [ ],
          "pc": "1666"
        },

        {
          "code": "Jump 1659",
          "explain": "set program counter to 1659",
          "explain2": { "text": "set program counter to 1659", "args": [] },
          "npc": "1659",
          "push": [ ],
          "pc": "1667"
        },

        {
          "code": "Cut(id)",
          "explain": "pop index (3) and value ({ 1, 2, 3, 4, 5, 6 }); assign value (4) to id; push new index (4) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to id; push new index (4) and True", "args": [ { "type": "int", "value": "3" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "1660",
          "local": { "id": { "type": "int", "value": "4" } },
          "pop": "1",
          "push": [ { "type": "int", "value": "4" }, { "type": "bool", "value": "True" } ],
          "pc": "1659"
        },

        {
          "code": "JumpCond False 1668",
          "explain": "pop value (True), compare to False, and jump to 1668 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1668 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1661",
          "pop": "1",
          "push": [ ],
          "pc": "1660"
        },

        {
          "code": "Push ?PC(1597)",
          "explain": "push constant ?PC(1597)",
          "explain2": { "text": "push constant ?PC(1597)", "args": [] },
          "npc": "1662",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [ ] } ],
          "pc": "1661"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (4) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "id" } ] },
          "npc": "1663",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "1662"
        },

        {
          "code": "DelVar id",
          "explain": "delete method variable id",
          "explain2": { "text": "delete method variable id", "args": [] },
          "npc": "1664",
          "local": { },
          "push": [ ],
          "pc": "1663"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (4, ?PC(1597)); push result (?PC(1597)[4])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [ ] }, { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1665",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1664"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "1666",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1665"
        },

        {
          "code": "Spawn",
          "explain": "pop local state ({:}), arg (4), and pc (1597: \"player\"), and spawn thread",
          "explain2": { "text": "pop local state (#+), arg (#+), and pc (1597: #+), and spawn thread", "args": [ { "type": "dict", "value": [] }, { "type": "int", "value": "4" }, { "type": "atom", "value": "player" } ] },
          "npc": "1667",
          "pop": "2",
          "push": [ ],
          "pc": "1666"
        },

        {
          "code": "Jump 1659",
          "explain": "set program counter to 1659",
          "explain2": { "text": "set program counter to 1659", "args": [] },
          "npc": "1659",
          "push": [ ],
          "pc": "1667"
        },

        {
          "code": "Cut(id)",
          "explain": "pop index (4) and value ({ 1, 2, 3, 4, 5, 6 }); assign value (5) to id; push new index (5) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to id; push new index (5) and True", "args": [ { "type": "int", "value": "4" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" } ] }, { "type": "int", "value": "5" } ] },
          "npc": "1660",
          "local": { "id": { "type": "int", "value": "5" } },
          "pop": "1",
          "push": [ { "type": "int", "value": "5" }, { "type": "bool", "value": "True" } ],
          "pc": "1659"
        },

        {
          "code": "JumpCond False 1668",
          "explain": "pop value (True), compare to False, and jump to 1668 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1668 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1661",
          "pop": "1",
          "push": [ ],
          "pc": "1660"
        },

        {
          "code": "Push ?PC(1597)",
          "explain": "push constant ?PC(1597)",
          "explain2": { "text": "push constant ?PC(1597)", "args": [] },
          "npc": "1662",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [ ] } ],
          "pc": "1661"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (5) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "5" }, { "type": "atom", "value": "id" } ] },
          "npc": "1663",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "1662"
        },

        {
          "code": "DelVar id",
          "explain": "delete method variable id",
          "explain2": { "text": "delete method variable id", "args": [] },
          "npc": "1664",
          "local": { },
          "push": [ ],
          "pc": "1663"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (5, ?PC(1597)); push result (?PC(1597)[5])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [ ] }, { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [{ "type": "int", "value": "5" } ] } ] },
          "npc": "1665",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [{ "type": "int", "value": "5" } ] } ],
          "pc": "1664"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "1666",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1665"
        },

        {
          "code": "Spawn",
          "explain": "pop local state ({:}), arg (5), and pc (1597: \"player\"), and spawn thread",
          "explain2": { "text": "pop local state (#+), arg (#+), and pc (1597: #+), and spawn thread", "args": [ { "type": "dict", "value": [] }, { "type": "int", "value": "5" }, { "type": "atom", "value": "player" } ] },
          "npc": "1667",
          "pop": "2",
          "push": [ ],
          "pc": "1666"
        },

        {
          "code": "Jump 1659",
          "explain": "set program counter to 1659",
          "explain2": { "text": "set program counter to 1659", "args": [] },
          "npc": "1659",
          "push": [ ],
          "pc": "1667"
        },

        {
          "code": "Cut(id)",
          "explain": "pop index (5) and value ({ 1, 2, 3, 4, 5, 6 }); assign value (6) to id; push new index (6) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to id; push new index (6) and True", "args": [ { "type": "int", "value": "5" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" } ] }, { "type": "int", "value": "6" } ] },
          "npc": "1660",
          "local": { "id": { "type": "int", "value": "6" } },
          "pop": "1",
          "push": [ { "type": "int", "value": "6" }, { "type": "bool", "value": "True" } ],
          "pc": "1659"
        },

        {
          "code": "JumpCond False 1668",
          "explain": "pop value (True), compare to False, and jump to 1668 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1668 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1661",
          "pop": "1",
          "push": [ ],
          "pc": "1660"
        },

        {
          "code": "Push ?PC(1597)",
          "explain": "push constant ?PC(1597)",
          "explain2": { "text": "push constant ?PC(1597)", "args": [] },
          "npc": "1662",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [ ] } ],
          "pc": "1661"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (6) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "6" }, { "type": "atom", "value": "id" } ] },
          "npc": "1663",
          "push": [ { "type": "int", "value": "6" } ],
          "pc": "1662"
        },

        {
          "code": "DelVar id",
          "explain": "delete method variable id",
          "explain2": { "text": "delete method variable id", "args": [] },
          "npc": "1664",
          "local": { },
          "push": [ ],
          "pc": "1663"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (6, ?PC(1597)); push result (?PC(1597)[6])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "6" }, { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [ ] }, { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [{ "type": "int", "value": "6" } ] } ] },
          "npc": "1665",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "1597" }, "args": [{ "type": "int", "value": "6" } ] } ],
          "pc": "1664"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "1666",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1665"
        },

        {
          "code": "Spawn",
          "explain": "pop local state ({:}), arg (6), and pc (1597: \"player\"), and spawn thread",
          "explain2": { "text": "pop local state (#+), arg (#+), and pc (1597: #+), and spawn thread", "args": [ { "type": "dict", "value": [] }, { "type": "int", "value": "6" }, { "type": "atom", "value": "player" } ] },
          "npc": "1667",
          "pop": "2",
          "push": [ ],
          "pc": "1666"
        },

        {
          "code": "Jump 1659",
          "explain": "set program counter to 1659",
          "explain2": { "text": "set program counter to 1659", "args": [] },
          "npc": "1659",
          "push": [ ],
          "pc": "1667"
        },

        {
          "code": "Cut(id)",
          "explain": "pop index (6) and value ({ 1, 2, 3, 4, 5, 6 }); out of range -> push False",
          "explain2": { "text": "pop index (#+) and value (#+); out of range -> push False", "args": [ { "type": "int", "value": "6" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" } ] } ] },
          "npc": "1660",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1659"
        },

        {
          "code": "JumpCond False 1668",
          "explain": "pop value (False), compare to False, and jump to 1668 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1668 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "1668",
          "pop": "1",
          "push": [ ],
          "pc": "1660"
        },

        {
          "code": "DelVar id",
          "explain": "delete method variable id",
          "explain2": { "text": "delete method variable id", "args": [] },
          "npc": "1669",
          "push": [ ],
          "pc": "1668"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "1669",
          "mode": "terminated",
          "pop": "1",
          "push": [ { "type": "address" } ],
          "pc": "1669"
        }

      ],
      "ctxbag": {
          "1340003ca": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400051a": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1340003ca",
          "fp": "1",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "13400051a",
          "fp": "1",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "4" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "4" } },
          "mode": "runnable"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "5",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "13400051a",
        "fp": "1",
        "name": "player(4)",
        "entry": "1597",
        "pc": "1597",
        "sp": "1",
        "stack": [{ "type": "int", "value": "4" }],
        "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ },"sp": 0}
        ],
        "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "4" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Frame player(id)",
          "explain": "pop argument (4), assign to id, and run method \"player\"",
          "explain2": { "text": "pop argument (#+), assign to id, and run method #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "player" } ] },
          "npc": "1598",
          "fp": "1",
          "trace": [
{"pc": "1598","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0}
          ],
          "local": { "id": { "type": "int", "value": "4" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1597"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1599",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1598"
        },

        {
          "code": "Push ?thegame",
          "explain": "push constant ?thegame",
          "explain2": { "text": "push constant ?thegame", "args": [] },
          "npc": "1600",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1599"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?thegame, []); insert first value into the second; push result ([?thegame])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] } ] },
          "npc": "1601",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] } ],
          "pc": "1600"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (4) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "id" } ] },
          "npc": "1602",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "1601"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (4, [?thegame]); insert first value into the second; push result ([?thegame, 4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] } ] },
          "npc": "1603",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] } ],
          "pc": "1602"
        },

        {
          "code": "Apply PC(1413)",
          "explain": "pop an argument ([?thegame, 4]) and call method (1413: \"game_join\")",
          "explain2": { "text": "pop an argument (#+) and call method (1413: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "game_join" } ] },
          "npc": "1413",
          "fp": "4",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1413","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] } ],
          "pc": "1603"
        },

        {
          "code": "Frame game_join(g, id)",
          "explain": "pop argument ([?thegame, 4]), assign to (g, id), and run method \"game_join\"",
          "explain2": { "text": "pop argument (#+), assign to (g, id), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "game_join" } ] },
          "npc": "1414",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] } ],
          "pc": "1413"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1415",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1414"
        },

        {
          "code": "Push \"lock\"",
          "explain": "push constant \"lock\"",
          "explain2": { "text": "push constant \"lock\"", "args": [] },
          "npc": "1416",
          "push": [ { "type": "atom", "value": "lock" } ],
          "pc": "1415"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"lock\", ?thegame); push result (?thegame[\"lock\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "lock" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "npc": "1417",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1416"
        },

        {
          "code": "Apply PC(954)",
          "explain": "pop an argument (?thegame[\"lock\"]) and call method (954: \"acquire\")",
          "explain2": { "text": "pop an argument (#+) and call method (954: #+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "acquire" } ] },
          "npc": "954",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1418","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "954","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 6}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "22674" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1417"
        },

        {
          "code": "Frame acquire(binsema)",
          "explain": "pop argument (?thegame[\"lock\"]), assign to binsema, and run method \"acquire\"",
          "explain2": { "text": "pop argument (#+), assign to binsema, and run method #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "acquire" } ] },
          "npc": "955",
          "local": { "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] } ],
          "pc": "954"
        }

      ],
      "ctxbag": {
          "1340003ca": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "13400094a": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1340003ca",
          "fp": "1",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "13400094a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "955",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "22674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1418","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "955","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "29",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "13400094a",
        "fp": "7",
        "name": "player(4)",
        "entry": "1597",
        "pc": "955",
        "sp": "7",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "22674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
        "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1418","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "955","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "956",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1418","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "956","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "955"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "957",
          "readonly": "1",
          "push": [ ],
          "pc": "956"
        },

        {
          "code": "LoadVar binsema",
          "explain": "push value (?thegame[\"lock\"]) of variable \"binsema\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "binsema" } ] },
          "npc": "958",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "957"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"lock\"]) and push value (False)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "bool", "value": "False" } ] },
          "npc": "959",
          "pop": "1",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "958"
        },

        {
          "code": "1-ary not",
          "explain": "pop a value (False); logical not; push result (True)",
          "explain2": { "text": "pop a value (#+); logical not; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "960",
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "959"
        },

        {
          "code": "JumpCond False 962",
          "explain": "pop value (True), compare to False, and jump to 962 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 962 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "961",
          "pop": "1",
          "push": [ ],
          "pc": "960"
        },

        {
          "code": "Jump 965",
          "explain": "set program counter to 965",
          "explain2": { "text": "set program counter to 965", "args": [] },
          "npc": "965",
          "push": [ ],
          "pc": "961"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "966",
          "readonly": "0",
          "push": [ ],
          "pc": "965"
        },

        {
          "code": "LoadVar binsema",
          "explain": "push value (?thegame[\"lock\"]) of variable \"binsema\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "binsema" } ] },
          "npc": "967",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "966"
        },

        {
          "code": "DelVar binsema",
          "explain": "delete method variable binsema",
          "explain2": { "text": "delete method variable binsema", "args": [] },
          "npc": "968",
          "local": { },
          "push": [ ],
          "pc": "967"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "969",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "968"
        },

        {
          "code": "Store",
          "explain": "pop value (True) and address (?thegame[\"lock\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "True" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
          "npc": "970",
          "pop": "2",
          "push": [ ],
          "pc": "969"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "971",
          "atomic": "0",
          "push": [ ],
          "pc": "970"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "1418",
          "fp": "4",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1418","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "971"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "1419",
          "pop": "1",
          "push": [ ],
          "pc": "1418"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1420",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1419"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1421",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1420"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1422",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1421"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1423",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1422"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1424",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1423"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1425",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1424"
        }

      ],
      "ctxbag": {
          "1208001ba": "1",
          "1340003ca": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1340003ca",
          "fp": "1",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "1208001ba",
          "fp": "4",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1425",
          "sp": "6",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1425","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
          "mode": "runnable"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "37",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "1208001ba",
        "fp": "4",
        "name": "player(4)",
        "entry": "1597",
        "pc": "1425",
        "sp": "6",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
        "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1425","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"waiting\"]) and push value ([])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [] } ] },
          "npc": "1426",
          "fp": "4",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1426","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1425"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1427",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1426"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (4) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "id" } ] },
          "npc": "1428",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "1427"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (4, []); insert first value into the second; push result ([4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1429",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1428"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values ([4], []); concatenate the lists; push result ([4])",
          "explain2": { "text": "pop 2 values (#+, #+); concatenate the lists; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1430",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1429"
        }

      ],
      "ctxbag": {
          "1208002fa": "1",
          "1340003ca": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1340003ca",
          "fp": "1",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "1208002fa",
          "fp": "4",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1430",
          "sp": "6",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1430","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Store", "var": "thegame[\"waiting\"]", "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "121",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "1208002fa",
        "fp": "4",
        "name": "player(4)",
        "entry": "1597",
        "pc": "1430",
        "sp": "6",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] }],
        "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1430","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Store", "var": "thegame[\"waiting\"]", "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value ([4]) and address (?thegame[\"waiting\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
          "npc": "1431",
          "fp": "4",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1431","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "1430"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1432",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1431"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1433",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1432"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1434",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1433"
        }

      ],
      "ctxbag": {
          "1128000ca": "1",
          "1340003ca": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1340003ca",
          "fp": "1",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "1128000ca",
          "fp": "4",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1434",
          "sp": "5",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1434","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "457",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "1128000ca",
        "fp": "4",
        "name": "player(4)",
        "entry": "1597",
        "pc": "1434",
        "sp": "5",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1434","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1435",
          "fp": "4",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1435","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1434"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1436",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1435"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1437",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1436"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (0, 0); check if both values are the same; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "1438",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1437"
        },

        {
          "code": "JumpCond False 1447",
          "explain": "pop value (True), compare to False, and jump to 1447 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1447 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1439",
          "pop": "1",
          "push": [ ],
          "pc": "1438"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1440",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1439"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1441",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1440"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team2\", ?thegame); push result (?thegame[\"team2\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "npc": "1442",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ],
          "pc": "1441"
        }

      ],
      "ctxbag": {
          "13000018a": "1",
          "1340003ca": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1340003ca",
          "fp": "1",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "13000018a",
          "fp": "4",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1442",
          "sp": "5",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1442","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team2\"]" },
          "mode": "runnable"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "960",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "13000018a",
        "fp": "4",
        "name": "player(4)",
        "entry": "1597",
        "pc": "1442",
        "sp": "5",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
        "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1442","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team2\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team2\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1443",
          "fp": "4",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1443","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1442"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1444",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1443"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1445",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1444"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (0, 0); check if both values are the same; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "1446",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1445"
        },

        {
          "code": "Jump 1448",
          "explain": "set program counter to 1448",
          "explain2": { "text": "set program counter to 1448", "args": [] },
          "npc": "1448",
          "push": [ ],
          "pc": "1446"
        },

        {
          "code": "JumpCond False 1454",
          "explain": "pop value (True), compare to False, and jump to 1454 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1454 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1449",
          "pop": "1",
          "push": [ ],
          "pc": "1448"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1450",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1449"
        },

        {
          "code": "Push \"active_game\"",
          "explain": "push constant \"active_game\"",
          "explain2": { "text": "push constant \"active_game\"", "args": [] },
          "npc": "1451",
          "push": [ { "type": "atom", "value": "active_game" } ],
          "pc": "1450"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"active_game\", ?thegame); push result (?thegame[\"active_game\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "active_game" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ] },
          "npc": "1452",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ],
          "pc": "1451"
        },

        {
          "code": "Apply PC(1067)",
          "explain": "pop an argument (?thegame[\"active_game\"]) and call method (1067: \"notify\")",
          "explain2": { "text": "pop an argument (#+) and call method (1067: #+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "atom", "value": "notify" } ] },
          "npc": "1067",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1453","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1067","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 6}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "23234" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ],
          "pc": "1452"
        },

        {
          "code": "Frame notify(c)",
          "explain": "pop argument (?thegame[\"active_game\"]), assign to c, and run method \"notify\"",
          "explain2": { "text": "pop argument (#+), assign to c, and run method #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "atom", "value": "notify" } ] },
          "npc": "1068",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] } ],
          "pc": "1067"
        }

      ],
      "ctxbag": {
          "13200024a": "1",
          "1340003ca": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1340003ca",
          "fp": "1",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "13200024a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1068",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "23234" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1453","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1068","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "1243",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "13200024a",
        "fp": "7",
        "name": "player(4)",
        "entry": "1597",
        "pc": "1068",
        "sp": "7",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "23234" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
        "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1453","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1068","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "1069",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1453","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1069","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "1068"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"active_game\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1070",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ],
          "pc": "1069"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"active_game\"]) and push value ({:})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "dict", "value": [] } ] },
          "npc": "1071",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1070"
        },

        {
          "code": "Push PC(541)",
          "explain": "push program counter constant 541 ()",
          "explain2": { "text": "push program counter constant 541 ()", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "1072",
          "push": [ { "type": "pc", "value": "541" } ],
          "pc": "1071"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1073",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1072"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([], PC(541)); push result (?PC(541)[[]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "pc", "value": "541" }, { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ] },
          "npc": "1074",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ],
          "pc": "1073"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([]) and call method (541: \"empty\")",
          "explain2": { "text": "pop an argument (#+) and call method (541: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "empty" } ] },
          "npc": "541",
          "fp": "11",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1453","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1075","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6},{"pc": "541","xpc": "541","method_name": { "type": "atom", "value": "empty" },
"method_arg": { "type": "list", "value": [] },
"method": "empty()","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 10}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "17186" }, { "type": "list", "value": [] } ],
          "pc": "1074"
        },

        {
          "code": "Frame empty()",
          "explain": "pop argument () and run method \"empty\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "542",
          "local": { },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "c" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } } ] } ],
          "pc": "541"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "543",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "542"
        },

        {
          "code": "StoreVar bg",
          "explain": "pop value ({:}) and store locally in variable \\\"bg\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"bg\"", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "544",
          "local": { "bg": { "type": "dict", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "543"
        },

        {
          "code": "ReturnOp(bg)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "1075",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1453","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1075","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6}
          ],
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },
          "pop": "3",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "544"
        },

        {
          "code": "2-ary !=",
          "explain": "pop 2 values ({:}, {:}); check if the values are unequal; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the values are unequal; push result (#+)", "args": [ { "type": "dict", "value": [] }, { "type": "dict", "value": [] }, { "type": "bool", "value": "False" } ] },
          "npc": "1076",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1075"
        },

        {
          "code": "JumpCond False 1093",
          "explain": "pop value (False), compare to False, and jump to 1093 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1093 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "1093",
          "pop": "1",
          "push": [ ],
          "pc": "1076"
        },

        {
          "code": "DelVar c",
          "explain": "delete method variable c",
          "explain2": { "text": "delete method variable c", "args": [] },
          "npc": "1094",
          "local": { },
          "push": [ ],
          "pc": "1093"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "1095",
          "atomic": "0",
          "push": [ ],
          "pc": "1094"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "1453",
          "fp": "4",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1453","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "1095"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "1454",
          "pop": "1",
          "push": [ ],
          "pc": "1453"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1455",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1454"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1456",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1455"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1457",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1456"
        }

      ],
      "ctxbag": {
          "12280046a": "1",
          "1340003ca": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1340003ca",
          "fp": "1",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "12280046a",
          "fp": "4",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1457",
          "sp": "5",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1457","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "1862",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "12280046a",
        "fp": "4",
        "name": "player(4)",
        "entry": "1597",
        "pc": "1457",
        "sp": "5",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1457","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1458",
          "fp": "4",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1458","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1457"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1459",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1458"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1460",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1459"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (0, 0); check if both values are the same; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "1461",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1460"
        },

        {
          "code": "JumpCond True 1492",
          "explain": "pop value (True), compare to True, and jump to 1492 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1492 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] },
          "npc": "1492",
          "pop": "1",
          "push": [ ],
          "pc": "1461"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "1493",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1492"
        },

        {
          "code": "JumpCond False 1506",
          "explain": "pop value (True), compare to False, and jump to 1506 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1506 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1494",
          "pop": "1",
          "push": [ ],
          "pc": "1493"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1495",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1494"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1496",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1495"
        },

        {
          "code": "Push \"players\"",
          "explain": "push constant \"players\"",
          "explain2": { "text": "push constant \"players\"", "args": [] },
          "npc": "1497",
          "push": [ { "type": "atom", "value": "players" } ],
          "pc": "1496"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"players\", ?thegame); push result (?thegame[\"players\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "players" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] },
          "npc": "1498",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1497"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?thegame[\"players\"], []); insert first value into the second; push result ([?thegame[\"players\"]])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] } ] },
          "npc": "1499",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] } ],
          "pc": "1498"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1500",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1499"
        },

        {
          "code": "Push \"lock\"",
          "explain": "push constant \"lock\"",
          "explain2": { "text": "push constant \"lock\"", "args": [] },
          "npc": "1501",
          "push": [ { "type": "atom", "value": "lock" } ],
          "pc": "1500"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"lock\", ?thegame); push result (?thegame[\"lock\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "lock" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "npc": "1502",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1501"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?thegame[\"lock\"], [?thegame[\"players\"]]); insert first value into the second; push result ([?thegame[\"players\"], ?thegame[\"lock\"]])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] } ] },
          "npc": "1503",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] } ],
          "pc": "1502"
        },

        {
          "code": "Apply PC(998)",
          "explain": "pop an argument ([?thegame[\"players\"], ?thegame[\"lock\"]]) and call method (998: \"wait\")",
          "explain2": { "text": "pop an argument (#+) and call method (998: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] }, { "type": "atom", "value": "wait" } ] },
          "npc": "998",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "998","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 6}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] } ],
          "pc": "1503"
        },

        {
          "code": "Frame wait(c, lk)",
          "explain": "pop argument ([?thegame[\"players\"], ?thegame[\"lock\"]]), assign to (c, lk), and run method \"wait\"",
          "explain2": { "text": "pop argument (#+), assign to (c, lk), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] }, { "type": "atom", "value": "wait" } ] },
          "npc": "999",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] } ],
          "pc": "998"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1000",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "999"
        },

        {
          "code": "StoreVar cnt",
          "explain": "pop value (0) and store locally in variable \\\"cnt\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"cnt\"", "args": [ { "type": "int", "value": "0" } ] },
          "npc": "1001",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1000"
        },

        {
          "code": "DelVar cnt",
          "explain": "delete method variable cnt",
          "explain2": { "text": "delete method variable cnt", "args": [] },
          "npc": "1002",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "push": [ ],
          "pc": "1001"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1003",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1002"
        },

        {
          "code": "Save",
          "explain": "pop a value and save context",
          "explain2": { "text": "pop a value and save context", "args": [] },
          "npc": "1004",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1003"
        },

        {
          "code": "Continue",
          "explain": "a no-op, must follow a Stop or Save operation",
          "explain2": { "text": "a no-op, must follow a Stop or Save operation", "args": [] },
          "npc": "1005",
          "push": [ ],
          "pc": "1004"
        },

        {
          "code": "StoreVar ((), ctx)",
          "explain": "pop value ([[], CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }])]) and store locally in variable \\\"((), ctx)\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"((), ctx)\"", "args": [ { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] },
          "npc": "1006",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1005"
        }

      ],
      "ctxbag": {
          "13200053a": "1",
          "1340003ca": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1340003ca",
          "fp": "1",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "13200053a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1006",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1006","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "2085",
      "tid": "5",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(4)",
      "context": {
        "tid": "5",
        "hvalue": "13200053a",
        "fp": "7",
        "name": "player(4)",
        "entry": "1597",
        "pc": "1006",
        "sp": "7",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
        "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1006","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "1007",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1007","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "1006"
        },

        {
          "code": "Push PC(605)",
          "explain": "push constant PC(605)",
          "explain2": { "text": "push constant PC(605)", "args": [] },
          "npc": "1008",
          "push": [ { "type": "pc", "value": "605" } ],
          "pc": "1007"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1009",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1008"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"players\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1010",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1009"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"players\"]) and push value ({:})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "dict", "value": [] } ] },
          "npc": "1011",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1010"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({:}, []); insert first value into the second; push result ([{:}])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "dict", "value": [] } ] } ] },
          "npc": "1012",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [] } ] } ],
          "pc": "1011"
        },

        {
          "code": "LoadVar ctx",
          "explain": "push value (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }])) of variable \"ctx\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "atom", "value": "ctx" } ] },
          "npc": "1013",
          "push": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ],
          "pc": "1012"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]), [{:}]); insert first value into the second; push result ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }])])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "list", "value": [{ "type": "dict", "value": [] } ] }, { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] },
          "npc": "1014",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1013"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }])], PC(605)); push result (?PC(605)[[{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }])]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "pc", "value": "605" }, { "type": "address", "func": { "type": "pc", "value": "605" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ] },
          "npc": "1015",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "605" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ],
          "pc": "1014"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }])]) and call method (605: \"multiplicity\")",
          "explain2": { "text": "pop an argument (#+) and call method (605: #+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "atom", "value": "multiplicity" } ] },
          "npc": "605",
          "fp": "10",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1016","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6},{"pc": "605","xpc": "605","method_name": { "type": "atom", "value": "multiplicity" },
"method_arg": { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] },
"method": "multiplicity({:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]))","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 9}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "16242" }, { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1015"
        },

        {
          "code": "Frame multiplicity(bg, elt)",
          "explain": "start of method multiplicity",
          "explain2": { "text": "start of method multiplicity", "args": [] },
          "npc": "1016",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1016","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "pop": "3",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "605"
        },

        {
          "code": "StoreVar cnt",
          "explain": "pop value (0) and store locally in variable \\\"cnt\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"cnt\"", "args": [ { "type": "int", "value": "0" } ] },
          "npc": "1017",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1016"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"players\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1018",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1017"
        },

        {
          "code": "Push PC(696)",
          "explain": "push constant PC(696)",
          "explain2": { "text": "push constant PC(696)", "args": [] },
          "npc": "1019",
          "push": [ { "type": "pc", "value": "696" } ],
          "pc": "1018"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1020",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1019"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"players\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1021",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1020"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"players\"]) and push value ({:})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "dict", "value": [] } ] },
          "npc": "1022",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1021"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({:}, []); insert first value into the second; push result ([{:}])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "dict", "value": [] } ] } ] },
          "npc": "1023",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [] } ] } ],
          "pc": "1022"
        },

        {
          "code": "LoadVar ctx",
          "explain": "push value (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }])) of variable \"ctx\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "atom", "value": "ctx" } ] },
          "npc": "1024",
          "push": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ],
          "pc": "1023"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]), [{:}]); insert first value into the second; push result ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }])])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "list", "value": [{ "type": "dict", "value": [] } ] }, { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] },
          "npc": "1025",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1024"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }])], PC(696)); push result (?PC(696)[[{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }])]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "pc", "value": "696" }, { "type": "address", "func": { "type": "pc", "value": "696" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ] },
          "npc": "1026",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "696" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ],
          "pc": "1025"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([{:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }])]) and call method (696: \"add\")",
          "explain2": { "text": "pop an argument (#+) and call method (696: #+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "atom", "value": "add" } ] },
          "npc": "696",
          "fp": "11",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1027","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6},{"pc": "696","xpc": "696","method_name": { "type": "atom", "value": "add" },
"method_arg": { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] },
"method": "add({:}, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]))","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 10}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "16418" }, { "type": "list", "value": [{ "type": "dict", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1026"
        },

        {
          "code": "Frame add(bg, elt)",
          "explain": "start of method add",
          "explain2": { "text": "start of method add", "args": [] },
          "npc": "1027",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1027","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "696"
        },

        {
          "code": "Store",
          "explain": "pop value ({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }) and address (?thegame[\"players\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
          "npc": "1028",
          "pop": "2",
          "push": [ ],
          "pc": "1027"
        },

        {
          "code": "LoadVar lk",
          "explain": "push value (?thegame[\"lock\"]) of variable \"lk\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "lk" } ] },
          "npc": "1029",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1028"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "1030",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1029"
        },

        {
          "code": "Store",
          "explain": "pop value (False) and address (?thegame[\"lock\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "False" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
          "npc": "1031",
          "pop": "2",
          "push": [ ],
          "pc": "1030"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "1032",
          "atomic": "0",
          "push": [ ],
          "pc": "1031"
        }

      ],
      "ctxbag": {
          "112800d4a": "1",
          "1340003ca": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1340003ca",
          "fp": "1",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "3027",
      "tid": "2",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(1)",
      "context": {
        "tid": "2",
        "hvalue": "1340003ca",
        "fp": "1",
        "name": "player(1)",
        "entry": "1597",
        "pc": "1597",
        "sp": "1",
        "stack": [{ "type": "int", "value": "1" }],
        "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ },"sp": 0}
        ],
        "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "1" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Frame player(id)",
          "explain": "pop argument (1), assign to id, and run method \"player\"",
          "explain2": { "text": "pop argument (#+), assign to id, and run method #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "player" } ] },
          "npc": "1598",
          "fp": "1",
          "trace": [
{"pc": "1598","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "local": { "id": { "type": "int", "value": "1" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1597"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1599",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1598"
        },

        {
          "code": "Push ?thegame",
          "explain": "push constant ?thegame",
          "explain2": { "text": "push constant ?thegame", "args": [] },
          "npc": "1600",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1599"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?thegame, []); insert first value into the second; push result ([?thegame])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] } ] },
          "npc": "1601",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] } ],
          "pc": "1600"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (1) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "id" } ] },
          "npc": "1602",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "1601"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (1, [?thegame]); insert first value into the second; push result ([?thegame, 1])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] } ] },
          "npc": "1603",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] } ],
          "pc": "1602"
        },

        {
          "code": "Apply PC(1413)",
          "explain": "pop an argument ([?thegame, 1]) and call method (1413: \"game_join\")",
          "explain2": { "text": "pop an argument (#+) and call method (1413: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] }, { "type": "atom", "value": "game_join" } ] },
          "npc": "1413",
          "fp": "4",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1413","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "id": { "type": "int", "value": "1" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] } ],
          "pc": "1603"
        },

        {
          "code": "Frame game_join(g, id)",
          "explain": "pop argument ([?thegame, 1]), assign to (g, id), and run method \"game_join\"",
          "explain2": { "text": "pop argument (#+), assign to (g, id), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] }, { "type": "atom", "value": "game_join" } ] },
          "npc": "1414",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "1413"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1415",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1414"
        },

        {
          "code": "Push \"lock\"",
          "explain": "push constant \"lock\"",
          "explain2": { "text": "push constant \"lock\"", "args": [] },
          "npc": "1416",
          "push": [ { "type": "atom", "value": "lock" } ],
          "pc": "1415"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"lock\", ?thegame); push result (?thegame[\"lock\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "lock" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "npc": "1417",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1416"
        },

        {
          "code": "Apply PC(954)",
          "explain": "pop an argument (?thegame[\"lock\"]) and call method (954: \"acquire\")",
          "explain2": { "text": "pop an argument (#+) and call method (954: #+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "acquire" } ] },
          "npc": "954",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1418","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "954","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 6}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "22674" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1417"
        },

        {
          "code": "Frame acquire(binsema)",
          "explain": "pop argument (?thegame[\"lock\"]), assign to binsema, and run method \"acquire\"",
          "explain2": { "text": "pop argument (#+), assign to binsema, and run method #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "acquire" } ] },
          "npc": "955",
          "local": { "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "954"
        }

      ],
      "ctxbag": {
          "112800d4a": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "13400073a": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "13400073a",
          "fp": "7",
          "name": "player(1)",
          "entry": "1597",
          "pc": "955",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "22674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1418","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "955","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "3295",
      "tid": "2",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(1)",
      "context": {
        "tid": "2",
        "hvalue": "13400073a",
        "fp": "7",
        "name": "player(1)",
        "entry": "1597",
        "pc": "955",
        "sp": "7",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "22674" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
        "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1418","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "955","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "956",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1418","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "956","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "955"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "957",
          "readonly": "1",
          "push": [ ],
          "pc": "956"
        },

        {
          "code": "LoadVar binsema",
          "explain": "push value (?thegame[\"lock\"]) of variable \"binsema\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "binsema" } ] },
          "npc": "958",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "957"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"lock\"]) and push value (False)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "bool", "value": "False" } ] },
          "npc": "959",
          "pop": "1",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "958"
        },

        {
          "code": "1-ary not",
          "explain": "pop a value (False); logical not; push result (True)",
          "explain2": { "text": "pop a value (#+); logical not; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "960",
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "959"
        },

        {
          "code": "JumpCond False 962",
          "explain": "pop value (True), compare to False, and jump to 962 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 962 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "961",
          "pop": "1",
          "push": [ ],
          "pc": "960"
        },

        {
          "code": "Jump 965",
          "explain": "set program counter to 965",
          "explain2": { "text": "set program counter to 965", "args": [] },
          "npc": "965",
          "push": [ ],
          "pc": "961"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "966",
          "readonly": "0",
          "push": [ ],
          "pc": "965"
        },

        {
          "code": "LoadVar binsema",
          "explain": "push value (?thegame[\"lock\"]) of variable \"binsema\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "binsema" } ] },
          "npc": "967",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "966"
        },

        {
          "code": "DelVar binsema",
          "explain": "delete method variable binsema",
          "explain2": { "text": "delete method variable binsema", "args": [] },
          "npc": "968",
          "local": { },
          "push": [ ],
          "pc": "967"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "969",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "968"
        },

        {
          "code": "Store",
          "explain": "pop value (True) and address (?thegame[\"lock\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "True" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
          "npc": "970",
          "pop": "2",
          "push": [ ],
          "pc": "969"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "971",
          "atomic": "0",
          "push": [ ],
          "pc": "970"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "1418",
          "fp": "4",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1418","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "971"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "1419",
          "pop": "1",
          "push": [ ],
          "pc": "1418"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1420",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1419"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1421",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1420"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1422",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1421"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1423",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1422"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1424",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1423"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1425",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1424"
        }

      ],
      "ctxbag": {
          "112800d4a": "1",
          "1208000ca": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1208000ca",
          "fp": "4",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1425",
          "sp": "6",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1425","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "4285",
      "tid": "2",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(1)",
      "context": {
        "tid": "2",
        "hvalue": "1208000ca",
        "fp": "4",
        "name": "player(1)",
        "entry": "1597",
        "pc": "1425",
        "sp": "6",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
        "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1425","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"waiting\"]) and push value ([4])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "1426",
          "fp": "4",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1426","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "1425"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1427",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1426"
        },

        {
          "code": "LoadVar id",
          "explain": "push value (1) of variable \"id\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "id" } ] },
          "npc": "1428",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "1427"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (1, []); insert first value into the second; push result ([1])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "1429",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "1428"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values ([1], [4]); concatenate the lists; push result ([4, 1])",
          "explain2": { "text": "pop 2 values (#+, #+); concatenate the lists; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "1430",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } ],
          "pc": "1429"
        }

      ],
      "ctxbag": {
          "112800d4a": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "134000e9a": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "134000e9a",
          "fp": "4",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1430",
          "sp": "6",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1430","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
          ],
          "next": { "type": "Store", "var": "thegame[\"waiting\"]", "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "5227",
      "tid": "2",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" } ] } } ] } },
      "name": "player(1)",
      "context": {
        "tid": "2",
        "hvalue": "134000e9a",
        "fp": "4",
        "name": "player(1)",
        "entry": "1597",
        "pc": "1430",
        "sp": "6",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] }],
        "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1430","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
        ],
        "next": { "type": "Store", "var": "thegame[\"waiting\"]", "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value ([4, 1]) and address (?thegame[\"waiting\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
          "npc": "1431",
          "fp": "4",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1431","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "1430"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1432",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1431"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1433",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1432"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1434",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1433"
        }

      ],
      "ctxbag": {
          "112800d4a": "1",
          "12480009a": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "12480009a",
          "fp": "4",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1434",
          "sp": "5",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1434","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "6061",
      "tid": "2",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
      "name": "player(1)",
      "context": {
        "tid": "2",
        "hvalue": "12480009a",
        "fp": "4",
        "name": "player(1)",
        "entry": "1597",
        "pc": "1434",
        "sp": "5",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1434","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1435",
          "fp": "4",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1435","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1434"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1436",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1435"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1437",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1436"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (0, 0); check if both values are the same; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "1438",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1437"
        },

        {
          "code": "JumpCond False 1447",
          "explain": "pop value (True), compare to False, and jump to 1447 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1447 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1439",
          "pop": "1",
          "push": [ ],
          "pc": "1438"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1440",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1439"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1441",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1440"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team2\", ?thegame); push result (?thegame[\"team2\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "npc": "1442",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ],
          "pc": "1441"
        }

      ],
      "ctxbag": {
          "112800d4a": "1",
          "1320000ea": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1320000ea",
          "fp": "4",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1442",
          "sp": "5",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1442","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team2\"]" },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "7690",
      "tid": "2",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
      "name": "player(1)",
      "context": {
        "tid": "2",
        "hvalue": "1320000ea",
        "fp": "4",
        "name": "player(1)",
        "entry": "1597",
        "pc": "1442",
        "sp": "5",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
        "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1442","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team2\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team2\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1443",
          "fp": "4",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1443","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1442"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1444",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1443"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1445",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1444"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (0, 0); check if both values are the same; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "1446",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1445"
        },

        {
          "code": "Jump 1448",
          "explain": "set program counter to 1448",
          "explain2": { "text": "set program counter to 1448", "args": [] },
          "npc": "1448",
          "push": [ ],
          "pc": "1446"
        },

        {
          "code": "JumpCond False 1454",
          "explain": "pop value (True), compare to False, and jump to 1454 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1454 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1449",
          "pop": "1",
          "push": [ ],
          "pc": "1448"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1450",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1449"
        },

        {
          "code": "Push \"active_game\"",
          "explain": "push constant \"active_game\"",
          "explain2": { "text": "push constant \"active_game\"", "args": [] },
          "npc": "1451",
          "push": [ { "type": "atom", "value": "active_game" } ],
          "pc": "1450"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"active_game\", ?thegame); push result (?thegame[\"active_game\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "active_game" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ] },
          "npc": "1452",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ],
          "pc": "1451"
        },

        {
          "code": "Apply PC(1067)",
          "explain": "pop an argument (?thegame[\"active_game\"]) and call method (1067: \"notify\")",
          "explain2": { "text": "pop an argument (#+) and call method (1067: #+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "atom", "value": "notify" } ] },
          "npc": "1067",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1453","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1067","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 6}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "23234" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ],
          "pc": "1452"
        },

        {
          "code": "Frame notify(c)",
          "explain": "pop argument (?thegame[\"active_game\"]), assign to c, and run method \"notify\"",
          "explain2": { "text": "pop argument (#+), assign to c, and run method #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "atom", "value": "notify" } ] },
          "npc": "1068",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "1067"
        }

      ],
      "ctxbag": {
          "112800d4a": "1",
          "1320002aa": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1320002aa",
          "fp": "7",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1068",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "23234" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1453","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1068","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "8572",
      "tid": "2",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
      "name": "player(1)",
      "context": {
        "tid": "2",
        "hvalue": "1320002aa",
        "fp": "7",
        "name": "player(1)",
        "entry": "1597",
        "pc": "1068",
        "sp": "7",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "23234" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
        "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1453","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1068","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "1069",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1453","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1069","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "1068"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"active_game\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1070",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } ],
          "pc": "1069"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"active_game\"]) and push value ({:})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] }, { "type": "dict", "value": [] } ] },
          "npc": "1071",
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1070"
        },

        {
          "code": "Push PC(541)",
          "explain": "push program counter constant 541 ()",
          "explain2": { "text": "push program counter constant 541 ()", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "1072",
          "push": [ { "type": "pc", "value": "541" } ],
          "pc": "1071"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1073",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1072"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([], PC(541)); push result (?PC(541)[[]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "pc", "value": "541" }, { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ] },
          "npc": "1074",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "541" }, "args": [{ "type": "list", "value": [] } ] } ],
          "pc": "1073"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([]) and call method (541: \"empty\")",
          "explain2": { "text": "pop an argument (#+) and call method (541: #+)", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "empty" } ] },
          "npc": "541",
          "fp": "11",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1453","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1075","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6},{"pc": "541","xpc": "541","method_name": { "type": "atom", "value": "empty" },
"method_arg": { "type": "list", "value": [] },
"method": "empty()","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 10}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "17186" }, { "type": "list", "value": [] } ],
          "pc": "1074"
        },

        {
          "code": "Frame empty()",
          "explain": "pop argument () and run method \"empty\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "empty" } ] },
          "npc": "542",
          "local": { },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "c" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } } ] } ],
          "pc": "541"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "543",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "542"
        },

        {
          "code": "StoreVar bg",
          "explain": "pop value ({:}) and store locally in variable \\\"bg\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"bg\"", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "544",
          "local": { "bg": { "type": "dict", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "543"
        },

        {
          "code": "ReturnOp(bg)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [] } ] },
          "npc": "1075",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1453","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1075","xpc": "1067","method_name": { "type": "atom", "value": "notify" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] },
"method": "notify(?thegame[\"active_game\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },"sp": 6}
          ],
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "active_game" } ] } },
          "pop": "3",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "544"
        },

        {
          "code": "2-ary !=",
          "explain": "pop 2 values ({:}, {:}); check if the values are unequal; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the values are unequal; push result (#+)", "args": [ { "type": "dict", "value": [] }, { "type": "dict", "value": [] }, { "type": "bool", "value": "False" } ] },
          "npc": "1076",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1075"
        },

        {
          "code": "JumpCond False 1093",
          "explain": "pop value (False), compare to False, and jump to 1093 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1093 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "1093",
          "pop": "1",
          "push": [ ],
          "pc": "1076"
        },

        {
          "code": "DelVar c",
          "explain": "delete method variable c",
          "explain2": { "text": "delete method variable c", "args": [] },
          "npc": "1094",
          "local": { },
          "push": [ ],
          "pc": "1093"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "1095",
          "atomic": "0",
          "push": [ ],
          "pc": "1094"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "1453",
          "fp": "4",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1453","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "1095"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "1454",
          "pop": "1",
          "push": [ ],
          "pc": "1453"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1455",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1454"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1456",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1455"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1457",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1456"
        }

      ],
      "ctxbag": {
          "112800d4a": "1",
          "13200030a": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "13200030a",
          "fp": "4",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1457",
          "sp": "5",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1457","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "10143",
      "tid": "2",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
      "name": "player(1)",
      "context": {
        "tid": "2",
        "hvalue": "13200030a",
        "fp": "4",
        "name": "player(1)",
        "entry": "1597",
        "pc": "1457",
        "sp": "5",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1457","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1458",
          "fp": "4",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1458","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1457"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1459",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1458"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1460",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1459"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (0, 0); check if both values are the same; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "1461",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1460"
        },

        {
          "code": "JumpCond True 1492",
          "explain": "pop value (True), compare to True, and jump to 1492 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1492 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] },
          "npc": "1492",
          "pop": "1",
          "push": [ ],
          "pc": "1461"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "1493",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1492"
        },

        {
          "code": "JumpCond False 1506",
          "explain": "pop value (True), compare to False, and jump to 1506 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1506 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1494",
          "pop": "1",
          "push": [ ],
          "pc": "1493"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1495",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1494"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1496",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1495"
        },

        {
          "code": "Push \"players\"",
          "explain": "push constant \"players\"",
          "explain2": { "text": "push constant \"players\"", "args": [] },
          "npc": "1497",
          "push": [ { "type": "atom", "value": "players" } ],
          "pc": "1496"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"players\", ?thegame); push result (?thegame[\"players\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "players" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] },
          "npc": "1498",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1497"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?thegame[\"players\"], []); insert first value into the second; push result ([?thegame[\"players\"]])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] } ] },
          "npc": "1499",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] } ],
          "pc": "1498"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1500",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1499"
        },

        {
          "code": "Push \"lock\"",
          "explain": "push constant \"lock\"",
          "explain2": { "text": "push constant \"lock\"", "args": [] },
          "npc": "1501",
          "push": [ { "type": "atom", "value": "lock" } ],
          "pc": "1500"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"lock\", ?thegame); push result (?thegame[\"lock\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "lock" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "npc": "1502",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1501"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?thegame[\"lock\"], [?thegame[\"players\"]]); insert first value into the second; push result ([?thegame[\"players\"], ?thegame[\"lock\"]])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] } ] },
          "npc": "1503",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] } ],
          "pc": "1502"
        },

        {
          "code": "Apply PC(998)",
          "explain": "pop an argument ([?thegame[\"players\"], ?thegame[\"lock\"]]) and call method (998: \"wait\")",
          "explain2": { "text": "pop an argument (#+) and call method (998: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] }, { "type": "atom", "value": "wait" } ] },
          "npc": "998",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "998","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 6}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] } ],
          "pc": "1503"
        },

        {
          "code": "Frame wait(c, lk)",
          "explain": "pop argument ([?thegame[\"players\"], ?thegame[\"lock\"]]), assign to (c, lk), and run method \"wait\"",
          "explain2": { "text": "pop argument (#+), assign to (c, lk), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] }, { "type": "atom", "value": "wait" } ] },
          "npc": "999",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "998"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1000",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "999"
        },

        {
          "code": "StoreVar cnt",
          "explain": "pop value (0) and store locally in variable \\\"cnt\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"cnt\"", "args": [ { "type": "int", "value": "0" } ] },
          "npc": "1001",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1000"
        },

        {
          "code": "DelVar cnt",
          "explain": "delete method variable cnt",
          "explain2": { "text": "delete method variable cnt", "args": [] },
          "npc": "1002",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "push": [ ],
          "pc": "1001"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1003",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1002"
        },

        {
          "code": "Save",
          "explain": "pop a value and save context",
          "explain2": { "text": "pop a value and save context", "args": [] },
          "npc": "1004",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1003"
        },

        {
          "code": "Continue",
          "explain": "a no-op, must follow a Stop or Save operation",
          "explain2": { "text": "a no-op, must follow a Stop or Save operation", "args": [] },
          "npc": "1005",
          "push": [ ],
          "pc": "1004"
        },

        {
          "code": "StoreVar ((), ctx)",
          "explain": "pop value ([[], CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 1 },[],24050,{ \"g\": ?thegame, \"id\": 1 }])]) and store locally in variable \\\"((), ctx)\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"((), ctx)\"", "args": [ { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] },
          "npc": "1006",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1005"
        }

      ],
      "ctxbag": {
          "112800d4a": "1",
          "12480024a": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "12480024a",
          "fp": "7",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1006",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1006","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "12192",
      "tid": "2",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
      "name": "player(1)",
      "context": {
        "tid": "2",
        "hvalue": "12480024a",
        "fp": "7",
        "name": "player(1)",
        "entry": "1597",
        "pc": "1006",
        "sp": "7",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
        "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1006","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "1007",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1007","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "1006"
        },

        {
          "code": "Push PC(605)",
          "explain": "push constant PC(605)",
          "explain2": { "text": "push constant PC(605)", "args": [] },
          "npc": "1008",
          "push": [ { "type": "pc", "value": "605" } ],
          "pc": "1007"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1009",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1008"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"players\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1010",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1009"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"players\"]) and push value ({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ] },
          "npc": "1011",
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "1010"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, []); insert first value into the second; push result ([{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ] } ] },
          "npc": "1012",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ] } ],
          "pc": "1011"
        },

        {
          "code": "LoadVar ctx",
          "explain": "push value (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 1 },[],24050,{ \"g\": ?thegame, \"id\": 1 }])) of variable \"ctx\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "atom", "value": "ctx" } ] },
          "npc": "1013",
          "push": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ],
          "pc": "1012"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 1 },[],24050,{ \"g\": ?thegame, \"id\": 1 }]), [{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }]); insert first value into the second; push result ([{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 1 },[],24050,{ \"g\": ?thegame, \"id\": 1 }])])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ] }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] },
          "npc": "1014",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1013"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 1 },[],24050,{ \"g\": ?thegame, \"id\": 1 }])], PC(605)); push result (?PC(605)[[{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 1 },[],24050,{ \"g\": ?thegame, \"id\": 1 }])]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "pc", "value": "605" }, { "type": "address", "func": { "type": "pc", "value": "605" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ] },
          "npc": "1015",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "605" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ],
          "pc": "1014"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 1 },[],24050,{ \"g\": ?thegame, \"id\": 1 }])]) and call method (605: \"multiplicity\")",
          "explain2": { "text": "pop an argument (#+) and call method (605: #+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "atom", "value": "multiplicity" } ] },
          "npc": "605",
          "fp": "10",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1016","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6},{"pc": "605","xpc": "605","method_name": { "type": "atom", "value": "multiplicity" },
"method_arg": { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] },
"method": "multiplicity({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 1 },[],24050,{ \"g\": ?thegame, \"id\": 1 }]))","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 9}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "16242" }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1015"
        },

        {
          "code": "Frame multiplicity(bg, elt)",
          "explain": "start of method multiplicity",
          "explain2": { "text": "start of method multiplicity", "args": [] },
          "npc": "1016",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1016","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "pop": "3",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "605"
        },

        {
          "code": "StoreVar cnt",
          "explain": "pop value (0) and store locally in variable \\\"cnt\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"cnt\"", "args": [ { "type": "int", "value": "0" } ] },
          "npc": "1017",
          "local": { "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "1016"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"players\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1018",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1017"
        },

        {
          "code": "Push PC(696)",
          "explain": "push constant PC(696)",
          "explain2": { "text": "push constant PC(696)", "args": [] },
          "npc": "1019",
          "push": [ { "type": "pc", "value": "696" } ],
          "pc": "1018"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1020",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1019"
        },

        {
          "code": "LoadVar c",
          "explain": "push value (?thegame[\"players\"]) of variable \"c\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "atom", "value": "c" } ] },
          "npc": "1021",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ],
          "pc": "1020"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"players\"]) and push value ({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ] },
          "npc": "1022",
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "1021"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, []); insert first value into the second; push result ([{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ] } ] },
          "npc": "1023",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ] } ],
          "pc": "1022"
        },

        {
          "code": "LoadVar ctx",
          "explain": "push value (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 1 },[],24050,{ \"g\": ?thegame, \"id\": 1 }])) of variable \"ctx\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "atom", "value": "ctx" } ] },
          "npc": "1024",
          "push": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ],
          "pc": "1023"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 1 },[],24050,{ \"g\": ?thegame, \"id\": 1 }]), [{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }]); insert first value into the second; push result ([{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 1 },[],24050,{ \"g\": ?thegame, \"id\": 1 }])])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ] }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] },
          "npc": "1025",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1024"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 1 },[],24050,{ \"g\": ?thegame, \"id\": 1 }])], PC(696)); push result (?PC(696)[[{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 1 },[],24050,{ \"g\": ?thegame, \"id\": 1 }])]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "pc", "value": "696" }, { "type": "address", "func": { "type": "pc", "value": "696" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ] },
          "npc": "1026",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "696" }, "args": [{ "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ] } ],
          "pc": "1025"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([{ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 1 },[],24050,{ \"g\": ?thegame, \"id\": 1 }])]) and call method (696: \"add\")",
          "explain2": { "text": "pop an argument (#+) and call method (696: #+)", "args": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] }, { "type": "atom", "value": "add" } ] },
          "npc": "696",
          "fp": "11",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1027","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6},{"pc": "696","xpc": "696","method_name": { "type": "atom", "value": "add" },
"method_arg": { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] },
"method": "add({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 1 },[],24050,{ \"g\": ?thegame, \"id\": 1 }]))","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 10}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "16418" }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } } ] } ],
          "pc": "1026"
        },

        {
          "code": "Frame add(bg, elt)",
          "explain": "start of method add",
          "explain2": { "text": "start of method add", "args": [] },
          "npc": "1027",
          "fp": "7",
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1027","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "696"
        },

        {
          "code": "Store",
          "explain": "pop value ({ CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 1 },[],24050,{ \"g\": ?thegame, \"id\": 1 }]): 1, CONTEXT(pc=1004,vars={ \"c\": ?thegame[\"players\"], \"lk\": ?thegame[\"lock\"] },readonly=0,atomic=0,aflag=0,il=0,stopped=1,terminated=0,eternal=0,sp=7,STACK[{:},[],25650,{ \"id\": 4 },[],24050,{ \"g\": ?thegame, \"id\": 4 }]): 1 }) and address (?thegame[\"players\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
          "npc": "1028",
          "pop": "2",
          "push": [ ],
          "pc": "1027"
        },

        {
          "code": "LoadVar lk",
          "explain": "push value (?thegame[\"lock\"]) of variable \"lk\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "lk" } ] },
          "npc": "1029",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1028"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "1030",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1029"
        },

        {
          "code": "Store",
          "explain": "pop value (False) and address (?thegame[\"lock\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "False" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
          "npc": "1031",
          "pop": "2",
          "push": [ ],
          "pc": "1030"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "1032",
          "atomic": "0",
          "push": [ ],
          "pc": "1031"
        }

      ],
      "ctxbag": {
          "1128008aa": "1",
          "112800d4a": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013400031a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013400031a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1233",
          "sp": "1",
          "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
          "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1128008aa",
          "fp": "7",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "14304",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10000013400031a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1233",
        "pc": "1233",
        "sp": "1",
        "stack": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }],
        "trace": [
{"pc": "1233","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ },"sp": 0}
        ],
        "next": { "type": "Frame", "name": "game_umpire", "args": "g", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Frame game_umpire(g)",
          "explain": "pop argument (?thegame), assign to g, and run method \"game_umpire\"",
          "explain2": { "text": "pop argument (#+), assign to g, and run method #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "game_umpire" } ] },
          "npc": "1234",
          "fp": "1",
          "trace": [
{"pc": "1234","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1233"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1235",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1234"
        },

        {
          "code": "Push \"lock\"",
          "explain": "push constant \"lock\"",
          "explain2": { "text": "push constant \"lock\"", "args": [] },
          "npc": "1236",
          "push": [ { "type": "atom", "value": "lock" } ],
          "pc": "1235"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"lock\", ?thegame); push result (?thegame[\"lock\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "lock" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "npc": "1237",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1236"
        },

        {
          "code": "Apply PC(954)",
          "explain": "pop an argument (?thegame[\"lock\"]) and call method (954: \"acquire\")",
          "explain2": { "text": "pop an argument (#+) and call method (954: #+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "acquire" } ] },
          "npc": "954",
          "fp": "4",
          "trace": [
{"pc": "1238","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "954","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "19794" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "1237"
        },

        {
          "code": "Frame acquire(binsema)",
          "explain": "pop argument (?thegame[\"lock\"]), assign to binsema, and run method \"acquire\"",
          "explain2": { "text": "pop argument (#+), assign to binsema, and run method #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "acquire" } ] },
          "npc": "955",
          "local": { "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] } ],
          "pc": "954"
        }

      ],
      "ctxbag": {
          "1128008aa": "1",
          "112800d4a": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "100000134000b0a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100000134000b0a",
          "fp": "4",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "955",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "19794" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
          "trace": [
{"pc": "1238","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "955","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1128008aa",
          "fp": "7",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "14916",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "False" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "100000134000b0a",
        "fp": "4",
        "name": "game_umpire(?thegame)",
        "entry": "1233",
        "pc": "955",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "19794" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } } ] }],
        "trace": [
{"pc": "1238","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "955","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "956",
          "fp": "4",
          "trace": [
{"pc": "1238","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0},{"pc": "956","xpc": "954","method_name": { "type": "atom", "value": "acquire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] },
"method": "acquire(?thegame[\"lock\"])","calltype": "normal","vars":{ "binsema": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 3}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "955"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "957",
          "readonly": "1",
          "push": [ ],
          "pc": "956"
        },

        {
          "code": "LoadVar binsema",
          "explain": "push value (?thegame[\"lock\"]) of variable \"binsema\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "binsema" } ] },
          "npc": "958",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "957"
        },

        {
          "code": "Load",
          "explain": "pop address (?thegame[\"lock\"]) and push value (False)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "bool", "value": "False" } ] },
          "npc": "959",
          "pop": "1",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "958"
        },

        {
          "code": "1-ary not",
          "explain": "pop a value (False); logical not; push result (True)",
          "explain2": { "text": "pop a value (#+); logical not; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "960",
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "959"
        },

        {
          "code": "JumpCond False 962",
          "explain": "pop value (True), compare to False, and jump to 962 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 962 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "961",
          "pop": "1",
          "push": [ ],
          "pc": "960"
        },

        {
          "code": "Jump 965",
          "explain": "set program counter to 965",
          "explain2": { "text": "set program counter to 965", "args": [] },
          "npc": "965",
          "push": [ ],
          "pc": "961"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "966",
          "readonly": "0",
          "push": [ ],
          "pc": "965"
        },

        {
          "code": "LoadVar binsema",
          "explain": "push value (?thegame[\"lock\"]) of variable \"binsema\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] }, { "type": "atom", "value": "binsema" } ] },
          "npc": "967",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ],
          "pc": "966"
        },

        {
          "code": "DelVar binsema",
          "explain": "delete method variable binsema",
          "explain2": { "text": "delete method variable binsema", "args": [] },
          "npc": "968",
          "local": { },
          "push": [ ],
          "pc": "967"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "969",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "968"
        },

        {
          "code": "Store",
          "explain": "pop value (True) and address (?thegame[\"lock\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "True" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
          "npc": "970",
          "pop": "2",
          "push": [ ],
          "pc": "969"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "971",
          "atomic": "0",
          "push": [ ],
          "pc": "970"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "1238",
          "fp": "1",
          "trace": [
{"pc": "1238","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "971"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "1239",
          "pop": "1",
          "push": [ ],
          "pc": "1238"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "1240",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "1239"
        },

        {
          "code": "JumpCond False 1405",
          "explain": "pop value (True), compare to False, and jump to 1405 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1405 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "1241",
          "pop": "1",
          "push": [ ],
          "pc": "1240"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1242",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1241"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1243",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1242"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1244",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1243"
        }

      ],
      "ctxbag": {
          "1128008aa": "1",
          "112800d4a": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "1000001208002aa": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "1000001208002aa",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1244",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
          "trace": [
{"pc": "1244","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1128008aa",
          "fp": "7",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "17138",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "1000001208002aa",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1233",
        "pc": "1244",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
        "trace": [
{"pc": "1244","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"waiting\"]) and push value ([4, 1])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "1245",
          "fp": "1",
          "trace": [
{"pc": "1245","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } ],
          "pc": "1244"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([4, 1]); compute the length of the list; push result (2)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "1246",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1245"
        },

        {
          "code": "Push 2",
          "explain": "push constant 2",
          "explain2": { "text": "push constant 2", "args": [] },
          "npc": "1247",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1246"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (2, 2); check if second value is less than the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "int", "value": "2" }, { "type": "bool", "value": "False" } ] },
          "npc": "1248",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1247"
        },

        {
          "code": "JumpCond True 1265",
          "explain": "pop value (False), compare to True, and jump to 1265 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1265 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "1249",
          "pop": "1",
          "push": [ ],
          "pc": "1248"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1250",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1249"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1251",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1250"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1252",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1251"
        }

      ],
      "ctxbag": {
          "1128008aa": "1",
          "112800d4a": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "100000112801b9a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100000112801b9a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1252",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
          "trace": [
{"pc": "1252","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"team1\"]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1128008aa",
          "fp": "7",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "19480",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "100000112801b9a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1233",
        "pc": "1252",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }],
        "trace": [
{"pc": "1252","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"team1\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team1\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1253",
          "fp": "1",
          "trace": [
{"pc": "1253","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1252"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1254",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1253"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1255",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1254"
        },

        {
          "code": "2-ary !=",
          "explain": "pop 2 values (0, 0); check if the values are unequal; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the values are unequal; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "False" } ] },
          "npc": "1256",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1255"
        },

        {
          "code": "JumpCond True 1265",
          "explain": "pop value (False), compare to True, and jump to 1265 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1265 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "1257",
          "pop": "1",
          "push": [ ],
          "pc": "1256"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1258",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1257"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1259",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1258"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team2\", ?thegame); push result (?thegame[\"team2\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "npc": "1260",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ],
          "pc": "1259"
        }

      ],
      "ctxbag": {
          "1128008aa": "1",
          "112800d4a": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000012480143a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000012480143a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1260",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
          "trace": [
{"pc": "1260","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"team2\"]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1128008aa",
          "fp": "7",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "21993",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10000012480143a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1233",
        "pc": "1260",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }],
        "trace": [
{"pc": "1260","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"team2\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"team2\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "set", "value": [] } ] },
          "npc": "1261",
          "fp": "1",
          "trace": [
{"pc": "1261","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "1260"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ({}); push result (0)",
          "explain2": { "text": "pop a value (#+); push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "0" } ] },
          "npc": "1262",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1261"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1263",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1262"
        },

        {
          "code": "2-ary !=",
          "explain": "pop 2 values (0, 0); check if the values are unequal; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the values are unequal; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "False" } ] },
          "npc": "1264",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "1263"
        },

        {
          "code": "Jump 1266",
          "explain": "set program counter to 1266",
          "explain2": { "text": "set program counter to 1266", "args": [] },
          "npc": "1266",
          "push": [ ],
          "pc": "1264"
        },

        {
          "code": "JumpCond False 1279",
          "explain": "pop value (False), compare to False, and jump to 1279 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 1279 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "1279",
          "pop": "1",
          "push": [ ],
          "pc": "1266"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1280",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1279"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1281",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1280"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1282",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1281"
        }

      ],
      "ctxbag": {
          "1128008aa": "1",
          "112800d4a": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "100000120802e4a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100000120802e4a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1282",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
          "trace": [
{"pc": "1282","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1128008aa",
          "fp": "7",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "24426",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "100000120802e4a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1233",
        "pc": "1282",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
        "trace": [
{"pc": "1282","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"waiting\"]) and push value ([4, 1])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "1283",
          "fp": "1",
          "trace": [
{"pc": "1283","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } ],
          "pc": "1282"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([4, 1]); compute the length of the list; push result (2)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "1284",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1283"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1285",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1284"
        },

        {
          "code": "Push \"waiting\"",
          "explain": "push constant \"waiting\"",
          "explain2": { "text": "push constant \"waiting\"", "args": [] },
          "npc": "1286",
          "push": [ { "type": "atom", "value": "waiting" } ],
          "pc": "1285"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"waiting\", ?thegame); push result (?thegame[\"waiting\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "waiting" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ] },
          "npc": "1287",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] } ],
          "pc": "1286"
        }

      ],
      "ctxbag": {
          "1128008aa": "1",
          "112800d4a": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "10000013000244a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "10000013000244a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1287",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
          "trace": [
{"pc": "1287","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1128008aa",
          "fp": "7",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "27848",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "10000013000244a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1233",
        "pc": "1287",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }],
        "trace": [
{"pc": "1287","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "thegame[\"waiting\"]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?thegame[\"waiting\"]) and push value ([4, 1])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "waiting" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "1288",
          "fp": "1",
          "trace": [
{"pc": "1288","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } ],
          "pc": "1287"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([4, 1]); compute the length of the list; push result (2)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "1289",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1288"
        },

        {
          "code": "Push 2",
          "explain": "push constant 2",
          "explain2": { "text": "push constant 2", "args": [] },
          "npc": "1290",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1289"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (2, 2); second value modulo the first; push result (0)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "int", "value": "2" }, { "type": "int", "value": "0" } ] },
          "npc": "1291",
          "pop": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1290"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values (0, 2); the second integer minus the first; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "2" }, { "type": "int", "value": "2" } ] },
          "npc": "1292",
          "pop": "1",
          "push": [ ],
          "pc": "1291"
        },

        {
          "code": "StoreVar number_to_pair",
          "explain": "pop value (2) and store locally in variable \\\"number_to_pair\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"number_to_pair\"", "args": [ { "type": "int", "value": "2" } ] },
          "npc": "1293",
          "local": { "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "number_to_pair": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ ],
          "pc": "1292"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1294",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1293"
        },

        {
          "code": "Push \"team1\"",
          "explain": "push constant \"team1\"",
          "explain2": { "text": "push constant \"team1\"", "args": [] },
          "npc": "1295",
          "push": [ { "type": "atom", "value": "team1" } ],
          "pc": "1294"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team1\", ?thegame); push result (?thegame[\"team1\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "npc": "1296",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ],
          "pc": "1295"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1297",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1296"
        }

      ],
      "ctxbag": {
          "1128008aa": "1",
          "112800d4a": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "1000001300024ba": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "1000001300024ba",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1297",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "list", "value": [] }],
          "trace": [
{"pc": "1297","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "number_to_pair": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "thegame[\"team1\"]", "value": { "type": "list", "value": [] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1128008aa",
          "fp": "7",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "30990",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "1000001300024ba",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1233",
        "pc": "1297",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] }, { "type": "list", "value": [] }],
        "trace": [
{"pc": "1297","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "number_to_pair": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "thegame[\"team1\"]", "value": { "type": "list", "value": [] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value ([]) and address (?thegame[\"team1\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "list", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team1" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
          "npc": "1298",
          "fp": "1",
          "trace": [
{"pc": "1298","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "number_to_pair": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "1297"
        },

        {
          "code": "LoadVar g",
          "explain": "push value (?thegame) of variable \"g\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "atom", "value": "g" } ] },
          "npc": "1299",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } ],
          "pc": "1298"
        },

        {
          "code": "Push \"team2\"",
          "explain": "push constant \"team2\"",
          "explain2": { "text": "push constant \"team2\"", "args": [] },
          "npc": "1300",
          "push": [ { "type": "atom", "value": "team2" } ],
          "pc": "1299"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"team2\", ?thegame); push result (?thegame[\"team2\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "team2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "npc": "1301",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ],
          "pc": "1300"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "1302",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1301"
        }

      ],
      "ctxbag": {
          "1128008aa": "1",
          "112800d4a": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "100000132001fba": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100000132001fba",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1302",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "list", "value": [] }],
          "trace": [
{"pc": "1302","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "number_to_pair": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "thegame[\"team2\"]", "value": { "type": "list", "value": [] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1128008aa",
          "fp": "7",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "33361",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "set", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "100000132001fba",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1233",
        "pc": "1302",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] }, { "type": "list", "value": [] }],
        "trace": [
{"pc": "1302","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "number_to_pair": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "thegame[\"team2\"]", "value": { "type": "list", "value": [] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value ([]) and address (?thegame[\"team2\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "list", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "team2" } ] } ] },
          "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
          "npc": "1303",
          "fp": "1",
          "trace": [
{"pc": "1303","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "number_to_pair": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "1302"
        },

        {
          "code": "Push ?game$range",
          "explain": "push constant ?game$range",
          "explain2": { "text": "push constant ?game$range", "args": [] },
          "npc": "1304",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "game$range" } ] } ],
          "pc": "1303"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "1305",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "1304"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "1306",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1305"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (0, []); insert first value into the second; push result ([0])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "0" } ] } ] },
          "npc": "1307",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "0" } ] } ],
          "pc": "1306"
        },

        {
          "code": "LoadVar number_to_pair",
          "explain": "push value (2) of variable \"number_to_pair\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "number_to_pair" } ] },
          "npc": "1308",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1307"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, [0]); insert first value into the second; push result ([0, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [{ "type": "int", "value": "0" } ] }, { "type": "list", "value": [{ "type": "int", "value": "0" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "1309",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "0" }, { "type": "int", "value": "2" } ] } ],
          "pc": "1308"
        },

        {
          "code": "Push 2",
          "explain": "push constant 2",
          "explain2": { "text": "push constant 2", "args": [] },
          "npc": "1310",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1309"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, [0, 2]); insert first value into the second; push result ([0, 2, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [{ "type": "int", "value": "0" }, { "type": "int", "value": "2" } ] }, { "type": "list", "value": [{ "type": "int", "value": "0" }, { "type": "int", "value": "2" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "1311",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "0" }, { "type": "int", "value": "2" }, { "type": "int", "value": "2" } ] } ],
          "pc": "1310"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values ([0, 2, 2], ?game$range); push result (?game$range[[0, 2, 2]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "0" }, { "type": "int", "value": "2" }, { "type": "int", "value": "2" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "game$range" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "game$range" }, { "type": "list", "value": [{ "type": "int", "value": "0" }, { "type": "int", "value": "2" }, { "type": "int", "value": "2" } ] } ] } ] },
          "npc": "1312",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "game$range" }, { "type": "list", "value": [{ "type": "int", "value": "0" }, { "type": "int", "value": "2" }, { "type": "int", "value": "2" } ] } ] } ],
          "pc": "1311"
        }

      ],
      "ctxbag": {
          "1128008aa": "1",
          "112800d4a": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "100000124801f2a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100000124801f2a",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1312",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "game$range" }, { "type": "list", "value": [{ "type": "int", "value": "0" }, { "type": "int", "value": "2" }, { "type": "int", "value": "2" } ] } ] }],
          "trace": [
{"pc": "1312","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "number_to_pair": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "game$range[[0, 2, 2]]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "1128008aa",
          "fp": "7",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "blocked"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "38958",
      "tid": "1",
      "shared": { "thegame": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "active_game" }, "value": { "type": "dict", "value": [] } }, { "key": { "type": "atom", "value": "lock" }, "value": { "type": "bool", "value": "True" } }, { "key": { "type": "atom", "value": "players" }, "value": { "type": "dict", "value": [{ "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "value": { "type": "int", "value": "1" } } ] } }, { "key": { "type": "atom", "value": "team1" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "team2" }, "value": { "type": "list", "value": [] } }, { "key": { "type": "atom", "value": "waiting" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "1" } ] } } ] } },
      "name": "game_umpire(?thegame)",
      "context": {
        "tid": "1",
        "hvalue": "100000124801f2a",
        "fp": "1",
        "name": "game_umpire(?thegame)",
        "entry": "1233",
        "pc": "1312",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "game$range" }, { "type": "list", "value": [{ "type": "int", "value": "0" }, { "type": "int", "value": "2" }, { "type": "int", "value": "2" } ] } ] }],
        "trace": [
{"pc": "1312","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "number_to_pair": { "type": "int", "value": "2" } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "game$range[[0, 2, 2]]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop an address and push the value at the address",
          "explain2": { "text": "pop an address and push the value at the address", "args": [] },
          "npc": "1312",
          "fp": "1",
          "trace": [
{"pc": "1312","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "number_to_pair": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "failure": "Load ?game$range[[0, 2, 2]]: can't load",
          "mode": "failed",
          "pop": "1",
          "push": [ ],
          "pc": "1312"
        }

      ],
      "ctxbag": {
          "1128008aa": "1",
          "112800d4a": "1",
          "13400043a": "1",
          "1340004aa": "1",
          "13400058a": "1",
          "1340005fa": "1",
          "100000130003daa": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "13400062a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "1669",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "1669","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "100000130003daa",
          "fp": "1",
          "name": "game_umpire(?thegame)",
          "entry": "1233",
          "pc": "1312",
          "sp": "1",
          "stack": [{ "type": "dict", "value": [] }],
          "trace": [
{"pc": "1312","xpc": "1233","method_name": { "type": "atom", "value": "game_umpire" },
"method_arg": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] },
"method": "game_umpire(?thegame)","calltype": "process","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "number_to_pair": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "failure": "Load ?game$range[[0, 2, 2]]: can't load",
          "this": { "type": "dict", "value": [] },
          "mode": "failed"
        },
        {
          "tid": "2",
          "hvalue": "1128008aa",
          "fp": "7",
          "name": "player(1)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "1" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "1" },
"method": "player(1)","calltype": "process","vars":{ "id": { "type": "int", "value": "1" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "1" } ] },
"method": "game_join(?thegame, 1)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "1" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "13400043a",
          "fp": "1",
          "name": "player(2)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "2" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "2" },
"method": "player(2)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "2" } },
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "1340004aa",
          "fp": "1",
          "name": "player(3)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "3" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "3" },
"method": "player(3)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "3" } },
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "112800d4a",
          "fp": "7",
          "name": "player(4)",
          "entry": "1597",
          "pc": "1032",
          "sp": "7",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "25650" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }, { "type": "list", "value": [] }, { "type": "int", "value": "24050" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "g" }, "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] } }, { "key": { "type": "atom", "value": "id" }, "value": { "type": "int", "value": "4" } } ] }],
          "trace": [
{"pc": "1604","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "4" },
"method": "player(4)","calltype": "process","vars":{ "id": { "type": "int", "value": "4" } },"sp": 0},{"pc": "1504","xpc": "1413","method_name": { "type": "atom", "value": "game_join" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, { "type": "int", "value": "4" } ] },
"method": "game_join(?thegame, 4)","calltype": "normal","vars":{ "g": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" } ] }, "id": { "type": "int", "value": "4" } },"sp": 3},{"pc": "1032","xpc": "998","method_name": { "type": "atom", "value": "wait" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } ] },
"method": "wait(?thegame[\"players\"], ?thegame[\"lock\"])","calltype": "normal","vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "cnt": { "type": "int", "value": "0" }, "ctx": { "type": "context", "value": {"pc": { "type": "pc", "value": "1004" },"vars":{ "c": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "players" } ] }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"stopped": { "type": "bool", "value": "True" },"sp": { "type": "int", "value": "7" } } }, "lk": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "thegame" }, { "type": "atom", "value": "lock" } ] } },"sp": 6}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "6",
          "hvalue": "13400058a",
          "fp": "1",
          "name": "player(5)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "5" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "5" },
"method": "player(5)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "5" } },
          "mode": "runnable"
        },
        {
          "tid": "7",
          "hvalue": "1340005fa",
          "fp": "1",
          "name": "player(6)",
          "entry": "1597",
          "pc": "1597",
          "sp": "1",
          "stack": [{ "type": "int", "value": "6" }],
          "trace": [
{"pc": "1597","xpc": "1597","method_name": { "type": "atom", "value": "player" },
"method_arg": { "type": "int", "value": "6" },
"method": "player(6)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "player", "args": "id", "value": { "type": "int", "value": "6" } },
          "mode": "runnable"
        }
      ]
    }

  ]
}
